(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    720672,      12774]
NotebookOptionsPosition[    701700,      12449]
NotebookOutlinePosition[    704400,      12502]
CellTagsIndexPosition[    704319,      12497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{{3.797334839584256*^9, 3.7973348396700263`*^9}},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"35efe13f-c88b-440f-ac50-cecc87c40273"],

Cell["Wolfram Language Meets Python ", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7972513770817566`*^9, 3.7972514076729145`*^9}, {
   3.8055254174884434`*^9, 3.805525432441852*^9}, {3.8117510979287367`*^9, 
   3.811751098483714*^9}, {3.838030376059084*^9, 3.838030381344685*^9}, 
   3.838118254958723*^9},ExpressionUUID->"8afc08d9-f262-414d-8c54-\
38ac80053bc3"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AKZkv4dSexwu1cXJyWX7byftq+c3j1+05xzMRdZyfnh4/qk9L6Upy5j2PieA
67G2T6PlvHa4PvffNXq5R96eZ3OT9yW3/y7q5t1oAAAAAMCUvKNAydq+7VnP
ozXl7Hf4y+nBwZ32nJSmLu+uac8tgKWynlcj5rx2uJ7cR2nPY2mXeYfBl7X/
LupnvwcAAAAAMCXPnJSs4d6eM961ppztCv9kXadG7NnR0dP23AJYGvtANWLO
a4fryT3D3Edpz2VpV2V8O0fqy9p/G/VzbwUAAAAAmJI1CUr2e1xP5pHnt1pL
7+4/+NieczAn3vOk0cp3mny3ac8tgKVwBoBGLL/7rOGF68k8as9laZd5pvBl
nrkpmR8AAAAAwNTa9z3V7/nN4xftcbh0Oa+p/XeU9tXL26ev2nMO5sKZrRox
e/sAvt/ru2dv29dtaers/YTryftx2vNY2mV532l7ns1V1vm3/z7qZ78HAAAA
ADC19n1P9fN8Zhqe5WpNeSc9/OXJ4eHj9pyUpi7fa9pzC2Du7PvXiDkTBK7H
70ONXt5z2p5nc+YaoNQehwAAAADAeHJ/vn3vU92s55uO+aQ15cxX+Is9fxqx
rFNpzy2AuTrebG55x5dGK++rac8tWDKfDRq9jO+857Q91+YsZ2u1/07q1x6H
AAAAAMB4rE+XM7mmk+ddnutqLXnGC//07v6Dj+15KU2Z6zzA1/nc12j53Ifr
89mg0XP2y7fZ76EPD88/tcchAAAAADCel7dPX7Xvf6qb/R7TynOv9t9U2ldZ
y9CeczAXuf7b86fR8j0R4H95r5dG7JcbP5635xYsmXvsGr3nN49ftOfZEuRd
We2/lbq5jwIAAAAA7ILzhpS1qe1xOJpnR0dP239XaV9lTUN7zsFcuP5rxPJ7
oT23AOYia+Lb12Vp6nzWw/X4HajRyx6G9jxbiqz1b/+91M1+DwAAAABgF+z3
UGqPwxE5109rKmsb2nMO5sJZjhqxvL+mPbcA2m5sNj94l5dGyzsb4Xq851Gj
9+Hh+ad8B2rPtaXI52r7b6Zu9tECAAAAALvgbEolz2x2w/MdrSlrgeGzfKZm
PUR7TkpTZo0PgPOaNV5Zo3682dxqzy1Yqnw/du9Po+d+39W0/17qZ78HAAAA
ALAL9nsoZRy0x+KInP+qNWUtMPzF9yuNWN5d1p5bAC3Pbx6/aF+Hpanznka4
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
J+bIuzykbvld274OMD/2Pcu9AQAAAABgzqzpUGqPQ8ZhLbDUL2cS/nLjx/P2
9YAxPb95/KI9xqWpy7huzy1oynf49jyUpu7i5OSyPbfgT97lIc0j70fla+z3
kO+OAAAAAMCcZT1o+z6q+nmHPVPKs9P2mJb0+Z0fmY+u8UzNecQaMef8slbe
0acRe3f/wUffgZmD3HfNfvz2nJD0+WyM9jWB+WqPT/XLvsz2OAQAAAAA+Br7
PZScA8/Uch5We1xL+lzeuZN1DTlTtn1tYAzWBmvEMqatDWaN7OHTiNnDR1O+
T+TdYb4vS/PJPkC+pT1G1c97PwEAAACAOcvaz/Z9VPWz34NdeHN27317bEv6
Z5mXeedH+/rA8tkzrBFz5i9r4718GjFr9WjxLg9pnuUMDPsA+S+ekSl5RgYA
AAAAzF37Pqr6WQ/BLuTcvDxTbY9vSf9bzpr99aeff/POD64jY6g9lqWpsyeO
tci6R9/VNVp5X017brEu3uUhzT/f7/kW51ko2e8BAAAAAMxd+z6q+mW9Znsc
MqasI2uPb0n/XdbFeabJtrzLSaOV9e/2wrEG7+4/+Nieb9KU5fqdtfftucU6
5F6Hd3lI88/7+/ge9nso+R4JAAAAAMyddXq6ODm5bI9DxpVz9NpjXNK3y5m0
OZvW802uIuvinQ+v0co6+Pbcgl3K77/2PJOmzv5ldi2/k3J/w345aRn5Ts/3
8u5SpfY4BAAAAAD4Fvs9lDHQHoeMzbmX0nLK2v3M2ZxZ2752sAxPDg8ft8et
NHX2QzMq5xdrxLyzlF36810e9jhLy8k7+7gK+z2Ua0Z7HAIAAAAAfIt12LLf
g31wBqa0vPL5kDNs29cP5s9Z8RoxZ8UzmpxNb72yRsv57eyCd3lIyy5nErSv
IyyH52PyfAwAAAAAWALnF8n5ReyD9WXScsvczfcF52PyNbnGWw+n0cq1L2O7
Pb9gKt7tqdFyfjtTy3jyLg9p2XlPH1flO7Ls9wAAAAAAlsB+D6X2OGQdTg8O
7rTHuqTr9fru2Vtn3vMlrvEasVzz2nMLpvD85vGL9nySps757Uwl7/Kw3lda
ft75xDZc/2WfGAAAAACwBFmz2b6fqn7OLmZfso6iPd4lXb8PD88/Ze2ozw/+
znpijVjGdXtuwXXYj6cRyzsY2nOLZcu7PLK+07s8pDHybj621R676pcz8drj
EAAAAADgW+z3UHJWO/uUtTntMS9pmrKmInM6a0nb1xbmIe9DaI9Laepc41iq
rHvMHs32HJKmLGPaml625V0e0pi5t8222mNX/ZzxAAAAAAAsQc6za99PVT/P
xNinrM15d//Bx/a4lzRtWTeV9VPtawxducY7J1mjle8t1hazRPZZa8TsweOq
vMtDGjtn87Mtz8aUPBsDAAAAAJaifT9V/ZxhxL7leZq1FtKYZW5nvUXmefta
Q4f3x2nEsm6+PbfgKp4cHj5uzxtp6ty74CpyHfTuOWnscu5E+1rDcrl3oWS/
BwAAAACwFO37qernHDQaPFOTxi/rqzw3Xad8t2iPP2nqsm60Pbfge9hbrRGz
ppfvketfvod+eHj+qT1mJe22fNfxDj6uw71pJdcRAAAAAGAp8sy8fU9V3S5O
Ti7b45B1yvms7fEvafdlvVXmu2eo6/Lu/oOP7bEnTVnWlHl3EUvg+qvRsqaX
b/EuD2l9OVuC63JOhVJ7HAIAAAAAfC/7PeScTJpe3j591Z4DkvZT1uplzp8e
HNxpX3vYPefLa8Syjr49t+C/WLemEbOmly/xLg9pveU8ifY1iOXzvVm5Z9Ue
hwAAAAAA38taa9nvQVPOaXUGsbS+8tnz7OjoafsaxG7lrOX2WJOmLuuC2nML
viRr4tvzQ5o67yPl33Kt8y4Pab1l/revQ4zBczF5LgYAAAAALIlzjOQcI9qc
AS+tt8z9fBfJdaB9LWI3rKHQiDlrnrnJHmrfpzVa3qnEn3KNy3n+3uUhrbtc
A3I9aF+TGIP33st+DwAAAABgSez3UGqPQ3AGvKSc02kN9XiyHsfaPI2WtWbM
jbPuNVrZv3R6cHCnPbfoym8De4cl/ZnPBaZkv4e8Rw4AAAAAWJI8O23fV1U/
69WYA/vPJKWso875vT6bxpF1Oe1xJU1d1te35xZEPjPb80GaumdHR0/bc4sO
7/KQ9KVyXWhfnxhLe0yrX55FtMchAAAAAMD3st9DyXnqzIWziSX9vZzn6wzP
MViPrBGz7ow2++k0YvbTrZN3eUj6Wrk2tK9RjKc9rtXP73kAAAAAYEmON5tb
7fuq6me/B3ORszzf3X/wsT0nJM2rXBec87x8b87uvW+PJWnKfn/06A970mjx
vVkjlnc6eMfbeuRvne/4rmWSvlauDz4XmJpnYkqeiQEAAAAAS9O+r6p+zjJi
TrJuMusn2/NC0vzKteHi5OQyz+bb1yquLut0XN81Wtag0ZLPw/b4l6bOHrp1
yN855/X7Xijpv7K3ml3xznsl+z0AAAAAgKVp31dVv19/+vm39jiEv3tyePi4
PS8kzbvXd8/e5lrRvl5xNdZVaMSy7r49t1gX35U1Yu5LjM27PCRdNe/4ZFfc
l1BybgMAAAAAsDRvzu69b99bVTdr1JijrPdpzw1J8+/Dw/NPeU+V57TL4Ux6
jZj9Z+xL3nHlTHyNVu5LtecWu+FdHpK2KdeN9vWLcbnnrNQehwAAAAAAV2W/
h6ytYK5yfn97fkhaTlkTkjVl7WsX3+ZsZ41W1rFmHX57bjE+v981Wq6fY8q5
/K5XkrYpvxWd58Au2e+hfP9sj0MAAAAAgKvK2sj2/VV1s9+Ducrz3Zzd354j
kpZV1odkjVn7GsbXOZ9eI+Y7NbtmbZpGzPuRxpHvd3mPm+94krbNHkD2wfMw
+e0OAAAAACyRNSNynhFzlrP6rReRtE25dmTNmfUi85Q9Oe0xIk1dflu15xZj
+uXGj+ft8S1NXb6ntecW1+ddHpKmyh5A9sFnluz3AAAAAACWyH4PpfY4hP9i
TbCk6/b67tlba0fmJ3+X9tiQpi57Vdtzi7F4551GLO9jy9huzy+2410ekqbO
HkD2xX4Pud4AAAAAAEvknFAl6yyYuzyHac8TScsv62Wf3zx+4XNvHqxh1ohl
TLvGMCV74zRa2SNgb9wyZf+0dbKSpi57ANvXN9ajPd7Vz3s5AQAAAIAlst9D
KeOgPRbhW6wrkTRlL2+fvrLWsC9/g/ZYkKYu6/Pbc4sxeM+dRix7b9tzi++X
d3lkXaQ9upJ2UfYA5jrTvtaxHu0xr36+iwIAAAAAS5TnKe37q+pnvwdL4Bx4
SbsoZ4lmPW37GrdmWUPYHgfS1LmucF3ZD5c1kO2xLE2Z/XDLkXd5eL+QpF3n
njT75FmYkusOAAAAALBU7fur6udMI5bCujdJuyrXlouTk0tni3Z4h5NGK9cU
7xDiOrIfsT2OpSnL3v3s4W/PLb7Ouzwk7bNcb9rXPdbFu+6V7PcAAAAAAJaq
fX9V/TxfY0lyXnZ7zkgau5xlnDON29e7Ncn6T/v5NFpZr9+eWyxT9h+2x680
ddbWzZd3eUjad9nv3772sT72eyjZfwwAAAAALJXzlJX1RO1xCFdhDZykfZSz
jfMOLM+C9yNrDdt/c2nqfM/mqlwLNWLOmJiffL/N91zv8pC077LP329sGvJ9
pD3+1a89DgEAAAAAtmW/h5ypxhLlzOz23JG0nl7ePn11enBwp33tG539fBox
7wvie3nXkUbMu47mJWeb53tte1xIWm/e90SL/R7Kb632OAQAAAAA2JbnvLLf
gyWyHk5So6xZfHZ09NR5pLtjP59GyxnGfC9nMWi0cv073mxutefW2nmXh6S5
5H1PNHkOJs/BAAAAAIAlc66RnGvEUuWs/fb8kbTO8tmZd1FYwzi9XNvt59No
WVfCt/hdrhHzfqMu7/KQNKde3z17274usm72VsvvcgAAAABgyawrUWqPQ9hW
ztlvzx9J6y7Pi61nnJZru0bMecZ8jT3MGrHsM2jPrTXKuzzyPcq7PCTNqVyT
vO+ONvs9lHNb2uMQAAAAAGBbOe+vfZ9V/TxzY8mcWSppDmUNS9Zz+0ydRs5/
bf9NpanLuv723GJe8plhXbZG6939Bx99H9qvfL7kd7F3pEmaY74DMwfteaB+
zmAAAAAAAJbMfg+ljIP2WITryJqi9jySpD/LejufrddjDbRGzNnG/Jt9yxox
63r34893efgtLGnOPb95/KJ9vYRozwX1cz0CAAAAAJbseLO51b7Pqn7WpLJ0
WeviLFNJcyvr77IOz/ru7diXrBHL+v723GIe8vnQHo/S1FlHt3ve5SFpKeWd
je1rJoRnYEqegQEAAAAAS9e+z6p+1mQwAuuCJc21rMe7ODm5zBqD9rVyaX79
6eff2n8/aeqyzr89t+jK54G12hqtN2f33rfn1si8y0PSksr1yrkHzIV7xkr2
ewAAAAAAS9e+z6p+WUvZHocwhexdas8nSfqvshbyyeHh4/b1cknyb9b+u0lT
lnX+9n+tmzXbGq1c16zrnV4+K7Jn2P4wSUsq16y8i6h9DYU/2e+h5LsqAAAA
ALB01tAp6wfa4xCm8vL26av2nJKkb/Xh4fmn7Lf0vPnbnIOvEct6//bcoiO/
vdrjT5o65yVPK+/ycK9O0lLzLjvmxntDldrjEAAAAADgujxDVsZAexzCVLJ2
2pnJkpZU9qlZJ/nf8k6U9t9Jmjp7rtfH2cIaMdeyaXiXh6QRym/b9vUU/s1+
D+X7VXscAgAAAABcl7PwZb8Ho3EWvKQllr1qOQvVOz++zJn4GjF7vdYj13bf
TzVa3lV0fd7lIWmU8pngtyxz5PmXPP8CAAAAAEbgfCM534gROT9Z0lLL53L2
NmTvWvtaOife36QRy3y3Lm4dXt89e9seb9KU5frlu8p28u+We3EfHp5/av8d
JWmK8plwenBwp319hS+xr1L2ewAAAAAAI7DfQ6k9DmEXnt88ftGeW5J0nfJM
+snh4eP29XQusobI+fgaLWtPxuc7qUYs76Voz62lyXc6e78kjZjfrMyZ/R7K
mSrtcQgAAAAAcF3OwFdyrjCjenn79FV7fknSdcv5z9mj6/PaummNWcZ1e26x
G9mn1h5f0tRlz0J7bi2Fd3lIGj3rqJm79hxRv3wXa49DAAAAAIDrst9DKeOg
PRZhF7I2+t39Bx/bc0ySpir72Nb+ue1sbI1Y9gW05xbT8j1UI5Z9C/affpt3
eUhaQ/me077ewre054n6OV8BAAAAABhBzhps329Vv7WvG2VsWT/5+6NHf7Tn
mSRNWdbWPDs6errGNZf5b3Zd12hlTq9xPo/Me+Y0YvamfV2u4d7lIWkt5fdY
niu0r73wXzz7UvLsCwAAAAAYRft+q/o544jR5XzV9jyTpF2UdTYXJyeXa1tr
4x11GrHsD2jPLabhu6dGLHsZ2nNrjvKdxP4uSWsr33Xa11/4FvcNlOz3AAAA
AABG0b7fqn7WbbAGGeftuSZJu+zN2b33a1p347quEVvTHB5V9t95B5FGK98x
2nNrTvIuj5yb4V0ektaY+8gshf0eSt6jCQAAAACMIs/t2/dc1S3ngrfHIezD
67tnb9vzTZJ2XdYeZg3OGt758e7+g4/tf29pyrJPYA1zd2R+X2u0cl2yTu4z
7/KQtPbs/2NJnBGh1B6HAAAAAABTsR5FntWxFlmnZG2wpDWVNYlZm9i+/u6K
c/Q1Yvmu0p5bbMeaMo3Y2t875F0ekvQ5+/9YGt/NletWexwCAAAAAEzF2YSy
34M1OT04uGNtsKS1lTWKz46Ono64PifrUNv/vtLUZW1Se25xNdlb1x430tSt
+V2g+d2Y+2V+O0rS50Y+R4Axee4lz70AAAAAgJE450jOOWJtrA2WtNbymZ81
D3kvRvtaPCXrODRi1tQtR/bSOftfo7XGdw1lLmd/rHdCStI/sxeZJfJee9nv
AQAAAACMxH4PpfY4hH1z7ZO09vLcO2sa29fjKWR9prWZGq3szxrxnTwjen33
7G17vEhTlutP3m/Rnlv74l0ekvT18j2nfZ2GbdjvoTW/qw4AAAAAGE/OjW3f
d1U/a8lYI8/9JOn//V/OpM8euKW/8yNrNdv/ltLUWV83f89vHr9ojxNp6jKu
23Nr17zLQ5K+XX4rumfMUrXnj/p5NxEAAAAAMBL7PZQyDtpjEfYtz6zz7Lo9
/yRpLuVs6yV/J7DuWiO2hnXXS5V9Zt4HoNEafZ9Z9rfmrGdzV5K+nbXSLFl7
/qif39IAAAAAwEjyrLt931X9lry2E67DOj1J+t+yFy5nXi/xLFfvbtJo5XtK
vq+05xb/lOuj9wJotEY+xz3fa3xHkKSrZb8HS+WZl5JnXgAAAADAaNr3XdXP
WUesmfPgJenLZZ153vmRtRLta/X3yjpV+/g0WtlXMOoa7KXK+wHa40KautHW
xHmXhyRdL/s9WCrvtFca7bstAAAAAED7vqv6eX7HmnkGKEnfLmdi52zs9jX7
e7iua8SyZrk9t/jsyeHh4/Z4kKZupHsC3uUhSdM00mcD6+KegJIzEwAAAACA
0XgOLuvHWDPPACXp+/vw8PxT1v3M/Z0fzt7XiGWfQXturZ13CGnEck+oPbeu
K99L8v3E/JSk6bLfg6XK2G3PH/Vrj0MAAAAAgKnZ76ER1nfAtuz3kKTtenn7
9FWuoe3r+Ne8u//gY/vfSJqyrGOe+16r0fntrNFa+nUl++Be3z172/53lKQR
s9+DpbLfQ/mO2x6HAAAAAABTy1q99v1XdbPfgzWz30OSrlfe+fHs6Ohpzr1v
X9P/LutXnfOt0fK9vce6MY3YEt8b9Oe7PPL9o/3vJ0kjZ78HS+V5l/xuBgAA
AABGZN2KnHfE2rXnoCSNUL5PZF3FnM4Jzz6U9r+LNHXW3u3f6cHBnfbfXZq6
fGa359ZVeJeHJO033zlZKu/kk/0eAAAAAMCI7PdQao9DaGrPP0karTxbz16L
9vU9nO2pEcv7ydpzay3y7iLvEdBovbv/4OPc3sv1Jd7lIUm97Pdgqez30MXJ
yWV7HAIAAAAATC1rhdr3X9VvCWs9YFfa80+SRi3rM7NOqPnOD2u1NWIZ076/
74f3CWjE8s6a9tz6L7lPZb+mJHWz34Olas8d9XP9AgAAAABGZL+HkjOCWbP2
/JOkNZR1m63vG1nX2v7vl6Yu+xAa82lN8p6i9t9ZmrrnN49ftOfWl2QPW/63
2aMpSfPIemmWqj131G+u33cBAAAAAK4j5y2377+qn/0erFl7/knSmso6zjx7
3/e7CfL/Z/u/XZo661h2J7+Tf3/06I/231iasjnuE/MuD0maZ/Z7sESedSl5
1gUAAAAAjKp9/1X9rBVjzazlk6T9l2tv1nfm3Rv7ut6/Obv3vv3fLU1Z5tE+
59CavLv/4GP77ytNWa4X+95r+TXe5SFJ889+D5bIu+yV7PcAAAAAAEbVvv+q
fp7hsWbW/0pSt1yHnx0dPd319T7rS+3x02hlX8Ku587aXJycXLb/rtLUzWHd
W/aneZeHJC0j94pZIvs9lOayxxkAAAAAYGrWOitrmtrjEFpcAyVpHmUvRtYV
HW82t3Z1zX9yePi4/d8pTZ3v8tOxRkwj1rxGZL1d9nR6Z44kLSv7PViijNv2
3FG/9jgEAAAAANgVa52VMdAeh9DiGihJ8+v13bO3uzqL3Nn9GrHsZdrFfFkT
7wDSiLXeAfTnuzzMKUlaZvZ7sET2eyjfPdvjEAAAAABgV/IMvn0fVt3s92DN
7PeQpPn24eH5p+c3j19kHfaU137njGu0sq5l6nmyNr4TarRyXdjlO7P+zbs8
JGmc7PdgiTznkudcAAAAAMDInHsk5x6xZtb2SdL8y3eVrN3IeeFTXPvzf8eZ
4xota1u2l31l7b+fNHXZe7GP+ZM9Jd7lIUljZb8HS+Qer/wmBgAAAABGZr+H
UnscQsvru2dv2/NPkvT95fn9FGtY83+j/d8iTZ21eVeX/V/tv5s0ddl/seu5
k89R6yolacx8p2SJfC/RxcnJZXscAgAAAADsyi83fjxv34dVvxubzQ/tsQgN
9rxJ0jLLOeK5hudc8W0/A+z504hN9R6cNchvoA8Pzz+1/2bSlGVM7+r3fT5z
s47Ouzwkaezs92CJ2vNG/Vy7AAAAAICR2e+hlHHQHovQYL+HJC2/7NvY5ruM
td4asV2u9R5N3oHQ/ntJU7eLPV/e5SFJ68qaaZaoPW/U7/nN4xftcQgAAAAA
sCs5n7F9H1b97Pdgrez3kKRxyjr3PN+/ylr3rItt/++Wpi57oHb5/WkETw4P
H7f/TtLUTbnGzbs8JGm92e/B0njGpeQZFwAAAAAwuvZ9WPVz9hFrZb+HJI1X
1qbm3P7vPePcZ4FGLOfx7/hr1GJlPZg17BqtvH9jivmRvVDZM9b+75Ek9bLf
g6XxDnsl+z0AAAAAgNG178Oqn+d4rJU1vpI0dln/+j3r3vP/rv2/VZqy7GfI
vobdf5tannf3H3xs/32kKct8v8q7rf4t14r8Lsp7str/LZKkfu4TszT2eyhd
5/swAAAAAMASWN+mi5OTy/Y4hIa826Y9/yRJuy9rYbNu6Wvr3533rxHLvoY9
f7WaPXt9NWJ5J8c288G7PCRJX8p+D5bGd3yl9jgEAAAAANg1+z2UMdAeh9Dg
/DdJWl9Z25rr/78/E7Lutf2/TZo6+7r/4nufRuyqc9y7PCRJ38p+D5bGfg/l
/I72OAQAAAAA2LWXt09fte/Hqpv9HqyVdX+StN6y1jXvebqx2fzw5+dC1s22
/3dJU/el/U1rk3nuHT4arau8wyfXAe/ykCR9T747sjSeb8nzLQAAAABgDZx/
JOcfsVb2e0iS8j0o60NODw7uZE141s+2/zdJU5Yx/vd9TWtknbtGK/M6n1v/
Ne4z77Ov0bs8JElXyX4Plsb762W/BwAAAACwBvZ7KLXHITTY7yFJ+ntZI5B3
fHgPgEZrzetfst69/e8vTd2zo6OnXxvz+Y3jnGtJ0rbZ78HS2O+h3Mdpj0MA
AAAAgF2z3llp7Wf+sk6uf5IkaS1l30P7u9e+5f0H9m9ptPK+mn+Pde/ykCRN
lf0eLE17zqhfzrRrj0MAAAAAgF2z3lnJszzW6HizudWee5IkSfsq+x/a37/2
Jevf391/8LH9by5NWfZz/P2sBu/ykCRNnXvELE17zqjfGs82AAAAAADWx3pn
Jc/yWKv23JMkSdpX/14rPrKLk5PL9r+3NHX53Z45/Ozo6Kn9TJKkXeQeMUvi
2ZaS6xYAAAAAsBbt+7Hq5wwk1qo99yRJkvZZ3gXQ/v61a08ODx+3/52lqXt9
9+xt5u/vjx790f7fIkkaN+umWRLvrldy3QIAAAAA1qJ9P1b9fv3p59/a4xAa
2nNPkiRp32U/RPs72K7kjF/r4SVJkrbLummWxH4PpbW8wxIAAAAA4M3Zvfft
e7LqdnFyctkeh9DQnnuSJEn7Lvshsi+i/T1sF/y2lSRJ2j77PViSnGHVnjPq
1x6HAAAAAAD7Yk2MMgba4xAa2nNPkiSp0bv7Dz62v4dNzXovSZKk62W/B0vi
+79ylkF7HAIAAAAA7MvL26ev2vdl1c1+D9bqw8PzT+35J0mS1Cjro9rfxaZy
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
tI/lreW7v8wm78javyttu9xDZs5i7ie9UwUA+FDGSbeNofLeqf3/DQCgJXMT
spdInqdnH0p71GtEvr3OEeW5fPu3t+es92Ck9vEsSXpXrvG+Achs8hzlU++c
JEnz1r7+MI/2sbylPBNkNnk3Zj24zinnw8xhzDMU+2cAAEf1pefu2b+6/f8R
AGAN2SMkY5+Mjz7+9pk0Mu9pOCJzvs7POYOR2sezJOnvZb5L9hmwLpy98i0P
SVL7WsQ82sfyVsr+Y+Y0MxvvCDSq3Htmr8Y8S8meA+1jGwBgaXfdY9WaDwBg
NpmLkD1A8hwo82h9u0Nr51t6HE3Ou9bSnZf1HozUPp4lSZ8v81/MVWAvfMtD
knSqfU1iHu1jeSv5DiCzyTHd/l1p7vL+Ke9eM8fRejkAYCYZ39x1TJT5j9nv
uv3/GQDgXJmDkLWumYdgv0ltJeuqOZo8Y7e+7v5Z78FIxkGStI8yTyH3C775
wdbkmMyxaUwhSXq/9vWJebSP5S2U91jtvwOM5L2AGuWYy7uV0zdAPF8BAPYo
45hzxkHWfAAAe5DnhtknJnt45DnO+CdE0riMsTmaHPPt390ea//dmIexkSTt
qzyXz72tvSlpyzg+cw/N05Ik3Vb7OsU82sdyu6ypNSeZ2fjut7ZSjsXc12aP
SO9nAYCty3jl3Ofx7i0BgC3KWtbszfH8+vqZ/SW1tzI2N8bmaO7zvUn9Vftv
xjys95Ck/ZZzePY2aF9LOI7TtzzMz5Ikfan2NYt5tI/lduYfM5u8v23/rqTP
dfoGSJ632GsDANiKEd/Iy3N989EAgJY8685cg+xvar6BZinHcvu3BWvLHkrt
396eav+9mIf1HpK0/7LPQeYieE7PUnzLQ5J039rXLubRPpabZb/59r8/jJT9
+tq/K+m+5ZlL9pjMOTnHcPt3BAAcT979jJoTaT4aALCGjF9O3+7I3ETzDDRz
mUvT/s3B2qzbu3vtvxXzsN5DkuYq98vtawtz8C0PSdIlta9jzKN9LLfK85r2
vz2MlPuLzJtv/7akEeU+OXtR5p7ZN0AAgCWNXOtxynw0AGC07B+ZvTIyzvAM
UEfM/l0cjXc+d6/9t2Ie1ntI0lyZF8Yo9t6VJF1S+zrGPNrHcqPsdebbfcwm
30do/7akpcp5O89jsgdH7qWdwwGAUTJnconxizUfAMC5svfFmydP356+3bHE
WEXaY74NzNFkrZ/vN3259t+JeSz1jEiS1Ml6D0ax3kOSdEnt6xjzaB/LjfKu
rP3vDiPlGwjt35W0dtmHO8/ec/znvVf7dwgA7M/S7/EzTmn/NwIA25d5A/l2
QfZzsZe79Oky7923gDka73++nLVgjJK1tu3jWZI0Lus9GMV6D0nSJbWvY8yj
fSyv3YuHj162/81hpLzfsr+T9Fenb4BkXZ9vgAAAn7PWO3xrPgCA9+VZXsYH
eU6dvSzWGI9IM5Xfjed+HE2uGe3f3paz3oNRrPeQpLmy3oNRrPeQJF1S+zrG
PNrH8pp5D8CMvBeWPl32xMzemNkj0zsfAOBk7f1RfYsMAI4pz6LzPCJzB/N8
wp4t0pjynb727xvWlvmK7d/eVvPsn1Gs95CkubLeg1Gs95AkXVL7OsY82sfy
WuVdmjk2zMaeTtL9y3Od/HYyzzN7arZ/xwDAuvIdsLXHH+5HAeAYcr3P84bM
RbdHi7RsmZPb/s3DmrKG0LXl9qz3YBTrPSRprqz3YBTrPSRJl9S+jjGP9rG8
Vtnbvf1vDSO5n5DGlPmX2WMzz/Hzu/IdKACYV+ZgtvbVzv+ucQYAzCPX9awj
zfMEe65LnfIbbJ8LYE3Ne9otZ70Ho1jvIUlzZb0Ho5ifJUm6pPZ1jHm0j+U1
yjze9r8zjJT3yZ7pS8uVfdKyF2f25LQXNwDMYQvzYjLGsOYDAPYp7/azp1Ce
NT+6uvq6OaaQ9Fe+o8cRNb5ZufWs92AUvy9JmivrPRjFeg9J0iW1r2PMo30s
L509VJlR3iu3f1vSkcq1JM+DsrdTnve7rgDAvuTanbUW7TFFyv+P9r8HAPB5
v//w45+5/3/x8NFL3+6Qtp011RyRbxB8WP492n8T5mAupyTNlfUejGKMIEm6
pPZ1jHm0j+Wls6cLs8k+gu3flaSrq+zlmW+A5DfpWgMA27WltR6nMoZo/7sA
AO/kvj5zRbPHSvt7YJLun3lcHFHuK9u/va1kvQejmMspSXPlPoFRjBEkSZfU
vo4xj/axvGTZf6397wsj5dv03jlL2y3PjHLtyR6g2Qu0fc4AALb7bTxrPgCg
I8/Xfvnm8a+5Fm9tTaik8/M+iKPZ4t4Graz3YBRzOSVprqz3YBRjBEnSJbWv
Y8yjfSwvVZ5xtv9tYSTP7qX9lfVZmWOa902+AQIA69v6fqf5Tlj73wgAZpbn
aadvd2Seh31UpLnLWq72eQfWlD2HXNus92Acczklaa6s92AUYwRJ0iW1r2PM
o30sL1GebWaftva/LYyU/cnavy1Jl5d1W5l7mvfPrlUAsJzM92hf9++SOWkA
ME7us7OeMvfdj66uvm5f5yWtm3dDHJG5Z9Z7MI7fkyTNlfUejGKMIEm6pPZ1
jHm0j+UlMl+G2bx58vRt+3claZnyHjrPmvJOKr/17D3aPucAwN7lnrB9jb9P
vgMGAPeXPc1zH509UnJf3b6eS9pGedbm+RpHs7d74NFlLND+GzCHXD/ax7Mk
aVzWezCK9R6SpEtqX8eYR/tYHt3z6+tn7X9TGCnPFn2PWzpW2YM0e5FmT1J7
EgLA/exxrbR9iAHgy/JuPXsl5Pmvb3dI+lz5vm77nAVry/Pk9m+vlbmcjNQ+
niVJ4zJGYBTrPSRJl9S+jjGP9rE8srzns28Ts7E/oaSUc0H2Kcsc1uxh2j43
AcAWZc3EXtdK5/+3azwA/CXXxOxVnvvgzNtuX6cl7a/MfW+fy2BtR71mmsvJ
SO3jWZI0LmMERrHeQ5J0Se3rGPNoH8sjy/iq/e8JI2Vv//bvStI2yxrH7Gma
vU1d/wBg32s9TmVujj0MADiaXPtO3+7IXIy9X88lbaesG2uf42BNR/1evLmc
jNQ+niVJ4zJGYBTrPSRJl9S+jjGP9rE8qrwPbP9bwkiZr9b+XUnaV5kjmr1P
8y4755D2eQwA1pI5LVkL2b4Wj8iaDwBml/vV7HGSvfePug+5pPWyTwpHc8R3
S+ZyMlL7eJYkjcsYgVGs95AkXVL7OsY82sfyiPJesP3vCCNlfpf33ZIuLXu5
5TnW6Rsg5o4CMKMZx86Z/9r+dwWAEXKdfvPk6dvTtzva11hJxyvPx37/4cc/
2+dDWFP2A2r/9tbMXE5Gah/PkqRxGSMwivUekqRLal/HmEf7WL40z+qZUeZ3
tX9bkuYse5/nHJO9VH0DBIAZzDp31JoPAPYo779zv/n8+vrZLN/ekrT/fEOP
I8p3oNu/vbWyLyAjzbaniCQdOes9GMV6D0nSJbWvY8yjfSxfWvaoaf8bwkjZ
87D9u5J0rE7fAMn5xxpKAPZk9nXSmS/b/jcGgE/J/WOezWY+6azrLyXNk/XU
HNGRrs/tf2vmcaTfjSTNnvUejGK9hyTpktrXMebRPpYvyfN5ZpP35PlmTfu3
JenYZQ/W7MWaOaZ5dtE+NwLAbY6yV6k9DgDYguyLn/vD7BWQ+0XPryTtMeup
OZpcv4/yva32vzXzsN5DkubJeg9Gsd5DknRJ7esY82gfy+eW55O+v81sPEOU
tNXyDfPMq82cU98AAaAt16P2tXHN8g2u9r85AMfy23ff/5Hrbfbbyf1g+1oo
SaMytuZock0/wjrN9r8z8/CuVpLmyXoPRrHeQ5J0Se3rGPNoH8vnlueT7X87
GCn7I7Z/V5J01/KOMM/Icu7K8w1rMAFYy9HWeqRcd90DA7CU3M9l/nPu73Kf
d4Q5oZKOm7E1R5TrfPu3t3Ttf2PmYb2HJM2T9R6MYr2HJOmS2tcx5tE+ls8p
7x7b/24wUt4vtX9XknRp2fM1e7++url57b05AEs4yr6kt2VeGgCj5B117tty
/5ZvKLevcZK0dnmGZe8Sjmb2Pcfa/77Mw3oPSZon6z0YxXoPSdIlta9jzKN9
LN8343Fmk/dK3q1LmrXTN0Cyh5z36ABc4shrPU6ZlwbAff3+w49/5n7sxcNH
L81dk6R3Pb++ftY+R8Pacty3f3tLlTFP+9+XOcy+NkqSjpT5ZYxivYck6ZLa
1zHm0T6W71Pm9nhex2yyl2L7tyVJa5X1bXmvmL1k81ykfQ4GYB+skX6XNR8A
fE7uszJHLfddrp2S9PmyFq593oY15V4y95Tt394SedbMKNZ7SNI8We/BKNZ7
SJIuqX0dYx7tY/k+ZS+69r8XjPTLN49/bf+uJKldnrXl/XrOidZ1AvCxmeej
nJu9iAGIfPsq91G5n3KtlKTzynm0fT6HNeX564zfzrTeg1Gs95CkebLeg1Gs
95AkXVL7OsY82sfyXcs3ENr/VjDSrM/UJenScm7MPNa8V8mzE3uYAxxb3sm0
r01bzD0ywLHkvuj07Y5cGz1TkqQx5Xya9XPt8zysacb5atZ7MIr1HpI0T9Z7
MMqM42dJ0nq1r2PMo30s36XsT2euJ7Ox76Ik3b2cMzOvNXsuegcPcBw597ev
QVsucxDafyMAlpH7nlc3N69zLXx0dfV1+5ojSTOX86x3UBxNxhnt397IrPdg
FOs9JGmerPdgFOs9JEmX1L6OMY/2sXyXzOtkNp4VStLl5Rldzqdvnjx96508
wHys9bhbWQvZ/lsBcJl8Azb3Nadvd7SvLZJ0xLLXSPt6AGub6b7beg9G8Q5X
kubJeg9Gsd5DknRJ7esY82gfy18q+8u0/41gJPcBkrRM2Yvx+fX1s4wdvN8D
2LesYWhfV/ZU5gi3/2YA3F3uV3LfkvsX3+6QpO2Uue/tawSsbZZv0dsLgVG8
x5WkebLeg1GMDyRJl9S+jjGP9rH8uYy9mU32n/ceX5LWK2OJFw8fvcw82OyZ
274OAPBl1nrcv39cXf3TdzEBtin3Ibm25b5klvmUkjRz5oxzNHlvlXvK9m/v
0vJNhva/JXMwn1OS5smcM0YxPpAkXVL7OsY82sfyp8qzxTxjbP/7wEjZt7H9
25KkI5fxRc7Fef/nGyAA25M1C+1rxV6z5gOgL88yc5+R+43cd8wwd1KSjphx
NUczw7249R6MYj6nJM2T9R6MYnwgSbqk9nWMebSP5U+Vfbjb/zYwkn2KJWmb
ZY/df3311c85T3ufD9CTc7B5sZeVbwnaNwFgPbl25T4i9xO+3SFJ82Q/Mo5o
7++wrPdgFPM5JWmerPdgFOMDSdIlta9jzKN9LN/Wi4ePXrb/XWAkc9ckaT/l
fJ3nf3lHmPWn3u8DLC/nWuPlMWW+sWsXwHg5t+b+IPcJuV9on+8lSctmXM0R
ZQ1r+7d3btZ7MIr5nJI0T+aeMYrxgSTpktrXMebRPpY/zjN0ZmSPR0nad9kv
Pe87X93cvM7znPZ1BWAmuf8zXh6bfcsALpdxf8b/z6+vn+V+oH1ulyStX54F
ta9HsLa9rmu13oNRsodf+3iWJI3J+IBRrPeQJF1S+zrGPNrH8vtlP9c8Q2n/
m8BI2TOg/duSJI0v7z5zjs8ev7//8OOf7esNwF5Z67FM5qYB3F3G8xnXZ3y/
1zmOkqRlytq/9nUK1pQ9Gfa41tU9MCO1j2dJ0pis92AU6z0kSeeWZyzt6xjz
aB/P7+e5ObMx5pek45Qxevb+zbND3wABuJvMx2ifv2fO9+oBbpfxesbtGb9n
/5n2+VqStO085+Fosjff3sZIvnPJSO3jWZI0Jus9GMXcL0nSuXlewUjt4/lU
3q+2/y1gpOyBtLfn4ZKksWXP+sy1/eWbx7/6hhnAh6z1WKdcg9p/a4CmjMNz
Lsx1xzelJEnn5Nv0HFHGT+3f3n0yf4KR2sezJGlM1nswivUekqRz87yCkdrH
c8qz8syNb/9bwEhZw9T+bUmStlXGPBnLn74BYvwDHNXe5o3sPWs+gKPI+Pr0
7Y6Mu+3DIUkaVdYMeo7D0WRM1f7t3TXzJxipfTxLksZkvQejWO8hSTo3zysY
qX08J9/CZjavbm5et39XkqR99Ojq6uvsNZxrh70igSOw1mP97EcMzCrntoyj
M57OuLp9vpUkzZ3v1HNEe9nbzPwJRmofz5KkMVnvwSjWe0iSzs3zCkZqH88v
Hj562f43gJEy18D+kZKkS8p4P2OkN0+evv39hx//bF/bAEbJWLl9jj1q1nwA
e5dxccbHGSdnvNw+r0qSjpk5YxxNvmuT79u0f3tfyvwJRvKeV5LmyNidUaz3
kCSdm+cVjNQ8lvN8sP3fDyPt5bm3JGlfZa/i7KWXvYt9Fw3YK+ui++V6knuW
9rEAcBcZ9+a9fMbBvt0hSdpS+WZh+zoJa9rD/Xz+/7X/nZiH9eWSNEfWezCK
9R6SpHOz3oORWsexvUWZUfaYbP2mJEnHKusLc93JHAPfAAG2Lueprc8NOUq5
fljzAWxNrhMZ12Z8ax8NSdLW836LI9rDHLf2vxHzsN5DkubIeg9G2cNYWJK0
zaz3YKTWcWz/I2bz5snTt63fkyRJmWuQ+4Q8u8wzJ3N5ga3wDbzt5VubQFOu
C6dvd2T8aj2gJGmP+XYeR5RvD7d/e5+r/e/DPKz3kKQ5st6DUaz3kCSdm/Ue
jNQ4hp9fXz9r/3fDSHmvY36CJGlrZT7vv7766ue8i7XvJNBgrcd2y/WhfXwA
x5BxaMajOe+4JkiSZsr7Wo4oY7r2b+9Ttf9tmIf1HpI0R9Z7MIr1HpKkc/P8
kJHWPn7tecSMPPeTJO2l0zdA8l2q33/48c/2NRSY25bngciaD2C8PPPLOPP0
7Y72eU6SpKV78fDRy/b1F9a05X0d2v82zMO9jCTNkfUejGK9hyTp3Kz3YKS1
j9+Mgdr/zTDS1r9fLUnS58pa3Hx7Ldcz4zRgJGs99tEv3zz+tX2sAPuV8WPG
kRlPZlzZPqdJktTImJqjyR4yW/zmffvfhXnk/qZ9PEuSLs96D0ax3kOSdG7W
ezDSmseusTSz+e277/9Y8zckSdIaZY++7E+Z+Qq+AQKcw5rofWV+GnAXGRfm
fJFxov1uJUn6sLwraF+rYU1bfD/md8gomdPQPp4lSZdnjhqjWO8hSTo36z0Y
aa3jNvMG2/+tMNKWv1ktSdLIsl9f9jTLc9E8z8o1sH0dBrYrc4Hb5y3dP/Ni
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
D+cXj9nHKwDQl1kPVcs9QACYF+tJVcvMBwDQU6wrfDdZelnmPQDmz/5K9cqz
XgBaWY9Izxf3KT0HBYDlifsp2esMaWj25gHAPJn5ULV8Lw4A6Ons4OCNmQ+p
PfMeAPNnf6V6Zd4DgFZ3u9199nVMmnt/Hv5xmX2sAgB9xR6n7DWGNLRv7y+f
zHoAwHxtN5tTe9xUKTMfAEBP18fHV9nrG6lqse/TfgSAeTPvoV6Z9wBgH/H8
8eZkext7hrKvYdLci5mo7GMWAOjLzLMqFXtH4z2J2ccNAPB73musanmPMADQ
k3uu0suK/TuxRo/9PNnHMwD/y7yHemXeA4DnxLtg470aX9+++5593ZKqFMdL
9rELAPTlXXOqlFkPAKgl3smavX6Q9il+H2UfNwDAcsT+tez1jbSE4liyVgeY
D/Me6pV5DwB+JX4DPpxfPGZfq6Rq2VsHAMtj1kPV8kwPAOqx5lS1Ph0dfcw+
bgCAZYh3UHr/pNSv2LPw+fXZF/sWAHKZ91CvzHsA8E/xfCZ+88Vvv+xrlFQ1
e+sAYFnieYj1sSplPQoAdd2cbG+z1xLS0Lz3BgDoyX1YaZxilip+a8ZcVfZx
DrA25j3UK/MeAMR9k7vd7t69E+nlxTdxso9pAKAfzxhVrfhtl33cAAAvE+/j
yV5TSEMz8wEA9BTvp8xe30hLLn5v+k4fwHTMe6hX5j0A1mm72ZzGeuLb+8un
7GuRtJTiePJODABYjriuWy+rUvGsLvu4AQD6MPOhSsX7gt0XBQB6sS9SGr94
9hHHWuwdyj7mAZbMuka9Mu8BsB7xvCW+0RjPXrKvP9IS+/Pwj8vs4xwA6CPW
ztbNqpTvzAHAsliPqlpmPgCAnsw/S9MV+0evj4+vrOcB+jPvoV6Z9wBYtvg9
Fr/LYu9P9jVHWnKxPs8+3gGAfuJ+Sfb6QhqavXUAsExmPlQtM8gAQC/WwtL0
/fXhw39i1urs4OBN9jkAYCnMe6hX5j0AlunT0dFH77yQpinuNWYf8wBAP9bR
qpRZDwBYtrjOx56b7DWHNLT4PZV93AAAy7DdbE6thaWcvr2/fLo52d669wzw
MuY91CvzHgDLETP28SzFPQ9puuJ4i3uN2cc/ANDH3W53n72+kIYWa1HvWgOA
5YvrvXu+qpRvIQMAvfx5+Mdl9tpGWnvxHb9452z2+QCgIvMe6pV5D4DaYp95
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
ZDOO093uP1X1rbXW6w2v6HnOOY7u2rvWqrVWSZI0YjkPqvo+DHaRcWb1dSNJ
6r/NHo88+6r+7QOgb+8fX3w0zpHayn4PpmK/h6TrMicBwFIyJ/H89PRZ9W+f
JKmu/A5U/x7BLjxPkSRJo2afNq0x7yhJmqOcZ5b7IuspAKiQM6lydrNzqaT1
Z78HU7HfQ9ImcxIAVDInIUljlu/9/AZU/w7Btuz1kCRJo5ezoqrvyWBb3s0n
SZqqzXqKnGNW/fsGABtZ55dxen6nqn8rJf03+z2Yiv0eksxJALA25iQkaYzs
9aA12Ztafd1IkiStoXc/Pfqz+t4MtmXPhyTpkKynAKAVGat7x6G0ruz3YCr2
e0hjlnu73ONZWwXA2mUO3TnaktRf2dP3+enll+rfGdhWxtDV140kSdKasueD
luR8GWfLSJK2zXoKAFqW529ZY352dHS/+jdVGj37PZiK/R7SOOXsopxFak0V
AC3KnHrm1p3FJ0ntlzU2WWtT/dsC2zJ/JkmSdH3u62mJPR+SpNu6Oj65tMcD
gN7k+YbzNaW67PdgKp5XS32Xfbov7p29tMcDgJ7kdy2/b86jkKQ2y1xE9W8J
bMuaMEmSpJuzl5vW5F3C1deNJGk9OTMTgFE4X1OqyX4PpmK/h9Rfeb6SNbCe
sQAwgjyjdR6FJLVT5pKrfztgW3nWb6+HJEnS7eV+yTnYtCTj0urrRpJUlz0e
AIwuawqzttDzD2n+7PdgKvZ7SH2U+6+sdc2a1+rvFQCo4DwKSVp/eY5a/XsB
28q9hfsKSZKk7cp9kz0ftCTrLaqvG0nScuV98c7MBID/ylrD56enz6p/q6Ve
s9+DqdjvIbVd7reyttVzFAD4R85kyrx95u+rf6slSV/L/vTq3wfYlr0ekiRJ
u5f7p+r7ONiFdwZLUt/Z4wEA28sai5zbZo2FNG32ezAV+z2k9tq8X9QeDwD4
sdzv5tmtd5FKUl32etAa674kSZL2y70/rXHvL0l9lWdB+W7Ps6Hq3xgAaJU1
FtJ02e/BVOz3kNooe2ezxyN7aau/NwCgRdknmXdiXR2fXFb/rkvSSGW/ur3q
tMR6L0mSpMOy54OWeLefJLXfZo/H+8cXH6t/VwCgJ5s1FsZM0v7Z78FU7PeQ
1pv3iwLAPLJ/MmMq7yKVpHmz14PW5P6g+rqRJEnqoawHqb63g23Z8yFJbfb8
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
2yvzd9WfR1hSnotXX3eSJB1SfsuyDrr6NxVgapu5iurvWUmS1lz2gVf/ZsOc
snfAs6v2yl7tzFV4DxG0y3hckiRJktopz1Wrx5HAPLKXyx4PfVs+D9WfS1jS
i3tnL6uvO0mSpir39bmfc2YD0DJzFZIk7Z5nefQu7ySvvs60X5u5Cu+VhzbZ
8yFJkiRJ68/5oNCfrJvI+ua8U7n6O0brKu9Ed84SI8l9TvV1J0nSXOXeLu9t
c38HtMBchSRJh5X11HkHQvVvOswp77KpvtZ0WLnfz7+j7ytoS+YZq78/JEmS
JEnX5/3P0I/Mm1o3odvyPJDRZD2Z84IlSaOUc/ic9wusTcag2Zdm3YgkSdOU
39Tq33eY29XxyWX1taZpyr9lzmRyTgWsX65TY3dJkiRJWl9ZC1I9ZgQOY92E
dsl7tBlJ5qXtf5MkjVh+/7IP3D5foEruxbOmyzo9SZLmyfM9emdut79yLlO+
uzyngnXL969z1CRJkiRpPT0/PX1WPVYE9mOPh/Ypa22qP7uwJGvLJElyjiaw
rLxjKHOO1d99kiSNkPleepd3N1dfZ5qn7OV59eDha+dUwDrl+9eeD0mSJEmq
L2vErfWAtmzOxrRuQvvkvDdGkzPNq687SZLW1OYczTyvrf6dBvqSPR75frEW
RJKkZctvr/t7epezz6qvNc1b1i04pwLWx547SZIkSarNXg9ohz0emqJ871d/
lmFJ+d6svu4kSVpzOUcza2bMDQD7yrqP7LHO90n1d5okSSPnmR8j8IxsnLKP
PPvJqz9zwFeet0mSJElSTc76gTZszsas/s5Q++V73/M+RuK8IUmSdivrZqyl
ALbx+enll+wVs8dDkqR15d3O9C7POLK3qfpa03JlzJH95RmDVH/+YHT2fEiS
JEnSstnrAeu22eORa7X6+0L95HufkeS5n+9QSZL2y1oK4Dqb945aXydJ0rrL
nszq+waYU551mPsds4xFMiZxthnUcU6lJEmSJC2X8zphfTI/bY+H5irz39Wf
cViSNWiSJE3T1fHJpbUUMK7NHo+8/6f6+0iSJG2fs3/onTPmlWeq1jxADXs+
JEmSJGn+rPmF9cgzl5ybm/Nzq78b1G+Zc6v+rMOSzDNLkjR92Zee39gPF08+
Vf/WA/Pz3lFJktouzxzs2aZ35oGVMmbJs1b73GBZzl2TJEmSpPnyDmeo9/np
5Rd7PLRUmWur/szDkpzrJknS/GUsk/mFjG2qf/uB6WzOpLDHQ5KkPsr7uarv
L2BO2dNkvbG+LZ+HzFfY7wbz8x0sSZIkSfPkfHeok3VQmV8056Elyxodc9qM
JOvTqq87SZJG69WDh6+r7wGA/WW+ItexMykkSeoz9+v0Lvez9ivrurLnLe8t
rP6MQs/yHNp8giRJkiRNl70esDx7PFSdd1czkswpe64nSdKy5bfXOz6gPbl3
Nl8hSdI4fbh48qn6/gPmlDX91deZ1lvmLvIeQ8/MYB65tjyfkyRJkqTDy7Nb
57vDMnKtvfvp0Z85M6b62tfY5XNYfT3AkqxVkyRp+ZyTCe0xXyFJ0nh5DzQj
yHr+6mtN6y/PEbL33dkVMC17PiRJkiTpsOz1gPnZ46G15Z1OjCaf+errTpKk
0cpamup7AGB3WdtU/f0hSZKW7+r45LL6PgTm5kwg7VKe6zo7DaaT66n6upYk
SZKkFsv+eWdTwHxylm3WGDurQmsqzzOqrw1YkvljSZKWzz0ntM15FZIkjZk9
2/Qu57N5Zqddy2cmz3vzfoLqzzC0zjM7SZIkSdqtzEuYk4Dp2eOhNZfPpXc6
MZLc61Rfd5IkjZazJaB9GTeeHR3dr/4+kSRJy5dnHNX3IjCnDxdPPlVfZ2q3
jJPyTkTzHrC/7C+tvpYlSZIkqZUyl1U9joNeZD1x5iXs8dDas8+PkTirTZKk
mqwPgz7YOy1J0pjZv80IXj14+Lr6WlP75b2IeVdB9ecZWpTzM6uvYUmSJEla
e+Yd4HCbPR7Ou1Qr+e5nNI/u3Pm5+rqTJGm0MkaqvgcAppNza6u/VyRJ0vJl
Xs17ould1upXX2vqo+yTy9p1523Cbq6OTy6rr19JkiRJWmt5Tls9boNW5Uyr
nPljj4daK/PM1dcPLMm5QJIkLV/WhFXfAwDTsw5OkqQxM6dM77KnyfM+TV0+
U3mW7D1J8GP5HnZ2myRJkiT9N3OzsLvMx2WflLkGtZp1d4wm77Kpvu4kSRqt
nGVpLQP0Kesvco1Xf89IkqTl885oevfXL7/+XX2dqd/y7oJ8j3pfEtzM3jtJ
kiRJ+nf2esD2Mq9gj4d6KPNj5pEZiedzkiTV9P7xxcfq+wBgPh8unnyq/p6R
JEnLlz2fmW+rvheBOeV5YPW1pr7Ld2nWamRcVf15hzXKvYZzJiRJkiTp69nu
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
Rumv78+qf2tnl2dH9xjqKXs+AOD7rLdWT+Xv1VrKPuXfLec4uOZIkkZue26R
b1YD1LK+VyPnTHfYj/1/GjXfegLo1/ZcNPcpkqQZyrNLvl3l3Vkdez7UW3nf
Xj1uAGBNsh+y+vdZ2jV7Pfqz3eORta/Vfz+SJC1d7l3y3tb8NcCybo6Or6t/
A6RW+eYp7C/zU9Y0aNT8LgD0I8+qWeuaNa/Vvx+SJFW1fXdm7c/y8q2V6n9/
aZ/s+QCAz+z1UE/lnazv0/fDd6clSfq67dlF7mcA2rKmVyPnHHe4P3sBNXK+
+wSwTn89E81zqiRJ35bfSOu5l5X/3tX/7tI+ZU6vetwAQCX3b+opez36kH8j
ezwkSfp1+a3Mb2b2R1b/fgOM5t3l1Yfq67zUKnMj8DC3Z+d31eNYapXfCIB1
yPU4+/Bydnn1b4MkSb20fW9mXfcyzI+op6wZBGBm9nqot6yFXK/cU/v2tCRJ
9y9zVNvzi5zXDfAw3lNp5JzdDodhX6BGzTegAOpsv3nvXZkkSQ8vv6eZ5z3d
bJ5U/8aPLPcu1f/W0q7lfbprAgCzydrs6t9gaZ98u3F9cg/tbCJJktqU9Wf5
nTVnBbCfnP1WfQ2XWpW9odVjDEaR9fC+TatR83sBsIzte7Jcd6uv/ZIkjVzW
pDgvrR33MuqpXA9cCwCYRfZ6eJelnnJ25XrknjnP0c5AlCRpuTJvlTOMfKMW
4Oes3dXIOa8dDi9ncFePbalVzk8CaGP7vXtnoUmSVFP2JuR5vvqeYCSZc3Rv
o56y5wOAGVj7oN7KtwOrxw2bTd4P2tMvSVJ9WeuZd8rmsgG+ZV+6Rs6+T2gj
99bV41tqUd4D+e0AeLjtOWh5X+kduyRJ6ym/y3mm99xzGPZ8qLesJwRgZO7N
1FvuzWplHan5a0mS1lt+o/Nbnd9sZ5gAs8t3kKqvy1KrfPcU2jJnrlFz3iXA
/ZxuNk9yD+5MAUmS+ihnpeW3O7/h1fcRPcveGeuD1FPWFQIwIns91FveRdXY
fofaM5wkSf2Vb3HlvEHz2cBsbo6Or6uvwVKr8vtePcZgdLl/NhemUbP2AWA3
OU8l78eyXrT62i1Jku5f9mvmXZn1Rvdjz4d6y1lJAIwmc/rVv6/Srtnrsay8
0zaHLUnSWOV+yllGwAzy7Oj9k0Ytz+nmR2AZWeNZPealVmWtU/UYA1ib3Gfn
+pj91Z4pJUkas6yVy/N+9X1Hb8yRqLfMewAwCns91FOZU7Uusb3tt6h990eS
pPHLWtHs7cyZPNX3IACHlvPaqq+zUqv8dsOycs9cPe6lFmXO3W8KwOfzqm/P
zu+8G5Mkaa68J9tf1s9X/7tJ+5TvwFePGwB4iKznrv49lXbNe6e2tmcVWQ8l
SdK85X7LeUbAKLJOp/q6KrXKd+ihhvWfGjXf1AZmlTmwzIX5xr0kSUp5Nsq8
m3Nof82aQ/WUNYcA9MxeW/WWvbZtbL9HXf3vK0mS1lXmvXKPkHsF636A3uT5
sfo6KrUqv8/VYwxmlfUeuU+uvg5ILcp65+oxBtDa9vv23otJkqRf5R3Zr+U5
svrfSdo1ez4A6JF1D+qtPENVj5uRbM8r8n5akiTtWr4B5kwjoAd5/+ZZR6OW
c4e9Y4ZamVervhZIrTIPD4woa7peX1y88Z0uSZJ0nzLXnPU1zqj9Pns+1FO+
bwpATzKnZd2DeirrCqvHzQi289nGvyRJemiZC7s9O79zBgqwRtmfVn2dlFrl
vTKsQ+bYqq8HUoucdQmMIOu3sn/NuWeSJOnQ5SyWzAk4G+2L3HvZV6uesucD
gB743rx6yzfkHyZjPmsx88xZ/W8pSZLGbDu3nXOOq+99APL8U31dlFqVv+/q
MQZ8YS2DRs26B6BHeR+W8+Ps/5ckSUuVZ6fcf3h+sudD/fX26eX76nEDAD/i
3kq9Za/H/WzntI13SZK0dNtvWucMRfPbwNLy3YPq66DUqqxbqx5jwNecraSR
MzcP9CBnj+QMEmeeSZKk6rJ2fPZz0cyTqLfMfQCwRvZ6qLfy91o9bnqy/TZ1
niGr/+0kSZK25d4k9yi+aw20lmci75I0avnbto8S1ilrOaqvEVKr8ixXPcYA
/uqv78I8/0mSpDW2PRftH7/99s/qe6cK+f/tPk095ZvaAKxN7iWrfx+lXfO9
+N3lnbI9HpIkqYe237WedY4baCvfPqi+zkmtyrdrqscY8GM5V7z6OiG1KGt0
PL8B1XIdyhos5xpKkqTeyjfIch8z25lovsOt3nLeBQBrYa+HesqZlb+WPR4Z
1/bES5KkXsscd9bFWTsEHELemVVf16RWOV8M+mANqkbN2UxAhe17sMwfVV8H
JUmSDlGerbKmfJbnq/x/rf5vLu1TnkGqxw0Ac8v5udW/h9KuOS/sx/LfJWsi
zW1LkqTR2n7b2jwacB/OCtPI5bs11WMM2E3O6nQ2i0Yt89LVYwwYW35H807b
9+wlSdIMzfJOzJpF9ZQ1iwBUsldWveW+6WuZ3845nvZ4SJKkmcq7/ZnOOALu
L9cJa2s1ar5/Cv0xH6+Rm2EtErCs7TlnvpElSZJmLfN/uR8aea1U9rZU/3eW
ds2eDwAqZO69+jdQ2qe8D60eN2uwPcPI/LYkSdLnc81zb5R7pOr7NGB9co2o
vk5Jrcq3a6rHGLA/6xg0alnz4LkMeIjsZc67wPxW2rcvSZL0dTkHdtT3YeZK
1FNZr+ccJgCWkn2G5snUU7Pv9djOcftOtSRJ0o/L/Nro5xwBu8u3EKuvS1Kr
8vddPcaA+8k8n3NcNGr5264eY0Bftmec2asvSZK0e1k7lDVEI605N1einrLn
A4Al2Ouh3so+7upxUyXf4bHHQ5Ikaf9yzlH2fuR+qvqeDlhevntQfR2SWpW1
cNVjDHgYc/QauTyHVY8xYN0yV5NrReZuqq9ZkiRJPZe5haypGuFdmPMx1Fvm
6QFoyb2RemvGvR5Zl+Rb1ZIkSYdrO9892llHwPdlnHue0qjlb9tvGYwh96bV
1xSpVSOsNQIO56/fsPesJkmS1KbtOWg5Y6L6/u++zO2rt2Zc1whAe/Z6qLdm
+vZ7nrecZSRJkrRM2+9cn242T6rvA4HDy5lK1dcZqVU5I6J6jAGHk3fC1dcV
qUVZn+N5C+aW9163Z+d33k1LkiQtX+7BXj4+fdXjuTG+iare8p1TAA4ta5qq
f9+kXcuzR4/PHfvI+648X9njIUmSVNd2zrvn846AL7KeqPq6IrUqf9/VYww4
LGc0aeRmOs8J+Czf9sleRu+9JEmS1tP2DLTqe8V95J1d9X83aZ96G2MArJdz
wtRT2ac96l6P/P/KekLvcSVJktbXCN+6hpnluwfV1xGpVfluTfUYA9pwbqVG
zhmXMLbtuWbOHJQkSVp/mXvI+sFevh+c9fPV/82kfbLnA4CHcraleirPF6Ot
r8sej9zTme+WJEnqp+28d86mrL6fBH4tz13WymrURj4XA/jMGgaNnGcqGEve
4WUvl3PNJEmS+m17/ln271bfX/6M+RL11IhrHgFYjvse9dRo9z3b71ZX/3eV
JEnSw9t+79p6W1gn++s1cr2cuff/2bt31bvOu1HbqtNogUCFwTigQioCWSmE
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
B4gkSdIy2cvvxzKmn3tS49OSJElqXe7HrcMGuJmMYfgegyRJkpYq74Xy/sxz
+7+ZzyVJkrR8mcuV+63smeZ+lN5kDmLWJlkPLkmStFwZm80eFrnv2uv3i/Ks
lDF895ySJElautx/V9//AvQo74qqr+GSJEnaR3l2z3uzvc21yxrrae+OzDm0
3lqSJKl9mZu093lajC3PUVm7ND1XVJ9zkiRJozbtAZJ7r1H3AMm9ZZ6dfItI
kiRJa5d77er7YYCeZHyi+totSZKkfZb3SNnfYsT3ZZlfmHdlmW/ofZkkSVL7
sn52moOVdbUj3lPCdXj2kCRJWr6sLc93NHPfleeP6nvAm8pzU8bkrR2WJElS
db7ZBHA9eZb3XWFJkiRtobwr63Xth2/sSpIkLV/msWc+e+4ZvQeCy9lbUJIk
aZ1yr/Xm9PRtnlG2vJ/1tMYjY/DVfzNJktYoYyEZR8x6zep/FkmXlzH/6ntl
gB54npe23fTNc+eqJGlv5bcv6yeq75cvk7lT+Y5b/jmNE0qSJLUv72RzrzXt
3VF9/we9y/zDjDNmPqI9QCRJkpbp++eY6m8bZYw9c12r/y6SJK3V9H3B6bfQ
d/qk7Zd757o7ZoDty7N99bVa0tXluWM6Z+2tK0naY9O3VyrXfpyfF+V3WJIk
aZmm7+Lmvm/L38WFkUx7gFjHLkmStFxr71M4rfGwx5skaS9NazwuWmfp3a7U
R/bzBrhY7m8830vb7/x6j/My7yHfFPctPknSnprWfiz5rJ/75PNzntwzS5Ik
tS/zynNfl7ENe3fAdmTMMfMDrXWXJElattxrZQw6914t9gDJmHnu4azhlSTt
pcyXytjij74bY3xD6qOc09V74wFsUeauVV+jJf24y9Z7nDet/TB+J0naU/nd
y/uruWs/8r+f771kvqF1lJIkScvUei4TsJ48M2XsMc9Mxh8lSZKW6SZr4q3x
kCTtreuu8TjPeg+pn3Jve9MxTIAR5b1q9bVZ0vW6znqP84zrSZL2WH73Mn/w
R2N7mVuYe+H8z+Y31t4dkiRJ7ct718xTyppae7DDeM7viei5SpIkablyr5X3
vhnTnsa+p+8A+naRJGkvzf0GoPUeUl/ZDxzgmzz/e/8i9dOx6z3Om9Z+OOcl
SXvq/HddMhbgO7SSJEnLlTGH7COced+597J3B+zTtG9ixiLNPZQkSZIkSXPK
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
l/Ueko4p7xOrr1vANuS7kdXXJEl9Zb0HS5rWfth3SpIkSaOUeXAfHj76OO3d
UX3PDQAArWRfutzj5l4385aM60qSJKm3Mnab7/LYc5k1WO8h6dgy5lJ97QJq
ZU5t9bVIUn+Zn8Ra8t2MfD/DO0JJkiT1VN7XZA1z7mft3QEAwN7k/WPmy+We
ON+hrL4/lyRJkr7PGg+qWO8h6SZlrKX6+gXUMcYq6SZZ70GFae1H9fEvSZIk
nS97d+Q+9dX9k9fGWgEA4GLTHiCZV+f7PpIkSaoo8+QyjusbPVSy3kPSTcpv
WPX1C6iRMdXqa5CkPrPeg0r5vka+s5H3gtXngiRJkvZV5qXlXUzGVPJc5Ntv
AABwM5ljl2/8ZA8Q850kSZK0VPlejzUebInnH0k3LWMo1dcwYF353mT1tUdS
v1nvwVZMaz88D0uSJGmJ8q2c7N2Re057dwAAwLLy7iFz8XIPnnl51c8DkiRJ
6rPcS2ZOrDFdtsj8FklzMm8T9iXzFaqvO5L6zX0DW5TvceRdoN84SZIk3aTs
3ZE95Ka9O6rvbwEAYO/yvZ/sAZJ79MyJyj179XODJEmStlnuFa3xoAfWe0ia
U9Y0Zryk+loGLC9jotXXHEl9Z+4TWzet/fANOEmSJF1W3qnk/V/mj+X+sfoe
FgAA+LHM38v+e9kDxLd/JEmS9l3WeOS+MGO81fepcF3We0iaW95vVl/LgGVl
DLT6WiOp/6z3oCf57ct9rrUfkiRJ+y33gtm7I2uCPc8AAMBYco+f793lnt8e
IJIkSeOX+z5rPOiV9R6SWuR9J4zNd24ktcj9Ar2a1n545ydJkjR2eV+S+V55
52dPYwAA2Jfs35dngYwFm0slSZI0RlnjkX3ejPfSO88oklqUb935TYQxZUyz
+hojaYys92AEed+XvV2t/ZAkSeq7fNsi93V515f1vdX3mQAAwPbkvUb2+8s8
QXtBS5Ik9VHGfq3xYDTWe0hqVeaEV1/TgLYyhll9bZE0TtZ7MJpp7Uf1uSVJ
kqSry1rdzM/K3h15LvGeDwAAuIk8S2RcOM8W5ltJkiRtp6zxyDrd7NlWfc8I
S/D8IallGduovq4BbWS80ndqJLXMeg9Gld/MfB8kcwirzzNJkiR9e7eXb9Pk
Hs37PQAAYEnZLzDPHvk2UJ5Fqp+HJEmS9lLmtWUc2Bgwe1B9vkkaq3wrz/fx
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
fd1TfX7LAwAAAIBxVc9Pqj5zxMC+5Qy6XGs+v3j5pfqaJ0mP6c3Bwevqaypj
szZarbLfgzmwD1zS0stZSjnXovp6CvQv7xiqvuapNr/lAQAAAMC4qucnVZ/f
JIF9OVqtnr1/vvvg90hJvZR9a9nDVn19ZVz2e6hV9ntQLXMR1Z8DSWpV5j2y
DtezArAv9skq8+zV4xAAAAAAmN5uvT6unp9UfVkzVj0Wgb7kuvLx5PRT9fVN
kvaR8xSpZL+HWmW/B5WyHtqecEm9lvW4mXevvtYCfbHfQ57hAAAAAGBM1gop
2e8BtJIzenP2ffV1TZL2Wdan5v1F1ddcxuQZTq2yVohK2TtZ/RmQpH2Xe+2b
g4PX1ddcoA9X2+119XVN9feV6nEIAAAAAEwvvzdVz0+qvupxCCxb1jxnvZbz
eSWNVN5hVH39ZUz2e6hV1gpRJc8P1eNfkqYs52LkfIy826j6Ggwsl/2yStXj
EAAAAACYnvlhpepxCCzTbr0+fv9896H6GiZJVXlHGhXs91Cr7PegSsZe9fiX
pIpyTkbO5/euQOAhLg6PLquvY6qvehwCAAAAANOz30M5X656HALLkndDWaMl
Sb5HUcN+D7XKfg8quIZJ0l/l/Az7x4H78D1KyZ5BAAAAABjPx5PTT9Vzk6rN
Gh/gLp6sVk9zhlzWNldftyRpTuXaWH2NZizW+KhVngWp4HlCkv7dzdn57bvN
5m319RmYP8+CSvYKAgAAAMB4nM8ua3yAH8l5YVfb7fUfr179WX29kqQ5lutj
9sRVX68ZhzU+apVnQabmHbOS9P2yHy7XSc8WwPfk+lB9rVJ99nsAAAAAwHhy
flj13KRqy++I1eMQmJ/8buQdUJJ0t94/332ovm4zDvs91Cr7PZhS1ifaQy5J
Py/Xyjxf5PyN6ms3MD/V1yjV5zc9AAAAABhP9byk6jM3DPzTu83mrb2AknT/
duv1cfU1nDHY76FW2e/BlLJ2uXrMS9LSyr3aOe7AP9k/K7/pAQAAAMB4qucl
VV/WdlePQ6BWztrN70SfX7z8Un1NkqSlZt00U7HfQ61y3WIqrluS9LgyX5M5
3MzfVF/TgVr5Dl99TVJt3jELAAAAAGPJGcTV85KqzxlxMK6j1eqZc3YlqV32
0TIF66bVKvs9mIr3B0pSm3Kuf87ryHxO9bUdqGG/hzzHAQAAAMBYrBNSst8D
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
bqnq+yHzZ7+HWmW/B3d1td1eV49XSdK45TvLm4OD19X3Q5ib6s+m6vNbHwAA
AAD0q3r+UfWZA4a/5By0fB6cVStJmkPWXnMX9nuoVa453EXOVa8eq5Ikpc8v
Xn65ODy6zHxe9f0R5sCctvzWBwAAAAD9qp5/VH15j0H1OIRKOT/9/fPdh+rP
oiRJ/1vW8lffJ5k3+z3UKvs9uIuMk+qxKknSP8sa97x7yvsRGZ3vacpvHNXj
EAAAAABoz7mMStYRMqo3Bwev/Q4mSZpzObO2+n7JvNnvoVbZ78HP5PmpepxK
kvSjstbZXDejMs8tz3QAAAAA0Cdrg5T8BsZInqxWT/NOm6yfrf7sSZJ0l377
5dffq++fzJdnOrXK2iB+JM9RnqEkSUvp5uz81jutGU3ec1P92VNtnukAAAAA
oE/OZlSqHocwhaPV6ll+8/rj1as/qz9zkiTdp9y7ch+rvpcyT/Z7qFXWBvEj
2XtYPUYlSbpv2auYe1j2LVbfS2HffF9Tqh6HAAAAAEB75n+Vqsch7FPWQL5/
vvtQ/TmTJOkx5V5WfU9lnuz3UKvs9+B7sufQvnlJ0tLLM5V99PTs4vDosvpz
pvqqxyEAAAAA0J79HsoZZ9XjEPbh3WbzNmvWqj9jkiS1Kuv6q++vzI/9HmqV
/R58z8eT00/V41OSpFblO0/ee159f4XWPBsq2dcGAAAAAP3xm72s6aEnT1ar
p9nHln1M1Z8tSZJad3N2flt9r2V+rOlRqzwb8i2uMZKkXsv8Yc6LyXxi9f0W
WvC9TclZIQAAAADQH2ffy5oeepAzq94/333449WrP6s/U5Ik7bOsR6q+7zIv
1vSoVZ4N+ZbsNawem5Ik7bPMJ+b8GGfis3TZu1T9eVJ99nsAAAAAQH/8bq/8
llU9DuGh8tuFfWuSpJHKWiTnz/JP9nuoVfZ78L8uDo8uq8elJElTlvNkrJVm
yao/Q6rPb34AAAAA0J/qeUfVZ+6XJcrZ5p9fvPxS/fmRJKmiq+32uvpezHzY
76FW2e/BP2VvofcnSpJGLd+LvFuRJfL9TX7zAwAAAID+VM87qj6/W7EUR6vV
s/xW4TcrSZL+3//lvlh9b2Ye7PdQq+z34J+yt7B6TEqSVF3Om8l8pHcsshTe
ha28p6h6HAIAAAAA7ezW6+PqeUfV5/30zF2uVfmNovqzIknSnLIum6/s91Cr
XFf4ynyRJEn/LufPZH7Svnvmzn4Pea4DAAAAgL5YF6Rkvwdz9ebg4LXfpyRJ
+n65V1bfr6nnuU6tsi6IrzyHSZL0/T6enH4yp85ceUebPNcBAAAAQF+yPqx6
3lH1VY9D+Kcnq9XTi8Ojy88vXn6p/mxIkjT3cr+svndTz34Ptcq6IMJckSRJ
dyvPY+82m7fV9274p99++fX36s+G6qsehwAAAABAO+Z9larHIcTRavUsZ4/9
8erVn9WfCUmSllS+01ffx6llv4daZb8H2X9v770kSfcr85l5Lsv8ZvW9HHKW
UvVnQvVVj0MAAAAAoB37PeRMaKplfeLHk9NP1Z8FSZKWWtYWWVc0Nvs91Cr7
PTBPJEnS43r/fPdht14fV9/TGZfnQyXzRAAAAADQD2usZT0PVd5tNm9vzs5v
qz8DkjR1ufbl/lv9/0N9lTVF1fd26ljPo1Z5Phxb1oR536Jal/d4emeMpBHL
96o3Bwevq+/vjMfzoVLGQfVYBAAAAADasNZQ1vMwpSer1dOcF2uth6QRyz7b
r7+15npoPaVa57f8cVnPo1Z5PhybM0HUuuz1+Dq+nPkgadQyD3pxeHSZeYDK
+zzjyFirHveqzxwRAAAAAPTD76zK2vvqcUj/ck5szh2vHu+SNHXZ05HrX66D
/3ttzHqP6v9/6qt8ty+4zTMD9nuoVfZ7jMt1RK3L9+BvrW3OWLO3SNKI5bqY
fXDfmh+A1qrHu+rz2x8AAAAA9KN6vlH1mfNln94cHLz2HiFJI3bX8zu970it
y9nZE93mmRHrtNUq+z3G5TwQte5n30my3jnrnr3zTtKI/fP9n7AP7q/y2x8A
AAAA9KN6vlH1WRNIa1nbnHFlDbOkEcs62fvcW63RVuu+d5Y2fXMtUavs9xiT
d46pdfd551i+t2QMmkOQNGK5XpqfZx+cwaS8b7h6HAIAAAAAj7dbr4+r5xtV
n3PEaCVnc+bMKGeHSRqx/Iaa71YPuX7mXM/q///qq5yV3fo+z7zZ76FW2e8x
nqy19wyn1j10rsk7QiWNWva8ZV7V3n1acT+VZzsAAAAA6IM1QUr2e/BYGUNZ
51w9liVp6rI2Musxst/tMdfR/O+r/1vUX48dlyyLZzu1ypqg8WSPYPW4U1+1
OEs6+6jNM0gatVz/PM/xWL7jybMdAAAAAPQhZ+ZVzzeqPmeG8VDvNpu3zgmT
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
rEPM9xF7Dx/O2m61ztndy+aaoFbZ77Fs3gGm1rkmPI7zPSSNXK5/3uNaz/dD
pepxCAAAAADcn/0eyu/M1eNwZDkb07nskkYs1z7nA7djz6Bal/U41eOah7Hf
Q62ytnu5smfPmnK1zjrdNvL5zHpb79+RNGL5fmkuqI5nRSXv3AEAAACA5ck6
ruq5RdVmDc/08tt+9lpZfyNpxLIvwVqx9vJbrfuKWrdbr4+rxzb3Zw2PWuVZ
cbnM9ah19oHuR9Y851pb/e8rSVPnXa81PCsqmZcFAAAAgOXxm6Ks4ZlO1kxa
dyNpxLIP4Wq7vXZ+3H55b5ta53viMlnDo1a5BixTnjurx476Kt/lrcfdr9y7
zRdJGrHcY3L9M180jdzPq//NVZ/9HgAAAACwPPZ7KOtvq8dh794cHLz2WZM0
Yjmv8eLw6NL6sOnkb179766+yrnT1eOa+7HfQ62y32OZPHuqddlTXD2uR5H1
zt4HK2nU8h3GOvT9q/53Vn2+2wEAAADA8lTPK6o+c7v7kbXNWR9p3a2kEctv
9NnrVn0tHlH+7tX//uqrfJexZ2tZ7PdQq+z3WJ48g1aPG/VVvgdUj+sRmVOS
NHK59jl3YH/sKZTfBAEAAABgearnFVVfzl2vHoc9yVmMeWeK300kjdj757sP
u/X6uPpaPDrneqt11gIsi/0eapX9HsuS9eHWhqt1zlmvl38D3+8ljVjm1/Ms
mvn26mtxT9xTlPnb6nEIAAAAANxd5smr5xVVn9/u28jfMfPk1f+ekjR1fn+f
H9/xtI98xpfDfg+1yn6PZcn3seoxo75yDZiXfBcz7yRp1Jwv0o79HvIdDwAA
AACWxTogJfs9Hifvlr85O7+t/neUpKnL+dG5BlZfh/m2vGuqeoyorz6enH6q
Htfcjec8tco6oOWw11P7yF7Pecq7fLK/y/t8JI1Yvp+ai3oc80XynAcAAAAA
y2IdkFJ+J64ei0vjt3VJI5c13/YKzl/uVXn3SvV4UV/57C+D5zy1yjqg5cj3
s+rxor7KnEf1uObnnEEiadQyL39xeHTpt4378044pepxCAAAAADcnXldpepx
uCQ52zLvjrd+VtJo5bqX658zfpcl67+qx476Kmtqqsc1P2e/h1plv8cy+Myr
dfnub/3ssuQ6kOe16rEjSVOXe1beV2G+6u6yT6b63031VY9DAAAAAODu7PdQ
fg+pHodLkN/Ns9ap+t9LkqYua7vzfcF6r+Vy3q9al7Uh1eOaH7P2W62y32MZ
vHdSrcue4epxzcNkvXPWPTunRNKIeR/t3XheVLJHCgAAAACWw7lvsn7nx7LG
wdoZSSOW+4N1Xn3wO75a58zv+fO5V6s8L86fczzUOp/7PuS7WvbomtOSNGI5
98Kc1vd5XlSyNwoAAAAAlsP7CuR3/P/KuUZZM+MsREkjlr2gfu/rjz2+al3G
VPW45vus31GrPC/OW9Zze25V6zwL9OfNwcFrc8CSRizfk7yz9r/y96j+t1F9
vvMBAAAAwHL4rU9X2+119Tici916fWw9rKQR+/r7d/a7VV+L2Y/821oPqtbl
u1P12Obb7PdQq+z3mDfPr2qd/Zx9M+8laeRy/TPv9bfqfw/Vl7ng6nEIAAAA
ANxN9Xyi6jOnu1rl3e72Pkkasc8vXn7JNdA5h2PIPb96zKmvrAOfL/s91Cqf
8/nyOVfrsjfYc8EY8u/svbaSRi3fb/Peo+prcTX3APltEAAAAACWo3o+UfVd
HB5dVo/DCvltO//tWetc/W8gSVPnt+1xue+pddkzVj2u+S/rwNUq+z3my5kF
at2o80Ojy3c5zwiSRmz0M1B8l5T3ugEAAADAMuTd1dXziaova8Gqx+KUMu6v
tttr51dJGrH8jpfrYPW1mDrZ51M9DtVXWSMz6vqYObPfQ62y32Oesjaxemyo
r3I/rx7X1Mp3h48np5+qx6IkTV1+J8jvBaPNl9nvIc96AAAAALAM1gApjbLf
w+/WkkYtv1v/9suvv1uPzVd+01frco2pHtf8m2c9tcoaoPnJdzrnF6h1o8wN
8XNZ75xzAlxnJI1Yrn+j3BOzx6X6763aPOsBAAAAwDJYA6TU+/rfnHt6c3Z+
W/13lqSpy7Uv18Dq6zDz4x1v2kejnYU6d5711CprgOYne+yqx4X6KmdjVI9r
5ifzhReHR5d590v1GJWkqRthTs13SqXqcQgAAAAA/Jz5XKXqcbgP+U0649tZ
hJJGLOu1RjmLkIdzjqNaZ63ovNjvoVbZ7zEv9mxqH9mzyc9kzbN3BEoasex5
6/WdudnTV/33VX3V4xAAAAAA+Dn7PZT9ENXjsKWsUcg716v/rpI0dbmeZ/2+
tVrcVdYq2Bep1tlrNh/2e6hV9nvMi/XWal3mBqvHNcuR7xfm3SSNWOZPcv3r
ad7NM6NST2MaAAAAAHrl9zn1snbnzcHBa+teJI1YzhnMeXw9njPI/uWc3uox
rL7KNal6XPMXa3fUql6eGXvgc63W5b7tOYKHyNpQ79WVNGr5ftzDWQe+Wyr1
MJYBAAAAoHfWx2vJa3eyJiHrVLM+ofrvKElTl+t3roHV12KWz/dBtc454fNg
7Y5ateRnxt549lXrPE/wWObmJI1crn25Bi5172T+f1f/DVWf/R4AAAAAMH/W
9+lqu72uHof3lTME8//bGYKSRizv5tqt18fV12L6YU24WpfvaEtd79ITn221
yn6PecheuuqxoL7y2aa1fPcw1yxpxPIMnO9q+d2i+lp8X9V/O9XnzA4AAAAA
mL/qeUTVt6S53PxunHXO1X8zSZq6Jf9uzDK4v6p1GVPV43p09nuoVdaE18se
OucdqHX2kLMveW71fCFp1JZ2TovvmFrSb4QAAAAAMKrqeUTVd3F4dFk9Dn8m
70R3PqCkEfv84uWXXAOrr8P0zzpS7aPsN6ge2yOz30Otst+jnnXTap19mUwh
zxhZQ5rn2uoxL0lTl+/QS5jT87uLfC8EAAAAgHnLWWvV84iqb67r8PwmLGnk
8lvrXK/P9Cv33eqxr76yRryW/R5qlc9yLZ9ltS57fDPnUj22GUvWPN+cnd9W
j39Jmrr8vpEzt+Z677XfQ573AAAAAGDerBlQmtt64uxDynlCzhiXNFq57uX6
l+tg9bWYcdlnqdYt4TzTXnneU6us/6llDZ5at4T3vNKvfD/xziJJIzbXeb+r
7fa6+m+j2jzvAQAAAMC8Wf+jNJdzpTIeP56cfqr+e0jS1GV9fd6rMJfrMWPz
/VCtc4Z4HZ9ntcr6nzrZM1f976++yrNH9biGyHrnrDF23oukEcvvIHM5h8u7
XpWqxyEAAAAA8H3mcZWqx2HWrzhLXNKIZe2kc++ZI+eIq3V57qge1yOy30Ot
st+jRvbKWQet1s1lbSl8lWuduUFJo3Zzdn5bPTeY935V/x1UX+UYBAAAAAB+
zH4PZe1IxdjLGX4Zf9auSBqx9893H6yzYs5yn67+nKi/Mq6qx/Zo7PdQq+z3
qGHORq3LWeLV4xp+5M3BwWt7zyWNWH4nqXr3r+dGJXM2AAAAADBfWW9aPYeo
2qZet7Nbr4+NO0kjlt9tr7bba7+dsRTWmKp11otPz7odtcrnd3r2XmofeRZh
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
HB5dZp6j+vohSdKPst8DAAAAAOajer5QkqTvlbVLzqqF5crvwtXXEfWVdeYP
Z7+HWuVz+HD2Qqp1eU+AvZCwXDnXwru3JUlzLe+lqr5XAgAAAADWGkiS5lfW
LOW3JOuWYPlydq1za9W6NwcHr6vH9hLZ76FW2e/xcNb0qnXOXIY+7Nbr48yD
VF9TJEn6Z579AAAAAGAerPmRJM2lrAm/ODy6zPrw6vsj0E7OrK2+vqivcr+o
HtdL5NlPrbLm52GyV6363059lfuhZyfoS869yD6unINRfY2RJMmzHwAAAADM
gzU/kqTq8rtR1oNX3xOB/XGeuVrnPPP78+ynVlnz8zDed6XWed8V9Ct7uTJP
4t4hSaqu+p4IAAAAAKxWWSdVPVcoSRqz9893H7L2tPpeCOzfbr0+rr7mqK9y
5nHOP64e20tiv4daZb/H/Zl7Uet8DmEc+Q5n/7wkqarq+yAAAAAAYM2BJGna
sj439x5rdGE82eNVfQ1SX2VMVY/rJbHfQ62yzvx+8r0334Gr/93UV9lLWz22
gWnlfpLvv+4pkqQpM48PAAAAAPWsu5MkTdHnFy+/vNts3j5ZrZ5W3/uAGvn8
W5uk1nlP1N3Z76FW2e9xP+Zd1Lqr7fa6elwDdfJclXM0Ms9SfT2SJPWfeRcA
AAAAqOdd8JKkfZb7zJuDg9fV9ztgHi4Ojy6rr0vqq5uz89vqcb0U9nuoVfZ7
3J3PnVqXvbP20ANf5VyNfB+uvjZJkvrNfg8AAAAAqGe/hyRpH+UcY+96B77F
eiS1LvuIqsf1Elh3rlbZ73F37nlqnXse8C35nud9UpKkfZR3SlXf5wAAAABg
dNXzhJKkfvr84uWX/P7jvFngR6w5V+ucdX43Pntqlf0ed+OdVmqdd1oBP5Nz
N6622+t8P66+ZkmS+sh+DwAAAACoVz1PKElafll39G6zeVt9TwOW4+PJ6afq
a5f6Kuvaqsf13NnvoVbZ7/Fz2YNmra1al+t49dgGliH3oczT5FyO6muXJGnZ
5f1R1fc1AAAAABhZzvuqnieUJC23rNe25gh4iHwPtQ5Wrdut18fVY3vO7PdQ
q+z3+LnsQav+d1Jf5dmrelwDy/Tm4OB17t3V1zFJ0jLz/AcAAAAAtaz3kSTd
t6zPzvq1rNWuvo8By/bbL7/+Xn1NU19Zg/Bjnv/UKp+1H8ves+p/I/VVnsE8
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
cat1uc5Wj20A6uQ+8PHk9FP1/UiS9lkPz4MAAAAAMGfW90jqtZy7nXWY2ddW
fa0FoJ59ztpHS/+e4XlQrephfU+eHar/juqrHj4XALSR54ar7fY685XV9ydJ
ap3vvQAAAACwX9b3SOqtnMn7brN5m/N5q6+xAMyLtbxq3dLXNHgeVKuW/lmw
J1D7aOl7AgFoL/OVF4dHl94pJqm3qq+vAAAAANAza94k9VLWmGXNYvV1FYD5
ytoa56mqdUv+/mG/h1q19P0eH09OP1X/DdVXmW+rHtcAzNubg4PX+Q5Vfc+S
pBZVX1MBAAAAoGf2e0haeu+f7z44NxWAu8o7oKrvXeqrnM1bPa4fyn4PtWrJ
+z18DtS67C31vkkA7mq3Xh9nfrP6/iVJj8lvNAAAAACwP35HkLTEsq4y+9Ws
oQHgIZyhqtYt9Rx369zVqiXv98izRfXfT32VvaXV4xqA5cla6TxXeCelpCW2
5HefAgAAAMDcWesmaUndnJ3fWjsDwGNZ467WLfUsd58FtWqp+z0uDo8uq/92
6qulfhYAmJfMf9qTKmlJ2e8BAAAAAPtjv4ekJZR3Efm9AICWvOdOrcuYqh7X
92W/h1q1xDXu2aPl/Gy1znMrAC3lvvLx5PRT9f1Nkn7WUt97CgAAAABLUD3/
J0nfK2uvrrbb66PV6ln1tRKA/ljnq320tHW+9nuoVUvc72Hfn1q3xH1/ACxD
5kdzn/EMK2mu2e8BAAAAAPtTPf8nSf/b5xcvv1wcHl1mHW71NRKAvuW36Or7
nvpqaWve7fdQq5Y29nfr9XH130x9lfW3nmEB2Lfca/Icm/nT6nufJP0ze58B
AAAAYD9yJlT1/J8kfS1rxN4cHLyuvjYCMBbrZNS6d5vN2+pxfVf2e6hVS9vv
kf+/1X8z9ZXzjAGYWp47fKeRNJeW9kwIAAAAAEthbY+kOZRzn3K+bvU1EYAx
+U6s1i3pjHfjX61a0tqerI2s/nupr7J3tHpcAzCufKfP/Gr1/VDS2C3pmRAA
AAAAlsTaHklVZR1kzj9dylpIAPrmTFS1binnvHsmVKuWsrYnzx/e66TW5Vpa
PbYBIO9zz3NI5l2r742Sxqz6OggAAAAAPcrcf/Xcn6SxytqqnKdbff0DgH/K
upjqe6T6K+Oqemz/jP0eatVS9nuYB1HrljL2ARhH9rdm/tUeV0lTV339AwAA
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
     "], {{0, 3361}, {3196, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{129.47968749999995`, Automatic},
   ImageSizeRaw->{3196, 3361},
   PlotRange->{{0, 3196}, {0, 3361}}], "        ", Cell["", "Subtitle",
   CellChangeTimes->{{3.7972516371991696`*^9, 3.7972516683212996`*^9}, {
     3.8055254581918416`*^9, 3.8055254776700153`*^9}, 
     3.8055255303749743`*^9, {3.8055255642710686`*^9, 3.805525564543048*^9}, {
     3.8055256733522425`*^9, 3.805525674067864*^9}, {3.8060410364113703`*^9, 
     3.8060410386699996`*^9}, 3.838024749585788*^9},ExpressionUUID->
   "b7d29a6f-88d7-4d8c-8beb-f457f3d74c1c"]}]], "Input",
 CellChangeTimes->{{3.8050097788007107`*^9, 3.805009780170042*^9}, {
   3.805010653530649*^9, 3.8050106555050945`*^9}, 3.805010749231895*^9, {
   3.838024708230774*^9, 3.8380247122570677`*^9}, 
   3.83802477985947*^9},ExpressionUUID->"dc8e6514-44c2-4965-8fca-\
4e67717c4dde"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4fd265e9-dcc4-4bbe-8cbc-37a71da76aa1"],

Cell[CellGroupData[{

Cell["Contents", "Section",
 CellChangeTimes->{{3.7972514213137884`*^9, 3.7972514226998367`*^9}, {
  3.806043242614045*^9, 3.8060432457257023`*^9}, {3.8074455448064814`*^9, 
  3.807445546859544*^9}},ExpressionUUID->"a2f16bd8-6209-427f-8c19-\
c228c3b49a94"],

Cell["Introduction", "Subsection",
 CellChangeTimes->{{3.838108695463563*^9, 
  3.838108702409891*^9}},ExpressionUUID->"1125082d-2458-49f5-a9d2-\
32189f25135e"],

Cell["Calling Python within Mathematica", "Subsection",
 CellChangeTimes->{{3.838108646772233*^9, 3.838108664391962*^9}, 
   3.8381087040372763`*^9},ExpressionUUID->"29dc7f6f-68f5-438d-9595-\
02d44051db18"],

Cell["Calling  Mathematica within Python", "Subsection",
 CellChangeTimes->{{3.838108674840913*^9, 
  3.83810869114914*^9}},ExpressionUUID->"a7762f3e-77c5-4a75-9061-\
4f89ba863c23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4dc3f56f-6ff5-4f90-912e-1e7acad1f237"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7972514213137884`*^9, 3.7972514226998367`*^9}, {
  3.806043242614045*^9, 3.8060432457257023`*^9}, {3.8074455448064814`*^9, 
  3.807445546859544*^9}, {3.838024999828642*^9, 
  3.8380250025027857`*^9}},ExpressionUUID->"fb4c103c-4a70-4a04-bc34-\
74cf5d342308"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
RnISRxrTOkEflxpZPjXYH1bGOX+nYXO4kZbcF1Mb8I/gthqaVI61EoIGKhqu
pJ1lBGhwlzT2nE2sn/Vj/nOr4m6dJqSK+aA3szePM4VL1Rfy4lP/nOISNpXR
dYqKG3rf2Zw6Ct35ICtLIxoOG6g/Mnp86AhevLGBEZ/uyric3tihhNVddnAq
Xo4zfl7fmETa01+h0eqQS6a83Ssi0Ogkp8ZIS26reklLi43n6by12bp9VTby
5qZknHF4Mg4ii27kyxXfRlR/uDn1dnRPPLnUdIYqiMenXsVMqEXgqmZaQ9/e
lDoKfbFMs+PmG1Q1QEh9CHly7w2JnHeqME/OoHqqgCne2ZKC84h/SmBWC0sz
leLGzRJ3EfqEG1mw6LPvMvB/3ZSGvhKa4DifGQIaYDjjEA1X0p6SpEWhPhFf
986mlFvRy3YSl+PD4/gJf3kDE1cZ1zaHauigBelPpF9DeG9zivP3pACrqGkz
Hgg6zJxTMQ+fXQLjZd4NtuCnIlKOjQwxfWyJFP/XTXWfcQcNRQMMc08BDVrS
zpIhtbIr4EjundNFHE/eL01ViCuL+5hzNHTQfAXoM+npJTEXUqzYDwKczB6h
OTEaNEZVmL+S0WjO22CRjFxsm9EI5/YeNeavn0+uN3pR7qChiDmnsGLb0KAl
7SkBrmY2U4Er3jxq7hkA6knCnKyhhgmpJ/ehhZKfHNw4A7AZzE0o9AFM2tOb
5NYqbjPbxIFsfXKd7sbjS6XDXHo1NDFL1o3z68dMREm5iYamVXXhjMY3NiaT
9tS56G4cktQ8tjCGiq7xA/UkZ07W0Gk/75B68R9ZGHMpvZHUAARMUd/Rh/P3
+PJaprzA0YTu6eUmy8sbhhzxPlnGKwYEi9ZfKx+wlCu6VyQzel1uoqEINNhw
3i3uU4Jeq9XtElbdN0tMbZBBvBBZc76GGiwgAn0+PbMsVlLSRmocAkbZL67B
eYLbeVWkPaXQaHUf70o376rf4VzSbporWPHa+iTz6aKmmri95+q5LYOgwYYz
JtHQJe2pk/g2svreEDGVqMKEBEk3N1IaOk0/G/XkvrclpQJSR5kEejPjPL6K
ZkY8tdCrJpuEGsxjuqiSAa7qdOZWyEfPiPw2QmYqdXXlxRKjv+Xy+aGDoMGG
Mybd5KPibFL9A/OiqT1QEFAmGEEN1Z/9Vh/+nFOFfQNQY5cRUC1CMAqsTQxN
JO0pBZX0EWTB24VniIXjDgPdWzO5q8g+3ZNhtIn5/NPGE3bcR0MRaMhZfp8E
i0ilLzmNhIrOF1bGUnugDn0zg+EbWQ1F5sO/b5b4TBLEFzGCaybSKIYZExZy
2xTqRxcPD9QZZl4HsxlVwaZbOfDBjjQzDj+wMAZ9GAz7raBjeUZ/2K00FHM5
92pGE2lPHYi8U/XpznQPb9gDZZIR11Bk3vw3NqYUNxCO+gBuYOcR2NBFml50
uhtfmC4sb7D118oZ2EKot19jXkbRzHobt3Ko51/tyzL6k//aY0WhBraDuZzL
qHwr2llzpWy8n5DjL4AoXAYZEzTUXzguIOKbq9CSnjxPjaioM9KeXx1H2s0b
BywFPn0bQaCsHyZIRj80L6P6/tqD9StMBU25cP9Qo6CBZ3FwPrkslrSbjoKf
2/zwQglVvo+4aoANNSZo6DRqKvr75XEJDKte7m6UNvbiPKyl5wh3Cy1p6B1t
ujMLh9kCaqB/QGumQZvBXg1NrGunmsq9tdl43UXvgzmkr8OpoIGHMz5LGwgv
kjiCpi715/uyRvkIqIwG4qoBNtQYoqF+glt9I5ZcKBnQakmNUsBow+iRFpHX
QtBJjVb3xkZzJSDWXmHHggaSUd/DueZv9WNLpEgRXgk1nh0ZdIxk4QjngwYe
zvg8FF1L2lP6OZYgvyckkirlR1wywIYZQzQUmRfvhdWxqdXQTpcYfpZe6Rx9
FoZSTTJKZxvXSCuxQfM5lMPAPVBToO+BGT/mm7/hE+ZL7pxjvGCsu/XNRAPP
/PqDwZiQDkwvVa2qj3amjYJQImYaczTUl39HgHBzWCWpgQr8foXl/aZ/7Ewj
6GF+ncJMf+3X1icxqgY+DkjxF58tsu1PhviiuvNBw8/ibXl6uattif6YIP8N
GvbeMAllpDFHQwOFozzDP9iSWtmmIjVW3Zmmrj6cx7SDX0XKwwGtDqmkKcfu
mBPFkLIPNrDxeoUNfzLrr5WTdtzZoOGHc2fQYCbtKW00dasnfZ95y2QuTEIZ
aszR0CAqV3TCTPG5ZMgVJQBmZmh8GbG4L/Pvz/+msbv2MhVpbGXCwp4It+tU
goYfzp1Bg5m0p7TBy239nwUxHC8uFFVgqOk1dOqhHHkHAzQ0QHDbZO68UwX9
GvbsabkKpgrK/cqCRaQ2Q2WtyrEhJjuzBBJty0IX55PrPaZbLhI1aMekLhg8
Yx40/HDqaKHBTNpTetDpbqw4XzIOvYf9BOTFAsyo+QuQhob8mD+syBgBDZ1G
LedyvHivhSbm1ilIDVq3xULiv95e35hEyj0zFRUeWSzp7MXtxclwBLktZj4V
htmFVHdswmu+XqLB3t/uIhWcyhqVb21M9pgCC7kMNvR5M5W//Hxpl+pXdSbJ
aCiyqYIJQaKzKexel2MjE+ZLLD6dJWfJBLGEZzeb8Sosy3UW7m7oO7zgPAtk
M37MZ1EQMl2gQWjxzqAbSNpNeriQ2jhhughSWhhtvoJRUwW7BVXqXzcxJKOh
QZSmj/Pmr7hYqrHUVBGgkcZOrICiiyQmPr39mieWmqye5JK1ekobep/EKBjF
0edxuNtfChqEOHcGDWnSntoLerLLLpSg9yF6S5NXCjCjhjRrKn+Mv/Bs0vB3
Y0Gd4vX1SR7O38gOoPZn396SWt0C0bnOI6qwDefpEOlk/fV/S035MzZEXNPG
1lhc89R39P1pHVbjae+DOf0DblSZBA1CnNuChjRpT+1F1qp8Z0sqldICC7lM
Nm/+b+dERxcObxWRWtX5wuo4qkWd813y4T22IDqhfLhLgOPYK5JZfC6jZkQO
OH3KU9msNJMQ6trJHV3Kgfe3Y/Vy/efudAWT2tM4FDQIcSKvmF/v0SIxJW2P
zouGArmMNn0X7L9tTCmsHz6/EBW0PbRAX9/Y+W1effi/DRYdj5cTGbfuyfTj
FqrlIHslNMH5jn35vfGWJcgeXSxlXUUFa8GpB2iwP4cmNrB/9RITU8UPhxoa
0qTdtAud7sY+Sc1vqIw/WMhlsPkLOZO4c0/kd6iGN649m9xwN1JYIgHVfoLb
AoQLzhQp1W60QkWWd7YYr2o+1PyPOLuEmqTI3ArzKff4ykLv0m8ul+H84Tyx
NJbIYrvzQUPR4t14e0sKaTftQtGnmXGyYCx6A0NWC2NN/4UzLiDyWIyRLLNd
gqo7vLjURNX5jgUKOd68j3ak1Xe4y3c1cR5faqGZNcfpfbc1Wt3La01ON174
Ot6tYmmOxtRygiwvYN45JyqmiPX7gBbB6cf96GIpaTftorZd9Tf0ZesFNXIZ
bIERnMncV79JzKzpHvb4VGrdrJMFt5IqcYxO6sl74euEIujK7RTUGh3O+/ly
ulMTjn6MrTPjzNUMl8pnwUGY13L7LMupox7TRS5fewENRcuvkaAIVodaZci6
n1kei96EBHbTwDDNT8Dx4i4+VzQyGqGqRfX6xmQPH3LxYF68/1ksjXKDL2om
UNmsxHko6VVdTnOpt1/zyGKTOZKvhia6YV4kIrum+7ElllcMkC34qcj5AWBO
Aw1FnJtQydr6yTeo2pvNj8yL1s9DSSsFmCnz5D62OEZsTKckJe0PzhZzfMnF
g3nzfzsz6mhcnfOHrhtifttx0FoV/ZaPRRObw801OLvuQtVQraW+o29iaCLO
8/pgR1qbwkXKNw0DDUWcOyBh7Uc4+kTcEymjerVAUC5jDU1CvXkLzxiZhGp1
uq2Cyjv8+VTEESn3pvLvDBSGXit3qz0vUpwwu2pqsHGzxE7zp6W738yi5Qtf
x2vdcxb6M2iSbiZceag9vTw230XLZo7DWNZGA5u0mzaiUmsXni26baqA4wub
oYw0asMx/NXQBKNlaVt7+j/cmTbKh+hetp9gjA9vxskChasnLzCBrWa7Whvs
pTXxTvPHfDG3k7A6of/QXYHTI0D/8eOSZXXRgLR47Whgk3bTRjpVGq8D2R6T
uRw/obXdfMAca0F68+T+ZmbkGRMtxqQl7Q/Pl5CprjDoJJoCTw7/al9Wm6vU
Emcyyy+UWHwo/9yd7hxnatqUY0JMFlV4YGEMqwNF6OVUvByzz8vis0Vq1+qF
9MnudItXvfw8W7u3NCnU/9ydwZkUTi0YgoYyx34W0FunCv4TVqEyln2J3k9L
L5VQawgEk5L0TdDQ+Pn7jjS526SNEyTwaJ7Fh+L7Q45znJl5osCMG5vD2Tqz
cBDxZR33L8AqUP/W5hRXShZDA9LiJbO3I15Fi/KtLakcz3AquxA0lEEmQgI6
2pPaBu1QGp/f5cl7XlodTz07gsFgQfoCSpO4r29MLm3sdfLodUM++y7D4kNB
Y8YJnpQ3Kc10hxwbInbVIBl7kLUqMSvrolm8tMRFSmiiAWnxetHAJu2mjaRX
db/0TaI+sQX2Q5lhQfps0K+4o3wES88VN5t4EWm1N9ZeKx/nw6da7ZD9+NGn
iL74TXyaE/Mp3JY3NyVbfCIbrlc4wZOgY+ZmxHNPFTrBBzai6MONMuIEidBc
3gWCstCAtHixaGCTdtNGxAWtTy6RcqaAhjLAgqm/Gqp1zpdhv5sl3s6v7FAO
L+s3SIas+8VlsZzJYeQzkpADU7hPLo2JLGh15tB1T55bFWfxiRwQ1zjajZo2
c5NQZLAoYQakiuuvlWP+fX28K72523mZSo4ADUiLl/nsSucFwtHLtcymR+dL
IDmUsKGJZLBePb8K43iGv7c5NTyrqc90PIZSrQk+njcGffkwZBfbi/fovKir
6e6bCeg0zHTnHLTzKQ6P7ZxzytxO6Ic70hztgKNpVfRnybqlxe3c7GZRfmti
eUd1q4re7K3w7GacWkbIHl7E7nVdNCAtXuPjS9la7u9scv2Ds6MoDSX+HnZP
Q9I5XZ+c+9l1zqTwp5bEoA/UonoL3/AHpbX3TBdRveqI+28wL96DM8Vnk4wH
DwM0cuecKIuPw9FlDdAk1HyI6aU0didoUF3OjRZUDBb9ZUPSwjNFSP7Qd6z9
JyqS96D5F9afGJvXddGAtHiBaGCTdtNGjkjrfku9jXmMmM64iQX9PPEMEHK+
Cuf88wrHS/Cn1XErL5YklHf0WuotGFnY8swSKYfquE36QgYvx5t3/3TRMUgG
dDxM0FDzk9D7F0joTWmhRa2sYj/G2uO4WWL/I7nxZR12nquzV40TJ2awD9jZ
3MG1NfQ7kexeXwHHi49TyJq5FjTEiDtj3vwF1PzRIJ1fhT25OMZ3X9b3YllG
TVdHr8ndz0FSZV2vrU3gTOaR6dJi6uZ78+71F+6NZH0jXeYz2nST60FzaDcQ
i5NQ9ClIy4kGtLoLqQ1eB7Od32oTJ3Br0N7YmByR12LP6dDskoq6wXt33Tc/
mpfTTNeVOgecApWjZkSSdtNGdgqr7vHlU2911mlokD4i1E9IlYr14VHzMk8e
Z3I4x5PLmcw8m8TlfBnO+TwcufrQ/OgPt6auOl98NLY2qaKzvrOvD+9LO7W6
62/rk0ahC2RUl7ogalUZjaJdwioHj1bgBs4TkRY7cO9skaU8hfIme4uHo4kn
mgk+tSx2bIg4Uza8UZGjocKlrP8rQEpq521HQnzP3GjM06GnYCZegmmgO4Nz
UaTdtAXdjRvbeJV3IwFikYZSwatCzlQBpUpePCSgHoHCCfOj39iQ/OXerJDj
+YvOFK+4ULL6UukqBtjKi6UrLpZ+/d+yjWHl+8Syy2mNkuK2LFl3VauqSzVg
VbMGQV7rq1/Hj0KfCv5MEtBpeg314d89lb+DX+WwoQrcBOeJJJbbu8BoilZF
v/nap3ZGEyH13CuSPbgoxnC08ybKczmUbyNkNv8t+B3ObeqyfdZc1aL6M16N
emSvhCYU17Oj4SAakDhXRNpNW9BR5Tcr7vJilYZSc7qw24IjX16TOP147tHY
upTKruLGnppWVUNnX5tC3dGr7uod6FJqGGQqjaJP0zegsy2sT9Wv2SGoemyB
hGpwxpwl3EHTz0PRKEJjiZURD6wC54k4TkM3Wkr0O2er6qHvyQPimkH15JAr
/vb+tlR7/hzunBNlT0tQlVob8mM+5rnQPP1gVA3z44xAQxlhyD3k5yTuU0tj
558u4OU017SpOpXq/gHGDyD7EBe2/mN3xm1IOv0EDM0/Ag11IjhPxEFrub39
mvvmm1tsRFPUka2FcOBmNw/Le/1gRxqRNkDoGjGr2pq3//s2w55t3LOJ9Ti9
Tgz26R67zuUEXHstlx0aihTEk/vEopgtYRUljT29ag1LY7zxQVPWuJJ2v8O5
D82NotqyEGxtZtFAQ50ITkyRKN8hxS4sZsr7H8m19pi5tYr3tw+f9/1ugaSR
kCjE4LVnxbF750VfzbA9QLpA3vMiRrsTg02YL2Fyn1YXjiligYYGUu0pbw0S
hfyYXyTv0bhWO4NhaG/cGBjQ1XX0/SCp+WB76n1zo0dREVMM2/0caaChToRU
bsuAVvfUMgvlHazSbjRjXX6+xGixIzvDXO0BedWq6FeqNe096tLG3vDs5k1h
FR/tTMP5dDFq804XGm0YgUNPn8Z8QcVhhl6Stq0DOBoXzm3R6jX0bsZqaIDQ
w4v3++Wx51MarF3X0WpvoMnqgFbbP6BVDWh7+qkdSeZYt2qgSznQ1q2u7+iv
bFbm1HTxc5r/c73ig+1p98wRe0zTxxszcOvTqIGGOhEcDb2c3kj7ec8n15s/
6YOLYvBXX9F0z5Qizz5ZQLvz9oP+Zs8l1/9zd7p12XPBove3pSIhtufUPyXI
8dd1n1kRl1TeSddV04ULayhiB7/qHh/m5bbou1KOnsJ7d3NqRjVucDv6E+7t
oz4gi+oVEfmtpxLkOwVVyy+UzTxREHA4x+cQZVN/IG++PyBPsid9n/XPnemv
rU/+n6VSqn3YFB5VPd5fyNBNT3MPi9LQu314O/jQ68rh4NT6OxUvp/28FuNF
l54rxjmOWqNbabohNRLibtM1oplAeZNy0ZkiM11TOfrSfNOP56MvGbqupayp
dyJ2vC4S7v9cK7cq5t/RuHatv90MzA+lBFSABBR99VU0Y+WaoWldbZuKm92y
6lLJZ99lPrsq/tbpkVRT1M+uc74MowqzTw5nlnnq81i9eFSVP1+mBgvhPi/I
D3UeODXnf4i2PS7UKLEllmNCsjASOes7+l7fmGTmIDaH9TqZhs6+ZeeLf7XA
GyR6c1Py5vBKdB8cEazRP6Cllr6x/yrRfUbKS78fNuHaNef3i2X3BQiZVesv
QDjKi/vR9tQySwKKxmprtzqtqmv5+eKXvo6/LTiCMymM8/l1zhRDEqWQSiYN
/nUVI4YY8ZtMo92sUySAOkVOAKeEzka6e59N2mehVxfOCzCjumto6spI++Pa
BHaFCspalQFH83x/yDmbWN+qcEZrlYi8lgcWmruHQ23cLDH6mmLCLXXt3mfH
4urun6Gvl0v8VWywQGoPdOLaxNRqC80o23vUkfltfodybkFfg1TaSzi1FmrQ
TRcTKeabF+/+YNExKdTLdTg4tVXnnaazd2dVi8riH9TqS6XmD5JQ1nGHpZ3c
d7em/JQgL2noZcJrn7Egsbb4STPUPt6VXtNmb+UoO1nwkyv34D6XLH9olphB
fVu8uQ/PEV8w2/dBrdFlVHcvPFngQfWqDuf4CKjwm2DSnruzefEemh11zvEt
twCcQE2vg9k0nnHpuWKLZ8ww+8VbIO+xKKBD7fGl0sVni+LLOkBMTXEyrm78
bNxbeuecKEdskeODpuoWnQw8mkfQQ3u4ltX02IJoRvQPRd+6fvyx3rzFF4q1
N0z+8XQoB47G1j6zPJbz7zBq4ul6S6Oss0BKQx9bEBNmX/whgMPyCyUWn8j7
21LpOp1CNWDxXf37FXFmjtDbr3lmheU9XKP2h5VxO/lVzlkmZR1VLap3tqTg
38zP92aSyrr9ZHe6RfdIlaWyn2gqyFzfSIu4hgZEeEwOf31tgpk4oobO/iVn
izx8BdTK7TRQT2ZYoBBp6NPLYqOLHdguBDCwlVtp8Yk8v9qcqFnF95GWi8ea
X8j95nKZnQNsTEjkvNOF9peydz20Ot1ekWxsCG7my73zoi+mElgsegmjWAQa
2M53jBayZF0vf5NAxYiiNyFZSfIR3BUg2BNZbcrVmjaVz6FcSj2ncBkURezm
Zuie48n749qkrBpnt9hwQ07E1ll8KPfMjablXOgV/XuMKaSZhVx0hCctVWbA
tWBR8LE84lt7DKSsqdeqCemUA9ltCrUzPcTJb0UD25ku0Qi6/29uTKY0NICo
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
+HzJyosltR3usm3Bduacworl8P0hx/DzhyVWpIVy7N4MReTWKpA8MTlx0gzS
knbyf5u0W7Aohr7ehZ77s3FOOvtkAV1nZB0Z1V2T92WN9hPeXNelJ3UUNJQB
FqhPXfE3qCfvvlniSfuyw3MgBJdNYPZTRq/NmjaqZtEbG5PxR8jYEHG/6WAV
N8H3sOWm5+yyQ/T17kRTeMwlcTRQ6TopG2np7t8YXvH7pVKqOzZSUj/7lZQl
GhroioY+hPwE+kfJ17c7Fzy0QOJ9IOenxPoupTsutrAdMxVQh9ris0Wljbjd
Qg320c400hdHnobOPswFc4OhHz6bWI/m+2sulwUezUP38LnVcbfNFJN/m+kN
s7EsJkvOFuOc1GLpZjdBlN8aeCzvgfn6CgyTudQ/0as4IMImPWWJhiKVQVfq
6So2Wf/gvKgN7vEzIh9eIHlva8qaq6XXs5o6e1m51AYgjklrcQbzuFniWXhJ
fINmTxssV2JPhLkqeSPt0z0ZI8v+dPSq8+oUwryWI5K6dVfKZvyY/8nu9OdX
x90+y3ny6n8kl8aWcK2K/nF4zqMhSttZWU57r/paZmPIifyXVsffMT2C4xl+
852MtMbHKuNxPg+buC65sL5n6PGZpqHPLI99c33y6+uTWG6JE9cl/nld4l//
k/TeppQvv89aeL74iLQO/TkXyqH6EOtRqjU2Nwgzb/b0YnYlBrQ6881PR9rK
i1ZM97qUAwXynoi8luPS2g3XK2aeKPjn7vQX18TfQWt6ju/hXPsL+g1l9SWs
Bu5ocDquBBNLae9RJ1d2HpXWzj9V8M8dac+vir9/XvSdIZG3h0TegWuisX78
97emlTT8qq8EszQ0QLg3SpYr78mpU7DbahWZNd0ZNd3ZdYrCht6adlW3Cmad
LkXo1XLaxz9shg4FM/p0qNnftfyGvkJFcX2PuKD1ZFzdprCK2ScL/v1d5usb
k55eHmumDegwe3ZlPJpK09uUHH8SigYnnSd2LbpUA2XNyuSKTm5Oy8W0xgup
+NZwKkkeVdiq+HUZc6ZpKDe7mdS9BQB8mrr6aG+++Q/YDP01AVZW/b1tpji3
1rHrPEgW0YymslmZJeuWFrdLitquZzYZLCyrKaGso6Sht8sxEdFLz2HthKJh
iQanIxwAjMI0DT2TRMOXJAA4genH8+kd/9t5VaSviVkgLbB2cRXNFl2yo3dD
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
    
    "], {{0, 262.4671916010499}, {464.9418822647169, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{464.9418822647169, 262.4671916010499},
  PlotRange->{{0, 464.9418822647169}, {0, 262.4671916010499}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"b79049af-9705-4383-a752-04c647288760"],

Cell["Using Python within Wolfram Language(Mathematica)", "Item",
 CellChangeTimes->{{3.838025141679214*^9, 3.838025227876436*^9}, {
  3.83802532672224*^9, 
  3.838025331972769*^9}},ExpressionUUID->"85ac1851-103c-462e-83ee-\
4a31ebbbcb50"],

Cell["Using Wolfram Language within Python", "Item",
 CellChangeTimes->{{3.838025141679214*^9, 
  3.838025247242268*^9}},ExpressionUUID->"013a9c95-13b6-4321-934f-\
2388dfcff546"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"22ab6866-1bf4-46f3-a2e4-44edcfb485ae"],

Cell[CellGroupData[{

Cell["Mathematica vs The Wolfram Language", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
  3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
  3.806043947681655*^9}},ExpressionUUID->"6587d1f1-9a94-40db-8ff5-\
cbfafb6d38dd"],

Cell["\<\
While initially conceived together, WL and Mathematica are now considered \
separate entities, with Mathematica being the primary IDE for WL.

Mathematica is an interactive notebook IDE that allows output to be displayed \
in-line with input code.
 Code and outputs are contained in cells which are paired together and can be \
moved/copied together or separately.

Mathematica is not the only IDE which supports WL:\
\>", "Text",
 CellChangeTimes->{{3.80604401655891*^9, 3.806044266127441*^9}, {
   3.8060459447045116`*^9, 3.8060459453375454`*^9}, {3.8060466714214525`*^9, 
   3.806046707493146*^9}, 3.8091624440810504`*^9, {3.8111427500945187`*^9, 
   3.811142753256257*^9}, {3.8116791895885324`*^9, 3.81167925460155*^9}, {
   3.838025365213386*^9, 
   3.8380253884463387`*^9}},ExpressionUUID->"c8f326cd-33dd-4f52-8fb8-\
bc7cf3a33a77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Row", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<IntelliJ.png\>\"", "]"}], ",", 
      RowBox[{"Import", "[", "\"\<Eclipse.png\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"Spacer", "[", "40", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806044350449813*^9, 3.8060444145599623`*^9}, 
   3.806045466021843*^9, {3.806045511040243*^9, 3.806045530677824*^9}, {
   3.806045729780439*^9, 3.8060457839009237`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"68b72466-fc3e-43d1-84e8-a8f3cdcb4989"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{40}, "Spacer1"], 
   GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
9dJuFpSG1oHpftLM97WbTf8/05/hUcPfJu331YpB798xY8aqb6MrGmiqi86u
THtbaLcLikd6OUa71/Q/3D5oQP/D27/0P3cNtNRVX6yo8QZp9wuKQ3r5oHav
6X+4fdCA/oe3f+l/7hroqMu+K8cAh2o3DAojm0p/SXr5sXav6X+4fdCA/oe3
f+l/7hpoqOt+Ip7j/4oM3EJaeY52q+l/+H3QgP6Ht3/pf+4a6GdU/EXFBK+f
dtMgd6SVf9NuNf0Pvw8a0P/w9i/9z10D3YySf6lMe0ntrsHGkU7upt1p+q/T
Bw3of3j7l/7nroFmRs3W4d9bNlS7b7BhpJOztDtN/3X6oAH9D2//0v/cNdDL
SDn07KXLknWZb2v3DXqmbcfxfaSTGe1O03+dPmhA/8Pbv/Q/d7V7GSWHnbHc
S9a1esn6lsO0Gwc9k03WVGs3mv7r9UED+h/e/qX/uavdzKhYccoKL3X1fGl/
Ro4BMl/Xbhz0jDTyTu1G03+9PmhA/8Pbv/Q/d7W7GQUrJnV6A67Mdre/2321
GwfrZ35ZeitpZId2o+m/Xh80oP/h7V/6n7va7XTetOcNnP7umu33//6/u3bn
YP1IHydq95n+6/ZBA/of3v6l/7mr3k/HHTTl/c+1P+OVN2S4/98o0sfHtPtM
/3X7oAH9D2//0v/c1e6nyw45f/E67e/uf2uZdudgXbKp2pT0caV2n+m/bh80
oP/h7V/6n7vaDXXVYWd9tN72+5bVz9teu3WwLtLGqdptpv/6fdCA/oe3f+l/
7mp31EWHn/6xl5rZ2mP/d52V2VK7dbA28mH3+/+Kdpvpv34fNKD/4e1f+p+7
2i11zYrJK73UVW09tt93u/9e2Ee7d7A2bcn0/tpdpv82+qAB/Q9v/9L/3NXu
qVPWdnoDr2jfYPvFj7VbB+siXfyxdpfpv40+aED/w9u/9D931ZvqkIOmvbex
9vsu0m4drM2C8ppNpYsLtbtM/3PzgAMO9MaOHVuwzzzzTGBtueGGGwt6Tf42
ab+vVqT/dtRuqisOvvjDXNrv267dO1ibbLL2OO0m0//wDLIv48efrL59rkv/
7ajdVRccem5Hru33fVu7d7A20sT7tZtM/8OT/tuW/ttRu63WHf691Wv65Nz/
V7V7B5+RLa/dXpq4XLvJ9D886b9t6b8dtftq2eGnfuKlZs7Pp/2+L2o3Dz4j
m6z9nnaP6X+40n/b0n87ajfWqhWTVnoDvp/Nt/2+z2o3Dz5Devicdo/pf7jS
f9vSfztqd9ak6U5v4OWfX9MnZx/Xbh50I+f+ldotpv/hS/9tS//tqN5agw6+
dN01ffLwj9rdg26khTO1W0z/w5f+25b+21G7tdYccsH61/TJw/u1uweJxJsD
JvSWFr6j3WL6H77037b0347avbXksLN7XtMnD+/Rbh90Pe/3W9odpv860n/b
0n87ajfXil1r+uT3O7+evE27fdD1t/9faHeY/utI/21L/+2o3V0LVkxesdE1
ffLwZu32xZ35yUlbSAcXa3eY/utI/21L/+2o3V51azu9ARtf0ycfr9PuX9zJ
lteepN1g+q8n/bct/bejen+VHXTZwlK233emdv/ijjRwjnaD6b+e9N+29N+O
2v3VNI81ffJxunb/4kx2wMQyaeAK7QbTfz3pv23pvx21G6zl0PPyWtMnD1sv
0m5gnGlLpS/W7q+29J/+W5b+21G7wxoOO3OZ3+lg+l+XOUu7gXFG+jdXu7/a
0n/6b1n6b0ftFoft8NMKWtMnHydpNzCuSPv20W6vBek//bcs/bejdo/DtHtN
n5L9zq8nx2t3MK5I+36k3V4L0n/6b1n6b0ftJoemv6bPjAVBt993jHYH40jL
ridvIu1r126vBek//bcs/bejepdDctDUotb0ycfR2i2MI9K9b2t314r0n/5b
lv7bUbvLYTjkwkVhtd9L1bceqt3COCLdm63dXSvSf/pvWfpvR+02B+3Qs5eG
1v6u/je0HKTdwrjRXj5pO+neMu3uWpH+03/L0n87avc5SIefsbxUa/rkcf6f
2Ue7h3FDmneqdnMtSf/pv2Xpvx21Gx2UFaes8FJXB/o7vx5s3U27h3FDmvdn
7eZakv7Tf8vSfztqdzoQS7+mTx7n/y2DtXsYJ9qTNUOleZ3azbUk/af/lqX/
dlRvdalNe97Ay95VaX/39f/MrtpNjBPSuyu1e2tN+k//LUv/7aje6xI7+JIP
1Nrf7fwvajcxLnh7T+4lvXtTu7fWpP/037L0347avS6lQ85botx+Of+f+dbm
2l2MC9ny9MHarbUo/af/lqX/dtRudqnsXtNHt/2+O17T1ke7i3FBWvdz7dZa
lP7Tf8vSfztqd7sUhrCmT64u125iXGgvm9BfWvehdmstSv/pv2Xpvx21212s
FZNXeqmrAl/TJ1c/1O5iXJDOjdPurFXpP/23LP23o3a/izLd6Q0IZ02fXG3T
7mJckM79QbuzVqX/9N+y9N+O6g0vwkHT3tPu/ed9S7uLcaAtNXFn6dwn2p21
Kv2n/5al/3bUbnihDr4ovDV98vAV7TbGAWnc+dqNtSz9p/+Wpf921O54IQ49
J9w1ffLw79ptjAPSuBe1G2tZ+k//LUv/7ajd8nwddsZyLxnymj55+Ix2G6NO
ezL9Fe2+Wpf+03/L0n87avc8H/XW9MnZx7T7GHWkbz/U7qt16T/9tyz9t6N2
03Nu/6ROb8CVWe2+b8w/aPcxyrw3aHJf6dt87b5al/7Tf8vSfztqdz0n/TV9
puut6ZOHv9FuZJSRth2h3VYXpP/037L0347qbc/BQVPe1+56rt6t3cgoI227
R7utLkj/6b9l6b8dtdu+MYecv1i76fl4q3Yjo0p7ec020ral2m11QfpP/y1L
/+2o3fcNOeysj7R7nq8/1u5kVGlL1pRJ234mLtDuq3XpP/23LP23o3bje3L4
aR97qZlmf+fXkz/U7mTUmVeW7tuerDmUYwH635P037b0347anV+fFZNXWFrT
Jx+v1u5jnGjZ9eRN1jgWWKjdXSvSf/pvWfpvR+3Wr2NtpzfginbtjhfqZdpN
jCvvlp28mbTvKPEO8QPtBtN/Pem/bem/HdV7/zkNrumTjxdqdxASicwuE2N9
LED/6b9l6b8dtXu/poMv/lC730Xa8j3t9sHatA6avPpY4JdxORag//TfsvTf
jtrNX+3QczsM9Ltoa7V7Bz3TOjDdLw7HAvSf/luW/ttRu/u+w79nek2ffDxJ
u3GQG22p2jWPBRZpN5v+l076b1v6b0f19p/6iZeaaXpNn3w8XrtrkD/zk5O2
kG6OERvFDu1+0//ipP+2pf921Gx/xaSV3oDvm1/TJ3cbMkdqtwyKwz8WaEum
x7p8LED/6b9lH3jggcD2j88JJ4xR30ZXVOt/utMbePkC/WaX1m9p9wtKR9ff
BVKfHgs48+xh+k//Lfvoo48Gtn98jj/+ePVtdEWt/g++1Jk1fXK2vD7zVe1m
QTCsukZwogvHAvSf/lv2hRdeCGz/+Bx77LHq2+iKGu0fcoFTa/rk0f+WvbQ7
BcFj/ViA/tN/y86fPz+w/eNz+OFHqG+jK4bd/mFnO7emTz7n/1XabYJwWVCe
9tclPFn8nbhMu/30n/5bduutt/E6OzsD2z8+hxzyDfXtdMUw2z/89I+9VDR+
57d+6zKDtHsEeiwYMGHbD06oemvhgYd52QET6b+S9N+uBx30tcD2zWr+4z/2
U99OVwyr/RWnOLumT84OaGjZRbtBoEfH1MQxHdMSnu+Sizb1Phw31NM4FqD/
9N+qF110cWD7ZjWDBg1W305XDKX/bq/pk7MDZ2W+oN0g0OG9ixN9pfv/Wt3/
NQ37WID+0//Pu9lm/br+9q79Oh5++OHA9s1qtthiS/XtdMUw+j/wsoXqbQ7D
wXXt/bU7BDpI5yetr/0axwL0n/6vaa9evb277rrLe+KJJ73+/TdXex3bbvsF
b/ny5YHtG5/Fixerv98uGXT73V/TJ2c7R8yY20u7QxA+y6Yk+kvbW3Lp/1rH
Ahf28z4YW+G9u9/hXjZVQ/9LJP1f2/r6+k9f/0MPPaR2DHD66acHtl9WM3fu
XPX32yWDbH9E1vTJ1Y+0OwQ6SMsvybf96xwLXFC6YwH6T/9Xe9ppp62zDf7f
4MP+G3nv3n28l16aG9h+Wc399z+g/p67ZFDtH3bmsqis6ZOr72t3CMKn49LE
F6Xf7xfb/1IeC9B/+u87evRR3ieffLLe7fjLX57zvvSlHUN7LWPHnhjYPlmT
q666Sv19d8kg2j/8tEit6ZOr87VbBOEjvf5BKdtfimMB+k//99lnX2/JkiUb
3JY333zTGzFit8Bfy5ZbbuW99dZbge2TNeHZv/lZ6vZ3r+kT7d/59eCb2i2C
cJE+J8WlQfZ/7WOB/nIsULnRYwH6H+/+Dx482Mtmszltj3+McNJJ4wN9Pbfc
cktg++Pz7LLLrurvv0uWtP/+mj4zIremT66+rN0jCBdp8i/Cav86xwLnbeF9
cPwI7919RsuxAP1f0zj3/4tf3N579dVX896uW2+9tev+/FK/nrPPPieAvbB+
Xn/9dfX33zVL2f9BEVzTJw//pt0jCI+OqYndpMMrtPrf47EA/Y9t//37+p9+
+umCt62lpcUbN+47Xb8XLMXrueCCCwN/1u+a3Hjjjer7wDVL1f7BFy7S7q+2
f9ZuEoSHdPd32t3v6VjgmFS8n38Sx/7799fPnv3rkmzjc88933XvoP/vLOS1
+PcVNjUFtw96orp6lPp+cM1StH/o2Uu122vBR7WbBOGwdFria9qd35DHVenP
FU3j2P/rr7++5Nv62muveVOmTPGGDBma02vw/38zZ87segZP2Lz77rveJpts
qr4fXLPoe/3PWB7tNX1y93+1uwTB483oOvf/s3bjo9z/Aw440Bs7dmzBPvPM
M4F15oYbbizoNfnbFNT7de655wW2vavxfytw1113e9OnT/cmTZrkjRs3zkun
011/47/llp97L774YuCvYUPceONN6p9bFy3qXn9/TZ+rY/c7v578tXabIHjW
XOPHqq73P8jzdy38bQrivTr22OO8lStXam+eOl/+8pfVP7cuWnD7Y7KmTx7e
pd0mCJYNrfFjSfpvjyD6f+CBX/U++ugj7U1T5/HHH1f/zLpqYb/z89f0eVe7
t9a8RbtPECzS1lrtttN/Nyl1/4cNG+4tWLBAe7NMcMQRR6p/Zl21oHv9L/lA
u7UWvVG7TxAcha7xQ//zl/5vWP/++n//+9/am2SCZ555tmS/V4yjed/rf94S
7c5a9QfajYLg6CjBGj/0Pzfpf8/66/Y899xz2ptjhoMPPkT98+qy+bR/2Jkf
aTfWsldpNwqCYdUaP+9pd53+u0up+n/fffdpb4oZ/GcMaH9WXTfn3/nFc02f
fJym3SkIBmnqNdpNp/9uU6r+T5o0WXtTTLBo0SJv113L1D+rrpvTvf6TV3qp
q2K5pk8+nq/dKSg9S6eGu8YP/af/G7Ourk57c9SprZ2k/jmNghu/17/TGxDf
NX3y8QztVkHp6VBc44f+R4dS9t+/3+2GG27Q3iQ17rvvfvXPaFTcWP8HTXtP
u6uO2JLWbhWUFktr/NB/tyn17//8Y4Cbb75Ze7NCx38msb/GofZnNCpu8Hd+
F8V+TZ98/I52r6C0dBhd44f+u0cQz//x1+e56aabtDctNNrb273hwyvUP59R
ssff+Z3Dmj55epx2r6B0WF/jh/67RVDP//W9/PLLtTcvcPxnHe2xB8/4LbXr
/Z3fGcu9JGv65GnLEdrNgtKwao2fp7U7Tv+jQ5D99/3P/xzndXR0aG9mIPhr
Dw0dOkz9cxlF113T5xPW9CnMb2p3C0qDNNT8Gj/03y2C7r/v3nvv03V9PEo0
Nzd722+/g/pnMqqu1f/ald6AK7PaHXXTuswB2t2C4llwUaKPNPRl7YbT/2gR
Rv99t9lmW+/OO+/S3tyiWb58uXfppVO9Pn36qn8eo+xaa/pMZ02fwm3ZU7td
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
AAAAAAAAAAAAOMn/ByNn3gI=
      "], {{0, 512.}, {512., 0}}, {0, 255}, 
      ColorFunction -> RGBColor], 
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
     Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {512., 512.}, PlotRange -> {{0, 512.}, {0, 512.}}], 
   GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1:eJzs3QdYFFffNvBN4YnkjWmaHltsgBQVe8MWOwi7LE2xd2n2HrH3jl3ZxS6J
GruwJKZqokajabZoTDEmptkrnHfOsqsL7sKWmflvue/r+n1vPh8LMLPnnnbO
VOiRrOzzuEKhGFJC+H+U3Uc0Gzy4+yjV88L/R500pH/fpN692iYN7d239+B6
PZ4QflHxeL4nFQiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIIgtYfvVz7Ac1VtMF12PZavDWHZ0L5Yd
OYJlRc1i2VHpwq+/z3KiPxZ+/XOWE3NE8K3BeZYd+wvTxfzKcuKu5Iu9KWAG
Nx/8Ov89/PfyP/Pwzx/J/zuFv5v/G/zf0v+bwr/Nv4YsVaj+a+JfW1b8/0n1
/Q+NX/N/KeGa8oNUq2slRGa0TYxY3WVAhHZQQoR2ckKEZqkgM1GlyUlUpn+U
pNQeTFRqvs6nPSv835+SVNoLiar0/zjhf7+RpNIwPeG/H/w6/z3C7zX8Gf2f
z/+70j/ifzf/N/L/Le1k/m/zryFJrWnDvyb+tfUJXf60VN8/giAI4n5hO/s8
zfZFB7G9kUqmixoq9OtioYt3CY4LLglum/S1c9N/rTG/G772Xfnfi/A98e+N
f4/C91r4+x+kzvQepNJWEzo2NDFCm5QQkT43MUKzRejjI0L//ib8+q0Hfe3k
+NcqHDf8xr92/j3kfy/aJP698e+Rf68U+xiCIAhCE/35u07dSDhnThbO3xcJ
59E7hPPmY0JHXibvbBnc2RfPzq/vxz5ZMJy9l5p6c0nKrH8n91j07/CYlTeo
O1t2kZpLSUrNoQSl5r1EZfps4df6JSpX1sP1AwRBENeO0PNlWY4ymmWpJwtd
v1U4Hz7LdLG51B0sl3+3d2dfL09h+6aPYZoR09jkHotZSmQ6fe+6AuHYIFGV
sY9fN0hSpvdKVmUEpipSH6fepxEEQZCHYftTn2QfqOuw7Mjhwvn8Bv0175y4
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
AAAAAAAAAAAAAAAAAAAAAAAAAACANfMDNFgfQQ==
      "], {{0, 512.}, {512., 0}}, {0,
       255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
     Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {512., 512.}, PlotRange -> {{0, 512.}, {0, 512.}}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.806044382886397*^9, 3.806044415336979*^9}, 
   3.8060455318789444`*^9, {3.8060457511658597`*^9, 3.8060457842336645`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"c06136c3-348a-4912-968c-30cf4608dac6"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ebe74292-68f7-414d-98de-008ea64e4783"],

Cell[CellGroupData[{

Cell["History", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
  3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
  3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
  3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
  3.8062301482531786`*^9}},ExpressionUUID->"3096e40d-10d8-4a4f-9f64-\
cd5513765b29"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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

     "], {{0, 165.}, {165., 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{58.09090909090926, Automatic},
   ImageSizeRaw->{165., 165.},
   PlotRange->{{0., 165.}, {0., 165.}},
   PlotRangePadding->Automatic]],ExpressionUUID->
  "f9d75974-9165-4219-bc4f-c536471bfd37"],
 "\n",
 StyleBox["Python",
  FontSize->36],
 StyleBox["  ",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.80604401655891*^9, 3.806044266127441*^9}, {
   3.8060459447045116`*^9, 3.8060459453375454`*^9}, {3.8060466714214525`*^9, 
   3.806046707493146*^9}, {3.8061414440380163`*^9, 3.8061414604180884`*^9}, {
   3.8061414955452247`*^9, 3.806141541980028*^9}, {3.8061469503123007`*^9, 
   3.80614696112156*^9}, {3.806147834582568*^9, 3.8061478584300566`*^9}, {
   3.8061479466233435`*^9, 3.8061479483288565`*^9}, 
   3.8061479906357737`*^9},ExpressionUUID->"c24244db-91ad-4c85-914e-\
8856ac638257"],

Cell[CellGroupData[{

Cell["V1.0 First Released 1991, as a successor to ABC", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.80614738069659*^9}, {
  3.810383022937385*^9, 
  3.810383027359804*^9}},ExpressionUUID->"b32b214b-34b2-4257-9075-\
51444df50a8b"],

Cell["V2.0 - 2000", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.80614738069659*^9}, {
  3.810383022937385*^9, 3.810383029289669*^9}, {3.8103832645140285`*^9, 
  3.810383266337528*^9}},ExpressionUUID->"f0d7605a-1a58-41c7-8290-\
8ff96041af1e"],

Cell["V3.0 - 2008", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.80614738069659*^9}, {
  3.810383022937385*^9, 3.810383031081218*^9}, {3.8103832689549165`*^9, 
  3.8103832698870597`*^9}},ExpressionUUID->"8c693184-948a-4a52-a3be-\
528129ce28ec"]
}, Open  ]],

Cell["Object-oriented language which emphasises readability", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}},ExpressionUUID->"6337176d-4865-429b-86bb-\
75321b4311d3"],

Cell["\<\
The first Python notebooks appeared in 2001\[CloseCurlyQuote]s IPython, \
inspired by Mathematica notebooks\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474825841737`*^9, 3.806147510407359*^9}, {3.8061480114365044`*^9, 
  3.8061480114384985`*^9}, {3.806222663063704*^9, 3.8062226787506137`*^9}, {
  3.806222798088995*^9, 3.806222799744663*^9}, {3.8062300855977345`*^9, 
  3.806230086583394*^9}, {3.806230143907854*^9, 3.806230151382327*^9}, {
  3.806230185422672*^9, 3.806230185701742*^9}, {3.8103833125868797`*^9, 
  3.810383331005192*^9}},ExpressionUUID->"8a93cb2e-8040-4f8c-b294-\
5cade920adbb"],

Cell[TextData[{
 StyleBox[" ",
  FontSize->36],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
rBF1mKa52+h8X9rAuHOySZMm3NOk1lxzzTXsfURS3XVO6Azx22+/yZ9++klO
njxZvv/++3LIkCGyd+/eslOnTvLOO++0xlK9evVk5cqVZYkSJWRGRkZE2ygm
JkYWLlxYVqhQQdauXVs2atRItmrVysot/eyzz1rnGXr2JUuWyD/++EOeOnWK
tU0BACBcUKwg13pFd0HGG1Q3IdwaVJP6LhF5SgbxvBGzsab528aYk9P5HF99
9VXuaVJbtm7dqk298+nTp4flb/z777/l2rVrrX+fYhRfeOEFq85iixYtZN26
dWW5cuWsb2Tcf384pG9KdE6is0qzZs1kx44dZb9+/eQ777wjv/76a7ls2TIr
19jp06fD0vYAABAORo8ezTq39krg35fpZGMzap6fVhYXPKzy8RnZTIgSMlPD
73ktzRhbubpq1SruqVJbaC/O3T9ktWrVAt4DHzx4UK5cudK6u/Taa6/JLl26
WN9SatSooU09Rd2l7yolS5a08sRR2z388MOyf//+1jegb775Rq5YsULu3Lkz
xKMPAAD8h343oRq1XPPlVYj5OMO1yiQzap4vF3y8mMdzaeNwze5g0Xko0Yyx
dY702y9+2/WOLjU/6N5QXhw9etTaA1MNyYEDB8p7773XugdFd5G4n91JUn1h
ivWk70b0/YjyBQwYMEB++OGHcsqUKVbsy+7duyM0egEATmPPnj3yggsuYJsD
i7mEXKLhb8ScvmNOXYYBgo8GeTyXNt6o2R2sF8zJqXaOlFcW5M7GjRvZ+4cs
UKDAv7HVlIuLYq7pd/du3brJ66+/XpYuXVpGRUWxPyf03bi4OKvf6Ix4yy23
yM6dO1vnRsp1MHXqVOubJMXrAwCAr5w8eVJed911bPMaxXx8hpiPc7w9jn/N
8dHLBR9q+Ig9Xp5LG+lbw2qNzte1zciplquUbwjkzqBBg9j7h6RYaopNoN+0
cM5wlpSzv2zZsrJ+/fpWHD3dnXvxxRetOJ0ffvhBrl69Wv7111/crwoAQAN6
9OjBOl91R8zHOW5QFjIjN9GfSpfgZbTgb4d8fSuZf1yR082pZ3mOtJelHEAg
dygmmbuPIPRFOqfQXcpatWpZZ9X27dvLvn37npPvCwBgTyZOnMj6+9QVMUJu
1GBPppujzLl79YHgp7Xgb4d8ba7JHaxO8fxtEagUfwxyh/Je4VsDtJu5nVPo
Ox99T6F6KvQ9Zf/+/dyvHwDADyh/YWpqKtu8Utgl5E9p/PsxHW1lzt2rWwU/
acoswd8WeUq5BNYw38Gis34JM76r5eoTTzzBPW1qC+WJ4u4fCLlMSUmxarhQ
7bK77rrLijWiPN2ffPKJnDNnjhUbRfVgAAC80O8FdEeXa65wKUcj5iNX1ynT
zchNRHt+2vvrwEzB3x75OpL5DtaH5nxXy9XvvvuOe+rUlmuvvZa9fyDU3YSE
hHPiU87+nnLgwAHu1xkAW0L1U2+88UbWOeBxxHx4dYQ5e8RpQh+6Cf72yNeW
zHewmhlc84PyhFLdOXAulGuK7qlw9xGEdtGXcwrldgMA+M4zzzzD+l5f7vbE
V3Pv83X1RnP2iI8JfbhQ8LdHvqZGeb5vcYyrZelCxpvxXS1XGzZsyD11agvV
vebuHwidqC/nFPxuAoCUX331lXS5XGzvahGXkAsR8+FVw+rClRd6sUbwt0m+
vs10B+s5g2t+kM8//zz39KktVDOOu38ghN7NyMiQVatWlY0aNbJqGFHe0aFD
h8px48bJefPmyc2bN8usrCzuqQSAsLB+/XqZlpbG9v5RzMcoTXKQ6uprSfzz
pI9mCv2gOojc7ZKvjWJ4xtbFBtf8IH/88UfuKVRbypcvz94/EMLg9eWccuLE
Ce4pBwCfoXuKNKY536uuiPnIV9qbcs9/PtpX6EdNwd8u+epWLo5wHqxpqfx/
dzBSbhusublD+xHu/oEQRs7o6GhZvHjxf3MSd+jQwaqdMnLkSKt2ytKlS63a
KRTrCwAnp0+fljfffDPr+/K/GMR85Cfdz4/VYG7z0epCTzYJ/rbJ1z6JkR1b
7Q2u+UFSvgyQO++//z57/0AI9dSX7yknT57knsaATRkwYADr+Kd6A0uY6x6Y
4Avm3M/fIPTlJcHfPvlaJTpy44rO/UUMrvlBvvzyy9zTqLbce++97P0DITTb
3M4pZ9eix/cU4A9Tp061vtVxjWn6PX8i6nz45OXm3M8fKPTlcsHfPj75TWpk
xtW75uRz9uqyZcu4p1JtKVeuHHv/QAjtL+VAP7sWPd37wjkFnM2WLVtkoUKF
WMfrcxG+Z2Kqs9M88fnc84uP1hL6EqXcKvjbKF8fiI/M2GpsTj7nXC1QoADW
My/QWs/dPxBCmNO4uDifzikUGwDsx5EjR+Qll1zCOgabMddaM8lHzbmfv0V4
9vg6M0zwt1O+FnIJuT7M4+pns2KKcvWWW27hnk61ZezYsez9AyGEgYhzij1p
3bo167iqGO2pZcG9rzfBjcqS5tzPHyL050rB304++W6Y81E/a05MkVeHDx/O
PZ1qC+p+QAjtbmJioqxYsaJs0KCBbNOmjezatasVEzh69Gg5a9YsuXbtWtR4
1IQhQ4bwjpUoIb+P0N12O/iRWffz6wr9iVbuEPxtla9NwvyNsGo0/98YrGvW
rOGeUrWlTp067P0DIYQ66Est+v3793NP27Zl+vTp0u12s46B15P49/Qm2cyc
+/kUV+ESZjBU8LdXvsYIzx2pcIyrKYbX/CApxz2+vecO1UOh9Za7jyCE0CR9
OaccOHCAe4o3it9++00WLlyYtV/vi1BMrV1crvaeCVH876OPDhbmUEfwt5dP
9g9Tjob7zIkp8uqdd97JPa1qy4oVK9j7B0II7aov55SDBw9yLwXsHD16VNau
XZu1r2q6hVynwZ7eJPuZdT//YmEWVKeEu83y9SJ36McVxbUXNOdc69V3332X
e2rVFtQdhBBCfn05pxw6dIh7yQgb9913H2v7015nQRr/ft40a5hT82OtMI/+
gr/dfHJSiOOl3jYrpsirv/zyC/fUqi2dOnVi7x8IIYS+efY5Jbda9FlZWdxL
i18MGzaMtU2pbsWHYc7jY0cNu5/fW5hHJcHfbj55e1xox9a1Mfx/U7CWKVOG
e2rVmv/973/sfQQhhDB0RkVFyaJFi8qLLrpINm3aVN5///2yT58+8s0335ST
Jk2SixYtktu2bbPi/7iZO3eujImJYW2vJxL49/Imatj9/ArCTH4W/G2XrxQD
tDREcehL0j1x7dx/U7DSvAu8U7BgQfY+ghBCyGNGRoasWrWqbNSokWzbtm2u
31PCdU6huixUu4Xz7786xlO/gnsvb5qr1R4x3Zz7+T8Kc+km+NvPJ3uHKA7d
DjU/SMrtDnJn586d7P0DIYRQf305p5w8edLn9YfuiNEdMs6/6TxX+HKH2t0X
zNojdhbmUkJ5UvC3Yb6WdoXmLF/dBjU/SPrGDHJn5syZ7P0DIYTQPvp6Tnnw
wQdZn5NqDE5BjcGArWbOHpH27sWE2UwX/O3okx8FGUf1vVkxRV6tVKkS9xZf
a9566y32PjLF5ORkWaxYMVm+fHlZq1Yt2bBhQ3nTTTfJ2267TbZv31527NjR
WmefeuopK2cN1e8dMWKElV+M1t0vv/zSymEzZ84cuWTJEsuVK1daa3FOt2/f
Lvft23eGx44dy7X/qFbz2f/ZbOncnfPf3bBhg/X/c8GCBdZz0B1weq733nvP
ek565gEDBlh/w2OPPWb9TZS3unnz5la96GrVqln3JOLj49n7AkJottzxHlHK
YagxGLCfp/CPIT/8TphPW8Hfjj5JcePBjK0OZsUUefXhhx+O8I7eLDp37sze
R5GQYjELFChgnR0uvfRSef3118vWrVvLhx56SD799NPWWYHOCePHj7f25gsX
LrRyXVItLNrLo3blmRw5csQ632RmZsrZs2dbZytqP2pHak9q1xYtWsjLLrvM
OrO4XC72MQAhhNl2RI3BoGxuTr1zsrUwnwTlfsHflvkarZwdYB5rurtV3MX/
N4RC2k8C79xwww3sfRSIaWlpsmLFirJevXrWNwjKG9+zZ0/58ssvW7nyv/32
Wyu/C/3uT+cHwAvFrm7dulXOnz/f+uby6quvyscff1zefvvtVv610qVLy9jY
WPZxBSG0v/+LEXKDBnt4U12cLmSsBv3oo38Jz97dDrwj+NvTJzsFeL7/0CY1
P+g31927d3NvvbSmSpUq7P2UbUpKirzwwgutuz60L6XaWwMHDpQffvihdZ5Y
vny5dTfp+PHj3M0GwgB9Y6LvKXQn/LzzzsM3EwhhyC3p8uT25N7Dm+zjCfz9
6IdvCPtQT/C3p08WUu/ZugDGVguzvqt5lfKeg7yhmIZw9wPdfSpevLh174nu
5NCdr8GDB8sxY8ZYed/pG8Xhw4e5mwJoBuXG+f33363xsWrVKit2he7F0f04
csKECda3lI8//tiKX3n77betGBayd+/eVhwLfWOhOBaS4nSoVhvVQqC42Kuv
vtqK4yErVKhg1XOju2IUO0vf17jnLwhhaKX6BF8j3jwo6btRCbPux9QW9mKN
4G9Tn3zVz/iqzHRPTgju5w6FXbt25d5Cac2ePXuCbmP6jZrOFnTPv2XLltbZ
4qWXXpJjx461zhZbtmzB9wpgNIcOHbLu8FGuajoLPfroo+xzG4TQPynefCji
zYP2LbPux2QK+9FD8LerT9Zy+ze2Xkzif+ZQOXnyZO6ti9YsXbo03zakbxf0
mzDd0b/rrrvkM888Y8UZU95eOlvQb9QAOImDBw+y10uDEPrno4g3D4n13Px9
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
ib/nB+KfwX6WsvhnAwCkwO/CPRMb
     "], {{0, 800.}, {800., 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{64.22727272727319, Automatic},
   ImageSizeRaw->{800., 800.},
   PlotRange->{{0, 800.}, {0, 800.}}]], "Input",ExpressionUUID->
  "e9d54252-085f-4915-b3c2-d262bd52ea65"],
 " \n",
 StyleBox["Mathematica",
  FontSize->36]
}], "Text",
 CellChangeTimes->{{3.80604401655891*^9, 3.806044266127441*^9}, {
   3.8060459447045116`*^9, 3.8060459453375454`*^9}, {3.8060466714214525`*^9, 
   3.806046707493146*^9}, {3.8061414440380163`*^9, 3.8061414604180884`*^9}, {
   3.8061414955452247`*^9, 3.806141541980028*^9}, {3.8061469503123007`*^9, 
   3.80614696112156*^9}, {3.806147526540861*^9, 3.80614753026691*^9}, {
   3.806147870861575*^9, 3.8061479066858406`*^9}, {3.8061479431513944`*^9, 
   3.806147944290783*^9}, 3.8061479887080727`*^9},
 TextJustification->
  0.75,ExpressionUUID->"e80ad072-2f97-46ab-947b-28d5843ef63b"],

Cell["\<\
First Released June 1988, combining kernel (WL) and front-end notebook \
interface (Mathematica)\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.80614738069659*^9}, {
  3.806147540130476*^9, 3.8061475432582717`*^9}, {3.8061475935512314`*^9, 
  3.806147603841202*^9}, {3.806148001332958*^9, 3.806148003893546*^9}, {
  3.811142761756694*^9, 
  3.8111427617718487`*^9}},ExpressionUUID->"6d207b0a-9150-420a-b09c-\
72b09f32050f"],

Cell["Current Version 12.2", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.80614738069659*^9}, {
  3.806147540130476*^9, 3.8061475432582717`*^9}, {3.8061475935512314`*^9, 
  3.806147603841202*^9}, {3.806148001332958*^9, 3.806148003893546*^9}, {
  3.8111427624130282`*^9, 3.811142772456143*^9}, {3.8117454646634607`*^9, 
  3.8117454647261395`*^9}},ExpressionUUID->"f0e9e958-f7dd-4045-8b77-\
23aebcfe4544"],

Cell["\<\
Emphasises computation and automation, and allows for arbitrary structures \
and data\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
   3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147673201543*^9, 
   3.806147702881201*^9}, {3.8062226847895684`*^9, 3.80622268660707*^9}, {
   3.810383375764547*^9, 3.8103833805394435`*^9}, 
   3.811142792173049*^9},ExpressionUUID->"8aae3c51-df2b-4038-a43c-\
16f326044dd7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e8b99d73-bd0e-4cbd-bbe7-af79d0737648"],

Cell[CellGroupData[{

Cell["External Evaluation", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
  3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
  3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
  3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
  3.8062301482531786`*^9}, {3.8380255886739483`*^9, 
  3.838025596715376*^9}},ExpressionUUID->"d13e2aaa-8981-4703-998a-\
6175ad61661d"],

Cell["\<\
The Wolfram Language supports immediate access to REPLs for external \
languages such as Python, Julia, JavaScript (Node.js), etc.\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
  3.838025838071699*^9, 
  3.838025849103283*^9}},ExpressionUUID->"8edbe766-5db3-4abd-bfdc-\
67c843ba0f44"],

Cell["\<\
Once an external system is discovered or registered, ExternalEvaluate \
immediately calls the system, either in a one-shot mode or through a \
persistent session.\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.838025874312439*^9, 
  3.838025874312954*^9}},ExpressionUUID->"fe792ebe-4da1-4144-8605-\
e76f5aebba7c"],

Cell[CellGroupData[{

Cell["String based command execution for external evaluators:", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
   3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
   3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
   3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
   3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
   3.8380258752677317`*^9, 3.838025902599456*^9}, 
   3.8380259581226273`*^9},ExpressionUUID->"7a7e5c8f-6d45-4483-bea1-\
6925fedbdbe2"],

Cell["Python", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025914699944*^9}},ExpressionUUID->"b2e582ea-3c51-47f5-9c91-\
92fa7fba3d7e"],

Cell["Node.js", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025921175765*^9}},ExpressionUUID->"02c6be70-4285-4f6e-ba6f-\
f9e5fb427b51"],

Cell["Julia", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025925555122*^9}},ExpressionUUID->"28b95ff7-5b4a-4003-ade3-\
2916f31c2ac4"],

Cell["Ruby", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025927571843*^9}},ExpressionUUID->"08e1e3c0-147c-47e8-87d4-\
2ab1f432c87d"],

Cell["R", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025931324731*^9}},ExpressionUUID->"a25122dc-7dcd-491b-9b63-\
472bc2f8d648"],

Cell["Java ", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025936216288*^9}},ExpressionUUID->"b45efe63-ce52-45ab-9bfa-\
70f591f1e3ff"],

Cell["Octave", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025940280882*^9}},ExpressionUUID->"fca6ac16-8e4b-46be-9c6b-\
0d58bf3fdae0"],

Cell["Shell", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.838025944504796*^9}},ExpressionUUID->"065f38d9-27d1-4d64-b81f-\
a6b5d3fb6bd4"],

Cell[CellGroupData[{

Cell["SQL", "Subitem",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025816870949*^9}, {
  3.8380258752677317`*^9, 
  3.8380259464057283`*^9}},ExpressionUUID->"c6e2db33-59cc-49c7-ba5f-\
a5ed7e3286c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExternalEvaluate"}]], "Input",
 CellChangeTimes->{{3.838026824377274*^9, 3.8380268551253242`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"d33e88d8-8091-4081-bf42-57df75f716be"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ExternalEvaluate",
              ButtonNote->"paclet:ref/ExternalEvaluate"],
             "\"paclet:ref/ExternalEvaluate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"sys\\\
\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
evaluates the command \\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) in the \
external evaluator \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\), returning \
an expression corresponding to the \
output.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"sys\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\\\
\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\
\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) uses the options \
\\!\\(\\*StyleBox[\\\"opts\\\", \\\"TI\\\"]\\) for the external evaluator.\\n\
\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"DatabaseReference\\\", \\\"[\\\", StyleBox[\\\"ref\\\", \
\\\"TI\\\"], StyleBox[\\\"]\\\", \\\"TI\\\"]}], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
evaluates \\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) using the database \
specified by \\!\\(\\*StyleBox[\\\"ref\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\
\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\
\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) using the external evaluator \
specified by \\!\\(\\*StyleBox[\\\"assoc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"session\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\
\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\
\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) in the specified running \
ExternalSessionObject.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \
\\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \
\\\"\[Rule]\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"type\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\",\\\", \\\"\
\[Ellipsis]\\\"}], \\\"]\\\"}]\\) returns output converted to the specified \
type. \\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates the content of the specified File, \
URL or CloudObject.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assoc\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates the command \
specified by \\!\\(\\*StyleBox[\\\"assoc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \\\"\[Ellipsis]\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates the list of commands \
\\!\\(\\*SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of ExternalEvaluate that can be applied to a command or object.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ExternalEvaluate", 
                    "paclet:ref/ExternalEvaluate", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ExternalEvaluate.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ExternalEvaluate.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ExternalEvaluate\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ExternalEvaluate",
              ButtonNote->"paclet:ref/ExternalEvaluate"],
             "\"paclet:ref/ExternalEvaluate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"sys\\\
\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
evaluates the command \\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) in the \
external evaluator \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\), returning \
an expression corresponding to the \
output.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"sys\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\\\
\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\
\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) uses the options \
\\!\\(\\*StyleBox[\\\"opts\\\", \\\"TI\\\"]\\) for the external evaluator.\\n\
\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"DatabaseReference\\\", \\\"[\\\", StyleBox[\\\"ref\\\", \
\\\"TI\\\"], StyleBox[\\\"]\\\", \\\"TI\\\"]}], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
evaluates \\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) using the database \
specified by \\!\\(\\*StyleBox[\\\"ref\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\
\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\
\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) using the external evaluator \
specified by \\!\\(\\*StyleBox[\\\"assoc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"session\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\
\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"cmd\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\
\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"cmd\\\", \\\"TI\\\"]\\) in the specified running \
ExternalSessionObject.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \
\\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \
\\\"\[Rule]\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"type\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\",\\\", \\\"\
\[Ellipsis]\\\"}], \\\"]\\\"}]\\) returns output converted to the specified \
type. \\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates the content of the specified File, \
URL or CloudObject.\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assoc\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates the command \
specified by \\!\\(\\*StyleBox[\\\"assoc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \\\"\[Ellipsis]\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates the list of commands \
\\!\\(\\*SubscriptBox[StyleBox[\\\"cmd\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ExternalEvaluate\\\", \\\"[\\\", \
StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of ExternalEvaluate that can be applied to a command or object.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", RowBox[{StyleBox[\"\\\"\\!\\(\
\\*StyleBox[\\\"sys\\\",\\\"TI\\\"]\\)\\\"\", ShowStringCharacters->True], \
\",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"cmd\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) evaluates the command \
\!\(\*StyleBox[\"cmd\", \"TI\"]\) in the external evaluator \
\!\(\*StyleBox[\"sys\", \"TI\"]\), returning an expression corresponding to \
the output.\n\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", \
RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"sys\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"opts\", \"TI\"]}], \"}\"}], \
\",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"cmd\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) uses the options \
\!\(\*StyleBox[\"opts\", \"TI\"]\) for the external evaluator.\n\
\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", \
RowBox[{RowBox[{\"DatabaseReference\", \"[\", StyleBox[\"ref\", \"TI\"], \
StyleBox[\"]\", \"TI\"]}], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"cmd\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) evaluates \!\(\*StyleBox[\"cmd\", \
\"TI\"]\) using the database specified by \!\(\*StyleBox[\"ref\", \"TI\"]\).\n\
\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", RowBox[{StyleBox[\"assoc\", \
\"TI\"], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"cmd\\\",\\\"TI\\\"]\\)\\\
\"\", ShowStringCharacters->True]}], \"]\"}]\) evaluates \!\(\*StyleBox[\"cmd\
\", \"TI\"]\) using the external evaluator specified by \
\!\(\*StyleBox[\"assoc\", \"TI\"]\).\n\!\(\*RowBox[{\"ExternalEvaluate\", \"[\
\", RowBox[{StyleBox[\"session\", \"TI\"], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"cmd\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) evaluates \!\(\*StyleBox[\"cmd\", \
\"TI\"]\) in the specified running ExternalSessionObject.\n\
\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", RowBox[{RowBox[{StyleBox[\"sys\", \
\"TI\"], \"\[Rule]\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"type\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \",\", \"\[Ellipsis]\"}], \"]\"}]\) returns \
output converted to the specified type. \n\!\(\*RowBox[{\"ExternalEvaluate\", \
\"[\", RowBox[{StyleBox[\"spec\", \"TI\"], \",\", StyleBox[\"obj\", \
\"TI\"]}], \"]\"}]\) evaluates the content of the specified File, URL or \
CloudObject.\n\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", \
RowBox[{StyleBox[\"spec\", \"TI\"], \",\", StyleBox[\"assoc\", \"TI\"]}], \"]\
\"}]\) evaluates the command specified by \!\(\*StyleBox[\"assoc\", \
\"TI\"]\).\n\!\(\*RowBox[{\"ExternalEvaluate\", \"[\", \
RowBox[{StyleBox[\"spec\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"cmd\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\
\", SubscriptBox[StyleBox[\"cmd\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
\"\[Ellipsis]\"}], \"}\"}]}], \"]\"}]\) evaluates the list of commands \
\!\(\*SubscriptBox[StyleBox[\"cmd\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\!\
\(\*RowBox[{\"ExternalEvaluate\", \"[\", StyleBox[\"spec\", \"TI\"], \
\"]\"}]\) represents an operator form of ExternalEvaluate that can be applied \
to a command or object.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ExternalEvaluate", "Web" -> 
      "http://reference.wolfram.com/language/ref/ExternalEvaluate.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`ExternalEvaluate"], False]]], "Output",
 CellChangeTimes->{{3.8380268382016983`*^9, 3.838026855568759*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"eccfb03a-6896-4251-9d9a-2e722bc9a784"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.838026021524082*^9, 
  3.838026038984902*^9}},ExpressionUUID->"55a39328-92bf-48f6-8ea5-\
f6734d73282e"],

Cell["Evaluate a simple arithmetic expression in Python:", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.838026050250908*^9, 
  3.838026062841817*^9}},ExpressionUUID->"26c9abd7-c415-452d-8bd1-\
159d718f0fcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"\"\<Python\>\"", ",", "\"\<2+2\>\""}], "]"}]], "Code",
 CellChangeTimes->{{3.838026058716642*^9, 3.83802605872087*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1d567dae-4b41-4a73-b207-e7a6633490e9"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.838026075234387*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0698622f-8945-450d-9b49-e0144bdd4f8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"\"\<Julia\>\"", ",", " ", "\"\<sin(4.7)\>\""}], "]"}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.838026089995501*^9, 3.83802611237936*^9}, {
  3.838026899549131*^9, 3.838026907014402*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2829e533-8b49-462d-874a-62d421456f1b"],

Cell[BoxData[
 TemplateBox[{
  "ExternalEvaluate", "unknownSys", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Julia\\\\\\\"\\\"}]\\) is not a known \
system in the ExternalEvaluate Framework.\"", 2, 24, 7, 26364696842121266694, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8380260914918737`*^9, 3.8380261137152042`*^9}, {
  3.8380269039488564`*^9, 3.838026907467187*^9}},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"8b3e3db5-5b1a-4db8-adc6-6b39da1aa31e"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.838026091537416*^9, 3.838026113724724*^9}, {
  3.838026903958234*^9, 3.838026907478327*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"10b0dd69-5cbc-4070-8dd1-8cfb185ac36c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"305177db-3290-46c2-9076-3319f788a5db"],

Cell[CellGroupData[{

Cell["Configure Python For External Evaluation", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
  3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
  3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
  3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
  3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
  3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
  3.838027199710236*^9}},ExpressionUUID->"3517b571-2e3a-4071-aa2e-\
2386de62949a"],

Cell["\<\
Python(Usually installed on MacOS and many linux distributions)\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
  3.838025838071699*^9, 3.838025849103283*^9}, {3.8380268016768513`*^9, 
  3.8380268075166683`*^9}, {3.838026946997799*^9, 
  3.838026992787678*^9}},ExpressionUUID->"97ea6169-9cb1-4fab-a049-\
99508857f445"],

Cell["the pyzmq package for communication with python", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
  3.838025838071699*^9, 3.838025849103283*^9}, {3.8380268016768513`*^9, 
  3.8380268075166683`*^9}, {3.838026946997799*^9, 
  3.838027022948308*^9}},ExpressionUUID->"8c4504c5-715f-4c94-b394-\
4dec07a05a88"],

Cell[TextData[StyleBox["$ pip install pyzmq",
 FontWeight->"Bold"]], "Program",
 CellChangeTimes->{{3.838027083134886*^9, 3.838027085882279*^9}},
 CellID->179385132,ExpressionUUID->"dc89a988-e648-447d-b7d0-d4d31dcd1064"],

Cell[CellGroupData[{

Cell["For more details see:", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
   3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
   3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
   3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
   3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
   3.838025838071699*^9, 3.838025849103283*^9}, {3.8380268016768513`*^9, 
   3.8380268075166683`*^9}, {3.838026946997799*^9, 3.838027022275825*^9}, {
   3.83802710921091*^9, 3.838027120345155*^9}, 
   3.838029479039735*^9},ExpressionUUID->"3c0a9cef-5458-40cf-88dd-\
afdadc60f072"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
       RowBox[{
         RowBox[{
           RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", 
           "language"}], "/", "workflow"}], "/", 
       RowBox[{"ConfigurePythonForExternalEvaluate", ".", "html"}]}]}], {
    URL["https://reference.wolfram.com/language/workflow/\
ConfigurePythonForExternalEvaluate.html"], None}, 
   "https://reference.wolfram.com/language/workflow/\
ConfigurePythonForExternalEvaluate.html", "HyperlinkActionRecycled", {
   "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, HyperlinkAction -> 
   "Recycled"},
  "HyperlinkTemplate"]], "Input",
 CellChangeTimes->{{3.838027138027544*^9, 3.8380271552279787`*^9}},
 TextAlignment->Center,ExpressionUUID->"bc1d1e51-d3f4-4a2b-86c9-e4fa1ed11c76"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"92fde9c9-ceac-44a1-8201-fc8c1cf975df"],

Cell[CellGroupData[{

Cell["Calling Python within Mathematica", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
  3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
  3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
  3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
  3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
  3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
  3.838027199710236*^9}, {3.838028853857625*^9, 
  3.838028869685255*^9}},ExpressionUUID->"fc241cee-af91-497a-b0e9-\
e1506946c6df"],

Cell[CellGroupData[{

Cell["\<\
Use \[OpenCurlyDoubleQuote]>\[CloseCurlyDoubleQuote] to convert  a code cell \
to external evaluation mode (python is the default) \
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
  3.838025838071699*^9, 3.838025849103283*^9}, {3.8380268016768513`*^9, 
  3.8380268075166683`*^9}, {3.838026946997799*^9, 3.838026992787678*^9}, {
  3.838028878017376*^9, 
  3.8380289648999767`*^9}},ExpressionUUID->"bb8d0df0-2dfb-4493-914b-\
fae4fd71a649"],

Cell[CellGroupData[{

Cell["\<\
import numpy as np
np.sin(1.4)\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.838028950964025*^9, 3.838029004885454*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ed745a3d-0f93-4e8f-8790-b0c90c0ccf4c"],

Cell[BoxData["0.9854497299884601`"], "Output",
 CellChangeTimes->{3.838119542528323*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ee844701-3aa5-48d6-ad5d-ab6955efde4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[np.sin(i) for i in range(5)]", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.838029015218361*^9, 3.838029034810068*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"41d41483-a36a-48bb-9f9a-da8057afe351"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.8414709848078965`", ",", "0.9092974268256817`", ",", 
   "0.1411200080598672`", ",", 
   RowBox[{"-", "0.7568024953079282`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.838029035240687*^9, 3.8381195947422743`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2349af8a-89fa-4012-aa47-51ba003c995d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ExternalEvaluate starts and terminates a session immediately after  evaluation\
\>", "Item",
 CellChangeTimes->{{3.8061473409453707`*^9, 3.806147395235118*^9}, {
  3.8061474822472935`*^9, 3.806147482248325*^9}, {3.806147697553631*^9, 
  3.806147699924657*^9}, {3.8103832963171625`*^9, 3.810383308049087*^9}, {
  3.8103833467945805`*^9, 3.810383349166339*^9}, {3.811679275173343*^9, 
  3.8116792752675657`*^9}, {3.838025778095419*^9, 3.838025789350443*^9}, {
  3.838025838071699*^9, 3.838025849103283*^9}, {3.8380268016768513`*^9, 
  3.8380268075166683`*^9}, {3.838026946997799*^9, 3.838027022948308*^9}, {
  3.838029059257352*^9, 3.8380290632844143`*^9}, {3.838029155223686*^9, 
  3.8380291853198013`*^9}, {3.838029248153974*^9, 
  3.838029253708207*^9}},ExpressionUUID->"2deec565-dc4a-4371-a76c-\
52a6b55a7e1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"\"\<Python\>\"", ",", "\"\<def f(x): return x**2\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.838029066331305*^9, 3.8380291004329023`*^9}, 
   3.838119696850478*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"b6ed90c6-564a-483f-8b7d-2a6aea5ada0e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"x\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox["\"f\"", "Program", LineBreakWithin -> False], 
                   ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"x\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox["\"f\"", "Program", LineBreakWithin -> False], 
                    ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PythonFunction\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsModule: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsClass: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsMethod: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsCallable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ExternalSessionObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"79d08388-f7ac-4549-89ff-40545b74c3a6\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"79d08388-f7ac-4549-89ff-40545b74c3a6\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6", "Exists"]], 
                    ExternalSessionObject[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6"]["Active"], False],
                     StandardForm], TrackedSymbols :> {
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"79d08388-f7ac-4549-89ff-40545b74c3a6\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12801", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12801", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mk\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0", "\"B\"", "bytes", "\"Bytes\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["214641920", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Thu 1 Jan 1970 02:00:04\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "2", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"1970", ",", "1", ",", "1", ",", "2", ",", "0", 
                    ",", "4.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "2.`"}], "]"}]}, "DateObject", 
                    Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1628219581", "19", "27", "1.453125`5.", 
                    RowBox[{"\[ThinSpace]", "\"days\""}], 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "days,hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Days\"", ",", "\"Hours\"", ",", "\"Minutes\"", 
                    ",", "\"Seconds\""}], "}"}]}, "QuantityMixedUnit4"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1628217953", "14", "34", "40.015625`5.", 
                    RowBox[{"\[ThinSpace]", "\"days\""}], 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "days,hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Days\"", ",", "\"Hours\"", ",", "\"Minutes\"", 
                    ",", "\"Seconds\""}], "}"}]}, "QuantityMixedUnit4"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"18855", "16", "21", "37.`5.", 
                    RowBox[{"\[ThinSpace]", "\"days\""}], 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "days,hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Days\"", ",", "\"Hours\"", ",", "\"Minutes\"", 
                    ",", "\"Seconds\""}], "}"}]}, "QuantityMixedUnit4"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 1, "PID" -> 12801, 
                    "PPID" -> 11673, "Program" -> "python3.8", "Path" -> 
                    "/usr/bin/python3.8", "User" -> "mk", "StartTime" -> 
                    DateObject[{2021, 8, 21, 13, 5, 46.}, "Instant", 
                    "Gregorian", 2.]]], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"SocketObject", "[", 
                    "\"ZMQ-2af9b61b-b777-4ea6-b359-24f98153500e\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6", "Exists"]], 
                    ExternalSessionObject[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6"][
                    "EvaluationCount"], None], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "79d08388-f7ac-4549-89ff-40545b74c3a6"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ExternalSessionObject[
                   "79d08388-f7ac-4549-89ff-40545b74c3a6"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[
   Association[
   "System" -> "Python", "Type" -> "PythonFunction", "Arguments" -> {"x"}, 
    "Command" -> "f", "IsModule" -> False, "IsClass" -> False, "IsFunction" -> 
    True, "IsMethod" -> False, "IsCallable" -> True, "Session" -> 
    ExternalSessionObject["79d08388-f7ac-4549-89ff-40545b74c3a6"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838029101582244*^9, 3.838119701745116*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b54b7b6e-1c0f-4476-b6bb-677c57733e06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.838029107587687*^9, 3.8380291090662737`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"26fdae9b-33de-4604-ad77-446c69714385"],

Cell[BoxData[
 TemplateBox[{
  "ExternalEvaluate", "invalidSession", 
   "\"The session \
\\!\\(\\*InterpretationBox[RowBox[{TagBox[\\\"ExternalSessionObject\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[List[Hue[0.5766283524904214`, 0.6682027649769585`, 0.651`], \
EdgeForm[None], FilledCurveBox[List[List[List[1, 4, 3], List[1, 3, 3], \
List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[0, 1, \
0], List[0, 1, 0], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, \
0], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, \
0], List[1, 3, 3]]], List[List[List[58, 120], List[60, 120], List[62, 118], \
List[62, 115], List[62, 112], List[60, 110], List[58, 110], List[55, 110], \
List[53, 112], List[53, 115], List[53, 118], List[55, 120], List[58, 120]], \
List[List[72, 128], List[44, 128], List[46, 116], List[46, 116], List[46, \
104], List[73, 104], List[73, 100], List[36, 100], List[36, 100], List[18, \
102], List[18, 74], List[18, 45], List[33, 46], List[33, 46], List[43, 46], \
List[43, 59], List[43, 59], List[42, 75], List[58, 75], List[85, 75], \
List[85, 75], List[99, 75], List[99, 89], List[99, 114], List[99, 114], \
List[102, 128], List[72, 128]]]]], List[Hue[0.1164`, 0.745`, 0.99`], \
EdgeForm[None], FilledCurveBox[List[List[List[1, 4, 3], List[1, 3, 3], \
List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[0, 1, \
0], List[0, 1, 0], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, \
0], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, \
0], List[1, 3, 3]]], List[List[List[88, 27], List[85, 27], List[83, 29], \
List[83, 32], List[83, 34], List[85, 37], List[88, 37], List[91, 37], \
List[93, 34], List[93, 32], List[93, 29], List[91, 27], List[88, 27]], \
List[List[73, 18], List[101, 18], List[99, 31], List[99, 31], List[99, 43], \
List[73, 43], List[73, 47], List[110, 47], List[110, 47], List[128, 45], \
List[128, 73], List[128, 102], List[112, 101], List[112, 101], List[103, \
101], List[103, 87], List[103, 87], List[104, 72], List[88, 72], List[61, \
72], List[61, 72], List[46, 72], List[46, 57], List[46, 33], List[46, 33], \
List[44, 18], List[73, 18]]]]]], List[Rule[ImageSize, List[Automatic, \
Dynamic[Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"]]]]], Rule[ImageSize, \
List[Automatic, Dynamic[Times[3.5`, \
CurrentValue[\\\"FontCapHeight\\\"]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"System: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"Python\\\\\\\"\\\", \\\"SummaryItem\\\"]]], RowBox[List[TagBox[\\\"\\\\\\\
\"Version: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"3.8.5\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"UUID: \\\\\\\"\\\
\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\
\\\\\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]], \\\"\\\\[SpanFromLeft]\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[List[Hue[0.5766283524904214`, 0.6682027649769585`, 0.651`], \
EdgeForm[None], FilledCurveBox[List[List[List[1, 4, 3], List[1, 3, 3], \
List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[0, 1, \
0], List[0, 1, 0], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, \
0], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, \
0], List[1, 3, 3]]], List[List[List[58, 120], List[60, 120], List[62, 118], \
List[62, 115], List[62, 112], List[60, 110], List[58, 110], List[55, 110], \
List[53, 112], List[53, 115], List[53, 118], List[55, 120], List[58, 120]], \
List[List[72, 128], List[44, 128], List[46, 116], List[46, 116], List[46, \
104], List[73, 104], List[73, 100], List[36, 100], List[36, 100], List[18, \
102], List[18, 74], List[18, 45], List[33, 46], List[33, 46], List[43, 46], \
List[43, 59], List[43, 59], List[42, 75], List[58, 75], List[85, 75], \
List[85, 75], List[99, 75], List[99, 89], List[99, 114], List[99, 114], \
List[102, 128], List[72, 128]]]]], List[Hue[0.1164`, 0.745`, 0.99`], \
EdgeForm[None], FilledCurveBox[List[List[List[1, 4, 3], List[1, 3, 3], \
List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[0, 1, \
0], List[0, 1, 0], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, \
0], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, \
0], List[1, 3, 3]]], List[List[List[88, 27], List[85, 27], List[83, 29], \
List[83, 32], List[83, 34], List[85, 37], List[88, 37], List[91, 37], \
List[93, 34], List[93, 32], List[93, 29], List[91, 27], List[88, 27]], \
List[List[73, 18], List[101, 18], List[99, 31], List[99, 31], List[99, 43], \
List[73, 43], List[73, 47], List[110, 47], List[110, 47], List[128, 45], \
List[128, 73], List[128, 102], List[112, 101], List[112, 101], List[103, \
101], List[103, 87], List[103, 87], List[104, 72], List[88, 72], List[61, \
72], List[61, 72], List[46, 72], List[46, 57], List[46, 33], List[46, 33], \
List[44, 18], List[73, 18]]]]]], List[Rule[ImageSize, List[Automatic, \
Dynamic[Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"]]]]], Rule[ImageSize, \
List[Automatic, Dynamic[Times[3.5`, \
CurrentValue[\\\"FontCapHeight\\\"]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"System: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"Python\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Version: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"3.8.5\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"UUID: \\\\\\\"\\\
\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\
\\\\\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Active: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[DynamicBox[ToBoxes[If[TrueQ[ExternalEvaluate`Private`getSessionOpts[\\\
\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\", \\\"Exists\\\"]], \
ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\"][\\\"\
Active\\\"], False], StandardForm], RuleDelayed[TrackedSymbols, \
List[ExternalEvaluate`Private`$Links]]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"/usr/bin/python3\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"UUID: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Process: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[InterpretationBox[RowBox[List[TagBox[\\\"ProcessObject\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[List[Set[Typeset`open$$, \
False], Set[Typeset`embedState$$, \\\"Ready\\\"]], \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Program: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"python3.8\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"PID: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"12801\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Program: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"python3.8\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"PID: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"12801\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\
\\\\\"Parent PID: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"32753\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"User: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"mk\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\
\\\"Path: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"/usr/bin/python3.8\\\\\\\"\\\
\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Memory:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"0\\\", \\\"\\\\\\\"B\\\\\\\"\\\", \\\"bytes\\\", \
\\\"\\\\\\\"Bytes\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Threads: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Start Time: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[RowBox[List[\\\"\\\\\\\"Thu 1 Jan 1970 02:00:02\\\\\\\
\"\\\", StyleBox[RowBox[List[\\\"\\\\\\\"GMT+\\\\\\\"\\\", \
\\\"\\\\[InvisibleSpace]\\\", StyleBox[\\\"2\\\", Rule[NumberMarks, False], \
Rule[StripOnInput, False]]]], Rule[FontColor, GrayLevel[0.5`]]]]], \
RowBox[List[\\\"DateObject\\\", \\\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1970\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\
\", \\\"2\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"2.`\\\"]], \\\"}\\\"]], \
\\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", \\\"2.`\\\"]], \\\"]\\\"]]], \\\
\"DateObject\\\", Rule[Editable, False]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"System Time: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"1.`5.\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"seconds\
\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, \
Mod]], \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"User \
Time: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"9.9999999999999995474811182588626`5.*^-7\\\", \
\\\"\\\\\\\"s\\\\\\\"\\\", \\\"seconds\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Real Time: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"18855\\\", \\\"16\\\", \\\"21\\\", \
\\\"44.`5.\\\", RowBox[List[\\\"\\\\[ThinSpace]\\\", \\\"\\\\\\\"days\\\\\\\"\
\\\"]], RowBox[List[\\\"\\\\[ThinSpace]\\\", \\\"\\\\\\\"h\\\\\\\"\\\"]], \
RowBox[List[\\\"\\\\[ThinSpace]\\\", \\\"\\\\\\\"min\\\\\\\"\\\"]], \
RowBox[List[\\\"\\\\[ThinSpace]\\\", \\\"\\\\\\\"s\\\\\\\"\\\"]], \
\\\"days,hours,minutes,seconds\\\", RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\
\\\\\"Days\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Hours\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Minutes\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"]], \\\"}\\\"]]], \\\"QuantityMixedUnit4\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"]], ProcessObject[Association[Rule[\\\"ManagedProcess\\\", True], \
Rule[\\\"UID\\\", 1], Rule[\\\"PID\\\", 12801], Rule[\\\"PPID\\\", 11673], \
Rule[\\\"Program\\\", \\\"python3.8\\\"], Rule[\\\"Path\\\", \
\\\"/usr/bin/python3.8\\\"], Rule[\\\"User\\\", \\\"mk\\\"], \
Rule[\\\"StartTime\\\", DateObject[List[2021, 8, 21, 13, 5, 46.`], \
\\\"Instant\\\", \\\"Gregorian\\\", 2.`]]]], Rule[Selectable, False], \
Rule[Editable, False], Rule[SelectWithContents, True]], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Socket: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"SocketObject\\\", \\\"[\\\", \
\\\"\\\\\\\"ZMQ-2af9b61b-b777-4ea6-b359-24f98153500e\\\\\\\"\\\", \
\\\"]\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"EvaluationCount: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[DynamicBox[ToBoxes[If[TrueQ[ExternalEvaluate`Private`getSessionOpts[\\\
\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\", \\\"Exists\\\"]], \
ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\"][\\\"\
EvaluationCount\\\"], None], StandardForm], RuleDelayed[TrackedSymbols, \
List[ExternalEvaluate`Private`$Links]]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"ProcessMemory: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[DynamicBox[ToBoxes[If[TrueQ[ExternalEvaluate`Private`getSessionOpts[\\\
\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\", \\\"Exists\\\"]], \
Refresh[ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\"][\\\
\"ProcessMemory\\\"], Rule[UpdateInterval, 5]], \
Missing[\\\"NotAvailable\\\"]], StandardForm], RuleDelayed[TrackedSymbols, \
List[ExternalEvaluate`Private`$Links]]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"ProcessThreads: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[DynamicBox[ToBoxes[If[TrueQ[ExternalEvaluate`Private`getSessionOpts[\\\
\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\", \\\"Exists\\\"]], \
Refresh[ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\"][\\\
\"ProcessThreads\\\"], Rule[UpdateInterval, 5]], \
Missing[\\\"NotAvailable\\\"]], StandardForm], RuleDelayed[TrackedSymbols, \
List[ExternalEvaluate`Private`$Links]]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"SessionTime: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[DynamicBox[ToBoxes[If[TrueQ[ExternalEvaluate`Private`getSessionOpts[\\\
\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\", \\\"Exists\\\"]], \
Refresh[ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\"][\\\
\"SessionTime\\\"], Rule[UpdateInterval, 1]], Missing[\\\"NotAvailable\\\"]], \
StandardForm], RuleDelayed[TrackedSymbols, \
List[ExternalEvaluate`Private`$Links]]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], ExternalSessionObject[\\\"79d08388-f7ac-4549-89ff-40545b74c3a6\\\
\"], Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]]\\) is invalid and cannot be used.\"", 2, 5, 1, 26365341316321831314, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838029109459937*^9, 3.8381197061865673`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"b59bd203-1c7a-4350-a7d1-f4a3270aec59"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.838029109550136*^9, 3.838119706211381*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2dfe37ca-66a4-4d79-bd02-79af3641a699"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Start an external Python session, automatically discovering any usable \
installations :\
\>", "Text",
 CellChangeTimes->{{3.838029273380862*^9, 
  3.838029275295824*^9}},ExpressionUUID->"eb09871b-507f-4506-a444-\
3fa028525cb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", "=", 
  RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"683948a3-3568-4a55-8b68-a084a3cb74c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["Active"], False],
                     StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"/usr/bin/python3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12807", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12807", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11673", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mk\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"23.552`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sat 21 Aug 2021 13:55:13\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "2", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "8", ",", "21", ",", "13", ",", "55",
                     ",", "13.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "2.`"}], "]"}]}, "DateObject", 
                    Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0299999999999999989`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.2800000000000000266`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"4", "26", "58.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 2, "PID" -> 12807, 
                    "PPID" -> 11673, "Program" -> "python3.8", "Path" -> 
                    "/usr/bin/python3.8", "User" -> "mk", "StartTime" -> 
                    DateObject[{2021, 8, 21, 13, 55, 13.}, "Instant", 
                    "Gregorian", 2.]]], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"43169\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ZMQ-426fb44f-b74b-4896-bcf7-67e1c8ae546d\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"43169\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", 
                    "\"c833:9f47:fe7f:0:c833:9f47:fe7f:0\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"40775\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["ZMQ-426fb44f-b74b-4896-bcf7-67e1c8ae546d"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["188bfdb0-baaf-4810-a93c-93b04649a914"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838029294294338*^9, 3.838029536816003*^9, 
  3.838119731217999*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"91857f96-ed4a-4b11-8c1a-1ade7c03a775"]
}, Open  ]],

Cell["Evaluate code in the session:", "Text",
 CellChangeTimes->{{3.8380293068616753`*^9, 
  3.838029307500794*^9}},ExpressionUUID->"4c00a6ea-203e-48f5-8ed8-\
7cbca4809646"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", "\"\<def f(x): return x**2\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.838029527433361*^9, 3.838029533324935*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ede8eb57-42ee-49a9-94cf-51add523365a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"x\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox["\"f\"", "Program", LineBreakWithin -> False], 
                   ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"x\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox["\"f\"", "Program", LineBreakWithin -> False], 
                    ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PythonFunction\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsModule: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsClass: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsMethod: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsCallable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ExternalSessionObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["Active"], False],
                     StandardForm], TrackedSymbols :> {
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"188bfdb0-baaf-4810-a93c-93b04649a914\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12807", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12807", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11673", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mk\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"25.124864`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sat 21 Aug 2021 13:55:13\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "2", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "8", ",", "21", ",", "13", ",", "55",
                     ",", "13.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "2.`"}], "]"}]}, "DateObject", 
                    Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0299999999999999989`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    "0.2999999999999999889`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"4", "27", "17.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 2, "PID" -> 12807, 
                    "PPID" -> 11673, "Program" -> "python3.8", "Path" -> 
                    "/usr/bin/python3.8", "User" -> "mk", "StartTime" -> 
                    DateObject[{2021, 8, 21, 13, 55, 13.}, "Instant", 
                    "Gregorian", 2.]]], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"43169\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ZMQ-426fb44f-b74b-4896-bcf7-67e1c8ae546d\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"43169\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", 
                    "\"c833:9f47:fe7f:0:c833:9f47:fe7f:0\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"40775\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject["ZMQ-426fb44f-b74b-4896-bcf7-67e1c8ae546d"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"][
                    "EvaluationCount"], None], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "188bfdb0-baaf-4810-a93c-93b04649a914", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "188bfdb0-baaf-4810-a93c-93b04649a914"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ExternalSessionObject[
                   "188bfdb0-baaf-4810-a93c-93b04649a914"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[
   Association[
   "System" -> "Python", "Type" -> "PythonFunction", "Arguments" -> {"x"}, 
    "Command" -> "f", "IsModule" -> False, "IsClass" -> False, "IsFunction" -> 
    True, "IsMethod" -> False, "IsCallable" -> True, "Session" -> 
    ExternalSessionObject["188bfdb0-baaf-4810-a93c-93b04649a914"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8380293163022127`*^9, {3.838029533864863*^9, 3.838029538735058*^9}, 
   3.838119750824397*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"5bf2e608-5eab-4280-a89c-f0a025cd1905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "9", "]"}]], "Input",
 CellChangeTimes->{{3.8380295402585278`*^9, 3.838029544831546*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1a4b0119-d80c-4df0-935e-448566ed2c3b"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{{3.838029541650667*^9, 3.838029545244594*^9}, 
   3.838119753504327*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"6d8228e9-e2e1-4e03-bd80-bee533a6673c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Stop", " ", "the", " ", "session", " ", "with", " ", 
   TemplateBox[{
     Cell[
      TextData["DeleteObject"]], "paclet:ref/DeleteObject"},
    "RefLink",
    BaseStyle->{"InlineFormula"}]}], ":"}]], "Text",
 CellChangeTimes->{{3.838029332526538*^9, 
  3.838029335926859*^9}},ExpressionUUID->"98a8c992-d2df-4f2b-948c-\
6e725e549f56"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "session", "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"d1e46028-f4df-489e-bfc6-47e4efdd7bfa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f3ada9cb-0ba7-40bf-9ef0-618587bf8588"],

Cell[CellGroupData[{

Cell["\<\
Evaluate multiple lines of code in Python session through list:\
\>", "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 
   3.8380298499038486`*^9},ExpressionUUID->"f85bf9cd-2bd7-420d-b9d9-\
29f90c5c6e23"],

Cell["Start an external Python session :", "Text",
 CellChangeTimes->{{3.838029273380862*^9, 3.838029275295824*^9}, {
  3.8380297359047613`*^9, 
  3.838029736689168*^9}},ExpressionUUID->"988da2f5-f097-4614-9b9c-\
3c4d1861b1df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", "=", 
  RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"0debd247-6d1a-4aa1-98d5-fffd3c20cdde"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"75e73602-05f4-4390-bfa2-6fdb80199030\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.8.5\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"75e73602-05f4-4390-bfa2-6fdb80199030\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "75e73602-05f4-4390-bfa2-6fdb80199030", "Exists"]], 
                    ExternalSessionObject[
                    "75e73602-05f4-4390-bfa2-6fdb80199030"]["Active"], False],
                     StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"/usr/bin/python3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"75e73602-05f4-4390-bfa2-6fdb80199030\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12837", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12837", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11673", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mk\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3.8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"24.064`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sat 21 Aug 2021 16:37:32\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "2", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "8", ",", "21", ",", "16", ",", "37",
                     ",", "32.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "2.`"}], "]"}]}, "DateObject", 
                    Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0400000000000000008`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.2600000000000000089`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1", "46", "16.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 3, "PID" -> 12837, 
                    "PPID" -> 11673, "Program" -> "python3.8", "Path" -> 
                    "/usr/bin/python3.8", "User" -> "mk", "StartTime" -> 
                    DateObject[{2021, 8, 21, 16, 37, 32.}, "Instant", 
                    "Gregorian", 2.]]], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"35755\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ZMQ-8bce5208-4539-40bc-a0bd-c719637614b0\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"35755\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", 
                    "\"c833:9f47:fe7f:0:c833:9f47:fe7f:0\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"40775\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["ZMQ-8bce5208-4539-40bc-a0bd-c719637614b0"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "75e73602-05f4-4390-bfa2-6fdb80199030", "Exists"]], 
                    ExternalSessionObject[
                    "75e73602-05f4-4390-bfa2-6fdb80199030"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "75e73602-05f4-4390-bfa2-6fdb80199030", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "75e73602-05f4-4390-bfa2-6fdb80199030"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "75e73602-05f4-4390-bfa2-6fdb80199030", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "75e73602-05f4-4390-bfa2-6fdb80199030"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "75e73602-05f4-4390-bfa2-6fdb80199030", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "75e73602-05f4-4390-bfa2-6fdb80199030"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["75e73602-05f4-4390-bfa2-6fdb80199030"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838029294294338*^9, 3.838029536816003*^9, 
  3.8381198285624733`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"46306a2f-727e-4e63-8ac3-6d3d33099af1"]
}, Open  ]],

Cell["Evaluate code in the session:", "Text",
 CellChangeTimes->{{3.8380293068616753`*^9, 
  3.838029307500794*^9}},ExpressionUUID->"82703989-e6e2-4b49-a4bd-\
c439f78898fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<import numpy as np\>\"", ",", "\"\<x = np.tan(np.pi)\>\"", ",", 
      "\"\<print(x)\>\""}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.838029527433361*^9, 3.838029533324935*^9}, {
  3.838029747603704*^9, 3.838029821597324*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"993c553c-80a2-417e-afe2-7e3418575042"],

Cell[BoxData["\<\"-1.2246467991473532e-16\"\>"], "Print",
 CellChangeTimes->{{3.83802978616604*^9, 3.838029821853691*^9}, 
   3.8381198629702682`*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"f87a1a12-22db-443e-9f57-78bfc87f1cb3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Stop", " ", "the", " ", 
  RowBox[{"session", ":"}]}]], "Text",
 CellChangeTimes->{{3.838029332526538*^9, 3.838029335926859*^9}, {
  3.8380298348391123`*^9, 
  3.838029838556518*^9}},ExpressionUUID->"37457342-e33b-466e-be68-\
210ccecf654d"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "session", "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"34f74799-cc53-4709-8c21-03d5adebf1be"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9c907b66-3312-445e-bc7f-afaaeb999e35"],

Cell[CellGroupData[{

Cell[TextData[{
 "Many Python types, like ",
 StyleBox["datetime", "InlineCode"],
 ", are natively mapped to Wolfram Language expressions:"
}], "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 3.8380298499038486`*^9, {
   3.8380299045490713`*^9, 3.838029930553801*^9}, 
   3.838030108386376*^9},ExpressionUUID->"f2c4ad80-8874-45c2-aad8-\
51cef9df8946"],

Cell[CellGroupData[{

Cell["\<\
import datetime
datetime.datetime(year = 1995,month = 9, day = 10)\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.8380299450327578`*^9, 3.838030013037369*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f16b49f2-61d2-42e7-828a-a468de0310bf"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sun 10 Sep 1995 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
        StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "1995", ",", "9", ",", "10", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.838029983604917*^9, 3.83803001572508*^9}, 
   3.838119923577136*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"46b705b6-884f-46e3-ab89-dc91ac67e802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.838030025828586*^9, 3.838030034475816*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ca630670-f55d-4869-8915-097c1f78430b"],

Cell[BoxData["DateObject"], "Output",
 CellChangeTimes->{3.838030034970982*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"6be31a69-0027-4f74-9b01-d818a9d94508"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9e4fce37-ccf2-4b67-8e1e-d09ceba2ea79"],

Cell[CellGroupData[{

Cell[TextData[{
 "Add two numbers in Python using an inline ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TemplateExpression"]], "paclet:ref/TemplateExpression"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e8d108a1-713f-4f51-adf7-26f4396d8b56"],
 ":"
}], "Subsection",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 3.8380298499038486`*^9, {
   3.8380299045490713`*^9, 3.838029930553801*^9}, 3.838030108386376*^9, 
   3.838030187751157*^9},ExpressionUUID->"6c5ca60b-74ef-4b59-83da-\
067523475cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "=", " ", "5"}]], "Input",
 CellChangeTimes->{{3.838030209635015*^9, 3.838030211485404*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"4d7f4a3e-0a86-47b3-8227-c6a8ae308254"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8380302120287533`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"e5bb447a-a568-4ac5-ae69-9fc443f14cbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", " ", "=", " ", "57"}]], "Input",
 CellChangeTimes->{{3.838030275961528*^9, 3.838030280460746*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"fc7eb94c-9461-4b90-a035-c0c5aa229ffc"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.838030280877253*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f7545549-9619-4683-8342-5cf27d502bfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<* x *> + <* y *>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.838030253096403*^9, 3.838030288768818*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"068f81cd-b9a0-4e05-bdac-f59210f8e2ac"],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{{3.8380302557509623`*^9, 3.8380302893328533`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"1fa94867-d1ce-4dc3-b4cd-38cae39ff142"]
}, Open  ]],

Cell["", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{
  3.838120026508739*^9},ExpressionUUID->"a2bdbf35-eb6a-4fc6-aa55-\
70c507ded1bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d4b68a4c-5be1-4a31-b6d1-40af306abdd0"],

Cell[CellGroupData[{

Cell["Wolfram Client Library for Python", "Section",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 3.8380298499038486`*^9, {
   3.8380299045490713`*^9, 3.838029930553801*^9}, 3.838030108386376*^9, 
   3.838030187751157*^9, {3.838031072809115*^9, 
   3.838031095255522*^9}},ExpressionUUID->"42430d79-ba9e-405c-a709-\
48133686ad6d"],

Cell["Announced and released to the public in May 2019", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 
  3.8380312176374197`*^9}},ExpressionUUID->"6ea63029-107c-4275-8979-\
2e75f0a4ea92"],

Cell["Addtion to the available connections J/Link , C/C++", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 
  3.838031246020814*^9}},ExpressionUUID->"bb921b99-94d8-4430-914f-\
9c6145dc1c7d"],

Cell["Fully open source", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 
  3.838031257828988*^9}},ExpressionUUID->"1b3d973f-a3be-474e-bb11-\
e002ea6b0c10"],

Cell["Needs active license ", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 
  3.838031267879582*^9}},ExpressionUUID->"674e117e-577b-4096-9a1c-\
36f561ed9fb9"],

Cell[CellGroupData[{

Cell[TextData[{
 "For development download ",
 ButtonBox["Wolfram Engine for Developers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/engine/"], None},
  ButtonNote->"https://www.wolfram.com/engine/"],
 " for free.\n"
}], "Item",
 CellChangeTimes->{{3.83803119877344*^9, 
  3.8380313586147823`*^9}},ExpressionUUID->"05834823-fd07-4858-b7b4-\
4e5acd4c2791"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4lBIZapM/5H0/wAxhHK1
    
    "], {{0, 117.7352830896138}, {129.73378327709037`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{129.73378327709037`, 117.7352830896138},
  PlotRange->{{0, 129.73378327709037`}, {0, 117.7352830896138}}]], "Input",Exp\
ressionUUID->"f219b3d8-6c47-41f3-ad0a-6ea8fe1dadf3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"32648a55-e6e2-46fa-8413-2dc75d3d0b47"],

Cell[CellGroupData[{

Cell["Wolfram Client Library for Python", "Section",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 3.8380298499038486`*^9, {
   3.8380299045490713`*^9, 3.838029930553801*^9}, 3.838030108386376*^9, 
   3.838030187751157*^9, {3.838031072809115*^9, 
   3.838031095255522*^9}},ExpressionUUID->"dc6814ba-6e9f-434b-a7bc-\
1c6186f87091"],

Cell[CellGroupData[{

Cell["Prerequisites", "Subsection",
 CellChangeTimes->{{3.838031706643689*^9, 3.8380317107991962`*^9}, {
  3.838031747330689*^9, 
  3.838031750999189*^9}},ExpressionUUID->"e727546e-2335-4432-a6c6-\
a8a20cc7f9fa"],

Cell["Python 3.5 or higher", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 3.8380312176374197`*^9}, {
  3.838031759567634*^9, 
  3.8380317624158897`*^9}},ExpressionUUID->"167fdfa6-a6dd-4cb6-94b5-\
ae1342766cd5"],

Cell["Wolfram Language 11.3 or higher", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 3.8380312176374197`*^9}, {
  3.838031759567634*^9, 
  3.8380317646316977`*^9}},ExpressionUUID->"2cb09839-9e6f-4a96-ac95-\
49bd12950953"],

Cell["Git (optional)", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 3.8380312176374197`*^9}, {
  3.838031759567634*^9, 
  3.838031764027587*^9}},ExpressionUUID->"2210c56b-6bdc-4cc5-8a12-\
c8338ca86990"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Installation", "Subsection",
 CellChangeTimes->{
  3.838031785062216*^9},ExpressionUUID->"55092274-87d6-454d-8406-\
8b954c2023f7"],

Cell["Install Using pip (Recommended) ", "Text",
 CellChangeTimes->{{3.838031810438716*^9, 
  3.8380318327011557`*^9}},ExpressionUUID->"f642890d-550b-4aa6-bae2-\
9a26a3c4aa0f"],

Cell[TextData[StyleBox["$ pip install wolframclient",
 FontWeight->"Bold"]], "Program",
 CellChangeTimes->{{3.838027083134886*^9, 3.838027085882279*^9}, 
   3.8380318609514217`*^9},
 CellID->1966060790,ExpressionUUID->"6066fa28-d671-4297-bbc8-c4d60fc38c7d"],

Cell["Install Using Git", "Text",
 CellChangeTimes->{{3.8380318827256737`*^9, 
  3.838031886869536*^9}},ExpressionUUID->"5d374f98-a5cf-4bfa-af90-\
2eec99d473f4"],

Cell[TextData[StyleBox["$ git clone \
git://github.com/WolframResearch/WolframClientForPython\n$ pip install .",
 FontWeight->"Bold"]], "Program",
 CellChangeTimes->{{3.838027083134886*^9, 3.838027085882279*^9}, 
   3.8380318609514217`*^9, {3.83803190776547*^9, 3.8380319197593184`*^9}},
 CellID->510991091,ExpressionUUID->"651577de-e316-473b-80f2-03541a8e1b19"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e3e2695b-2ba4-412c-a88a-4329c237f900"],

Cell[CellGroupData[{

Cell["Wolfram Client Library for Python", "Section",
 CellChangeTimes->{{3.797251529218274*^9, 3.797251530928546*^9}, {
   3.8060437725499697`*^9, 3.806043796249685*^9}, {3.8060439409124346`*^9, 
   3.806043947681655*^9}, {3.8061414310264964`*^9, 3.8061414328428116`*^9}, {
   3.8062228026081934`*^9, 3.8062228029152775`*^9}, {3.8062301479246798`*^9, 
   3.8062301482531786`*^9}, {3.8380255886739483`*^9, 3.838025596715376*^9}, {
   3.83802637775253*^9, 3.8380263873850317`*^9}, {3.8380271971756372`*^9, 
   3.838027199710236*^9}, {3.838028853857625*^9, 3.838028869685255*^9}, {
   3.838029682030017*^9, 3.838029716716342*^9}, 3.8380298499038486`*^9, {
   3.8380299045490713`*^9, 3.838029930553801*^9}, 3.838030108386376*^9, 
   3.838030187751157*^9, {3.838031072809115*^9, 
   3.838031095255522*^9}},ExpressionUUID->"e227e457-4e96-4a4e-96f0-\
b6a86722c384"],

Cell["\<\
run  python interactively using Jupyter from a browser interface\
\>", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 3.8380312176374197`*^9}, {
  3.838031759567634*^9, 3.8380317624158897`*^9}, {3.838032209487938*^9, 
  3.838032279584297*^9}},ExpressionUUID->"cc47793e-e6df-4a47-a62a-\
5e13ce1728f9"],

Cell["run  Jupyter with  VSCode", "Item",
 CellChangeTimes->{{3.83803119877344*^9, 3.8380312176374197`*^9}, {
  3.838031759567634*^9, 3.8380317624158897`*^9}, {3.838032209487938*^9, 
  3.83803223566434*^9}, {3.8380322952191277`*^9, 
  3.838032303637862*^9}},ExpressionUUID->"42961a46-4e53-4376-9745-\
243f146aa7f2"],

Cell[CellGroupData[{

Cell["Installation", "Subsection",
 CellChangeTimes->{
  3.838031785062216*^9},ExpressionUUID->"5f0be19f-804d-4402-8cfd-\
f1d5f3d8f1da"],

Cell["Install Using pip (Recommended) ", "Text",
 CellChangeTimes->{{3.838031810438716*^9, 
  3.8380318327011557`*^9}},ExpressionUUID->"77b67642-e26a-4389-bd6c-\
ef79a361fea0"],

Cell[TextData[StyleBox["$ pip install wolframclient",
 FontWeight->"Bold"]], "Program",
 CellChangeTimes->{{3.838027083134886*^9, 3.838027085882279*^9}, 
   3.8380318609514217`*^9},
 CellID->370690678,ExpressionUUID->"1028506b-ea3c-434a-854f-80193cf93cad"],

Cell["Install Using Git", "Text",
 CellChangeTimes->{{3.8380318827256737`*^9, 
  3.838031886869536*^9}},ExpressionUUID->"b6d4495e-fb29-4d9f-a04a-\
fda2179bc4c1"],

Cell[TextData[StyleBox["$ git clone \
git://github.com/WolframResearch/WolframClientForPython\n$ pip install .",
 FontWeight->"Bold"]], "Program",
 CellChangeTimes->{{3.838027083134886*^9, 3.838027085882279*^9}, 
   3.8380318609514217`*^9, {3.83803190776547*^9, 3.8380319197593184`*^9}},
 CellID->131310944,ExpressionUUID->"f73f927c-f708-4302-92b6-9b2a29185707"],

Cell[CellGroupData[{

Cell[BoxData["$InstallationDirectory"], "Input",
 CellChangeTimes->{{3.838032761343811*^9, 3.838032787982833*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"b78b9e29-bd76-4e53-9fea-c69ad918ca3b"],

Cell[BoxData["\<\"/usr/local/Wolfram/Mathematica/12.3\"\>"], "Output",
 CellChangeTimes->{3.8380327883210087`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d09ad200-fcca-4c0f-8954-53c7cdb2fbb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$InstallationDirectory", ",", "$Version"}], "}"}]], "Input",
 CellChangeTimes->{{3.8380328659125347`*^9, 3.838032865915103*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"f0471d8c-f04e-4dea-b03b-4ff936c3da7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/usr/local/Wolfram/Mathematica/12.3\"\>", 
   ",", "\<\"12.3.0 for Linux x86 (64-bit) (February 25, 2021)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.838032866815319*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"112f9ce8-dcc8-4e2d-93ef-0a3dd1b1c7f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{970.5, 528.},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "Openers" -> {
   "WorkflowHeader" -> {"0" -> Open, "1" -> Open, "2" -> Open}, 
    "NotesSection" -> Open}},
FrontEndVersion->"12.3 for Linux x86 (64-bit) (February 25, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f6f69070-86b2-4eab-ab7c-f5f2753f4195"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4467, 99, 75, "SlideShowNavigationBar",ExpressionUUID->"35efe13f-c88b-440f-ac50-cecc87c40273",
   CellTags->"SlideShowHeader"],
  Cell[292966, 4854, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4fd265e9-dcc4-4bbe-8cbc-37a71da76aa1",
   CellTags->"SlideShowHeader"],
  Cell[293974, 4885, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4dc3f56f-6ff5-4f90-912e-1e7acad1f237",
   CellTags->"SlideShowHeader"],
  Cell[329505, 5486, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22ab6866-1bf4-46f3-a2e4-44edcfb485ae",
   CellTags->"SlideShowHeader"],
  Cell[383912, 6406, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ebe74292-68f7-414d-98de-008ea64e4783",
   CellTags->"SlideShowHeader"],
  Cell[463454, 7760, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e8b99d73-bd0e-4cbd-bbe7-af79d0737648",
   CellTags->"SlideShowHeader"],
  Cell[495667, 8426, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"305177db-3290-46c2-9076-3319f788a5db",
   CellTags->"SlideShowHeader"],
  Cell[499524, 8510, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"92fde9c9-ceac-44a1-8201-fc8c1cf975df",
   CellTags->"SlideShowHeader"],
  Cell[630195, 10984, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f3ada9cb-0ba7-40bf-9ef0-618587bf8588",
   CellTags->"SlideShowHeader"],
  Cell[666356, 11715, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9c907b66-3312-445e-bc7f-afaaeb999e35",
   CellTags->"SlideShowHeader"],
  Cell[668867, 11784, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9e4fce37-ccf2-4b67-8e1e-d09ceba2ea79",
   CellTags->"SlideShowHeader"],
  Cell[671576, 11860, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d4b68a4c-5be1-4a31-b6d1-40af306abdd0",
   CellTags->"SlideShowHeader"],
  Cell[694784, 12271, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"32648a55-e6e2-46fa-8413-2dc75d3d0b47",
   CellTags->"SlideShowHeader"],
  Cell[697882, 12353, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3e2695b-2ba4-412c-a88a-4329c237f900",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 702234, 12465}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4467, 99, 75, "SlideShowNavigationBar",ExpressionUUID->"35efe13f-c88b-440f-ac50-cecc87c40273",
 CellTags->"SlideShowHeader"],
Cell[5050, 123, 375, 6, 98, "Title",ExpressionUUID->"8afc08d9-f262-414d-8c54-38ac80053bc3"],
Cell[5428, 131, 287501, 4718, 151, "Input",ExpressionUUID->"dc8e6514-44c2-4965-8fca-4e67717c4dde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292966, 4854, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4fd265e9-dcc4-4bbe-8cbc-37a71da76aa1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[293113, 4860, 256, 4, 68, "Section",ExpressionUUID->"a2f16bd8-6209-427f-8c19-c228c3b49a94"],
Cell[293372, 4866, 160, 3, 54, "Subsection",ExpressionUUID->"1125082d-2458-49f5-a9d2-32189f25135e"],
Cell[293535, 4871, 206, 3, 38, "Subsection",ExpressionUUID->"29dc7f6f-68f5-438d-9595-02d44051db18"],
Cell[293744, 4876, 181, 3, 38, "Subsection",ExpressionUUID->"a7762f3e-77c5-4a75-9061-4f89ba863c23"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293974, 4885, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4dc3f56f-6ff5-4f90-912e-1e7acad1f237",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[294121, 4891, 311, 5, 68, "Section",ExpressionUUID->"fb4c103c-4a70-4a04-bc34-74cf5d342308"],
Cell[294435, 4898, 34598, 571, 275, "Input",ExpressionUUID->"b79049af-9705-4383-a752-04c647288760"],
Cell[329036, 5471, 239, 4, 32, "Item",ExpressionUUID->"85ac1851-103c-462e-83ee-4a31ebbbcb50"],
Cell[329278, 5477, 178, 3, 32, "Item",ExpressionUUID->"013a9c95-13b6-4321-934f-2388dfcff546"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329505, 5486, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22ab6866-1bf4-46f3-a2e4-44edcfb485ae",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[329652, 5492, 282, 4, 54, "Subsection",ExpressionUUID->"6587d1f1-9a94-40db-8ff5-cbfafb6d38dd"],
Cell[329937, 5498, 847, 17, 173, "Text",ExpressionUUID->"c8f326cd-33dd-4f52-8fb8-bc7cf3a33a77"],
Cell[CellGroupData[{
Cell[330809, 5519, 585, 12, 48, "Input",ExpressionUUID->"68b72466-fc3e-43d1-84e8-a8f3cdcb4989"],
Cell[331397, 5533, 52457, 866, 109, "Output",ExpressionUUID->"c06136c3-348a-4912-968c-30cf4608dac6"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383912, 6406, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ebe74292-68f7-414d-98de-008ea64e4783",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[384059, 6412, 410, 6, 54, "Subsection",ExpressionUUID->"3096e40d-10d8-4a4f-9f64-cd5513765b29"],
Cell[384472, 6420, 7913, 140, 123, "Text",ExpressionUUID->"c24244db-91ad-4c85-914e-8856ac638257"],
Cell[CellGroupData[{
Cell[392410, 6564, 239, 4, 32, "Item",ExpressionUUID->"b32b214b-34b2-4257-9075-51444df50a8b"],
Cell[392652, 6570, 254, 4, 26, "Subitem",ExpressionUUID->"f0d7605a-1a58-41c7-8290-8ff96041af1e"],
Cell[392909, 6576, 256, 4, 26, "Subitem",ExpressionUUID->"8c693184-948a-4a52-a3be-528129ce28ec"]
}, Open  ]],
Cell[393180, 6583, 444, 6, 32, "Item",ExpressionUUID->"6337176d-4865-429b-86bb-75321b4311d3"],
Cell[393627, 6591, 654, 11, 32, "Item",ExpressionUUID->"8a93cb2e-8040-4f8c-b294-5cade920adbb"],
Cell[394284, 6604, 67793, 1120, 131, "Text",ExpressionUUID->"e80ad072-2f97-46ab-947b-28d5843ef63b"],
Cell[462080, 7726, 446, 9, 32, "Item",ExpressionUUID->"6d207b0a-9150-420a-b09c-72b09f32050f"],
Cell[462529, 7737, 412, 6, 32, "Item",ExpressionUUID->"f0e9e958-f7dd-4045-8b77-23aebcfe4544"],
Cell[462944, 7745, 461, 9, 32, "Item",ExpressionUUID->"8aae3c51-df2b-4038-a43c-16f326044dd7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463454, 7760, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e8b99d73-bd0e-4cbd-bbe7-af79d0737648",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[463601, 7766, 473, 7, 54, "Subsection",ExpressionUUID->"d13e2aaa-8981-4703-998a-6175ad61661d"],
Cell[464077, 7775, 627, 11, 32, "Item",ExpressionUUID->"8edbe766-5db3-4abd-bfdc-67c843ba0f44"],
Cell[464707, 7788, 659, 12, 53, "Item",ExpressionUUID->"fe792ebe-4da1-4144-8605-e76f5aebba7c"],
Cell[CellGroupData[{
Cell[465391, 7804, 576, 8, 32, "Item",ExpressionUUID->"7a7e5c8f-6d45-4483-bea1-6925fedbdbe2"],
Cell[465970, 7814, 500, 8, 26, "Subitem",ExpressionUUID->"b2e582ea-3c51-47f5-9c91-92fa7fba3d7e"],
Cell[466473, 7824, 501, 8, 26, "Subitem",ExpressionUUID->"02c6be70-4285-4f6e-ba6f-f9e5fb427b51"],
Cell[466977, 7834, 499, 8, 26, "Subitem",ExpressionUUID->"28b95ff7-5b4a-4003-ade3-2916f31c2ac4"],
Cell[467479, 7844, 498, 8, 26, "Subitem",ExpressionUUID->"08e1e3c0-147c-47e8-87d4-2ab1f432c87d"],
Cell[467980, 7854, 495, 8, 26, "Subitem",ExpressionUUID->"a25122dc-7dcd-491b-9b63-472bc2f8d648"],
Cell[468478, 7864, 499, 8, 26, "Subitem",ExpressionUUID->"b45efe63-ce52-45ab-9bfa-70f591f1e3ff"],
Cell[468980, 7874, 500, 8, 26, "Subitem",ExpressionUUID->"fca6ac16-8e4b-46be-9c6b-0d58bf3fdae0"],
Cell[469483, 7884, 499, 8, 26, "Subitem",ExpressionUUID->"065f38d9-27d1-4d64-b81f-a6b5d3fb6bd4"],
Cell[CellGroupData[{
Cell[470007, 7896, 499, 8, 26, "Subitem",ExpressionUUID->"c6e2db33-59cc-49c7-ba5f-a5ed7e3286c6"],
Cell[CellGroupData[{
Cell[470531, 7908, 206, 3, 29, "Input",ExpressionUUID->"d33e88d8-8091-4081-bf42-57df75f716be"],
Cell[470740, 7913, 22915, 451, 322, "Output",ExpressionUUID->"eccfb03a-6896-4251-9d9a-2e722bc9a784"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[493694, 8369, 142, 3, 35, "Text",ExpressionUUID->"55a39328-92bf-48f6-8ea5-f6734d73282e"],
Cell[493839, 8374, 219, 4, 35, "Text",ExpressionUUID->"26c9abd7-c415-452d-8bd1-159d718f0fcd",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[494083, 8382, 258, 4, 51, "Code",ExpressionUUID->"1d567dae-4b41-4a73-b207-e7a6633490e9"],
Cell[494344, 8388, 149, 2, 33, "Output",ExpressionUUID->"0698622f-8945-450d-9b49-e0144bdd4f8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494530, 8395, 343, 6, 51, "Code",ExpressionUUID->"2829e533-8b49-462d-874a-62d421456f1b",
 InitializationCell->True],
Cell[494876, 8403, 499, 11, 22, "Message",ExpressionUUID->"8b3e3db5-5b1a-4db8-adc6-6b39da1aa31e"],
Cell[495378, 8416, 228, 3, 33, "Output",ExpressionUUID->"10b0dd69-5cbc-4070-8dd1-8cfb185ac36c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495667, 8426, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"305177db-3290-46c2-9076-3319f788a5db",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[495814, 8432, 592, 8, 54, "Subsection",ExpressionUUID->"3517b571-2e3a-4071-aa2e-2386de62949a"],
Cell[496409, 8442, 659, 11, 32, "Item",ExpressionUUID->"97ea6169-9cb1-4fab-a049-99508857f445"],
Cell[497071, 8455, 635, 9, 32, "Item",ExpressionUUID->"8c4504c5-715f-4c94-b394-4dec07a05a88"],
Cell[497709, 8466, 220, 3, 49, "Program",ExpressionUUID->"dc89a988-e648-447d-b7d0-d4d31dcd1064",
 CellID->179385132],
Cell[CellGroupData[{
Cell[497954, 8473, 687, 10, 32, "Item",ExpressionUUID->"3c0a9cef-5458-40cf-88dd-afdadc60f072"],
Cell[498644, 8485, 819, 18, 33, "Input",ExpressionUUID->"bc1d1e51-d3f4-4a2b-86c9-e4fa1ed11c76"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499524, 8510, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"92fde9c9-ceac-44a1-8201-fc8c1cf975df",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[499671, 8516, 634, 9, 54, "Subsection",ExpressionUUID->"fc241cee-af91-497a-b0e9-e1506946c6df"],
Cell[CellGroupData[{
Cell[500330, 8529, 778, 13, 32, "Item",ExpressionUUID->"bb8d0df0-2dfb-4493-914b-fae4fd71a649"],
Cell[CellGroupData[{
Cell[501133, 8546, 245, 6, 67, "ExternalLanguage",ExpressionUUID->"ed745a3d-0f93-4e8f-8790-b0c90c0ccf4c"],
Cell[501381, 8554, 166, 2, 33, "Output",ExpressionUUID->"ee844701-3aa5-48d6-ad5d-ab6955efde4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501584, 8561, 236, 3, 50, "ExternalLanguage",ExpressionUUID->"41d41483-a36a-48bb-9f9a-da8057afe351"],
Cell[501823, 8566, 347, 7, 33, "Output",ExpressionUUID->"2349af8a-89fa-4012-aa47-51ba003c995d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502219, 8579, 822, 13, 32, "Item",ExpressionUUID->"2deec565-dc4a-4371-a76c-52a6b55a7e1a"],
Cell[CellGroupData[{
Cell[503066, 8596, 343, 7, 29, "Input",ExpressionUUID->"b6ed90c6-564a-483f-8b7d-2a6aea5ada0e"],
Cell[503412, 8605, 29984, 570, 67, "Output",ExpressionUUID->"b54b7b6e-1c0f-4476-b6bb-677c57733e06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533433, 9180, 200, 3, 29, "Input",ExpressionUUID->"26fdae9b-33de-4604-ad77-446c69714385"],
Cell[533636, 9185, 20300, 298, 51, "Message",ExpressionUUID->"b59bd203-1c7a-4350-a7d1-f4a3270aec59"],
Cell[553939, 9485, 176, 2, 33, "Output",ExpressionUUID->"2dfe37ca-66a4-4d79-bd02-79af3641a699"]
}, Open  ]]
}, Open  ]],
Cell[554142, 9491, 238, 6, 35, "Text",ExpressionUUID->"eb09871b-507f-4506-a444-3fa028525cb8"],
Cell[CellGroupData[{
Cell[554405, 9501, 193, 3, 29, "Input",ExpressionUUID->"683948a3-3568-4a55-8b68-a084a3cb74c5"],
Cell[554601, 9506, 33407, 652, 65, "Output",ExpressionUUID->"91857f96-ed4a-4b11-8c1a-1ade7c03a775"]
}, Open  ]],
Cell[588023, 10161, 173, 3, 35, "Text",ExpressionUUID->"4c00a6ea-203e-48f5-8ed8-7cbca4809646"],
Cell[CellGroupData[{
Cell[588221, 10168, 308, 6, 29, "Input",ExpressionUUID->"ede8eb57-42ee-49a9-94cf-51add523365a"],
Cell[588532, 10176, 40636, 772, 67, "Output",ExpressionUUID->"5bf2e608-5eab-4280-a89c-f0a025cd1905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629205, 10953, 200, 3, 29, "Input",ExpressionUUID->"1a4b0119-d80c-4df0-935e-448566ed2c3b"],
Cell[629408, 10958, 199, 3, 33, "Output",ExpressionUUID->"6d8228e9-e2e1-4e03-bd80-bee533a6673c"]
}, Open  ]],
Cell[629622, 10964, 371, 10, 38, "Text",ExpressionUUID->"98a8c992-d2df-4f2b-948c-6e725e549f56"],
Cell[629996, 10976, 150, 2, 29, "Input",ExpressionUUID->"d1e46028-f4df-489e-bfc6-47e4efdd7bfa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[630195, 10984, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f3ada9cb-0ba7-40bf-9ef0-618587bf8588",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[630342, 10990, 753, 12, 54, "Subsection",ExpressionUUID->"f85bf9cd-2bd7-420d-b9d9-29f90c5c6e23"],
Cell[631098, 11004, 227, 4, 35, "Text",ExpressionUUID->"988da2f5-f097-4614-9b9c-3c4d1861b1df"],
Cell[CellGroupData[{
Cell[631350, 11012, 193, 3, 29, "Input",ExpressionUUID->"0debd247-6d1a-4aa1-98d5-fffd3c20cdde"],
Cell[631546, 11017, 33409, 652, 65, "Output",ExpressionUUID->"46306a2f-727e-4e63-8ac3-6d3d33099af1"]
}, Open  ]],
Cell[664970, 11672, 173, 3, 35, "Text",ExpressionUUID->"82703989-e6e2-4b49-a4bd-c439f78898fd"],
Cell[CellGroupData[{
Cell[665168, 11679, 449, 10, 29, "Input",ExpressionUUID->"993c553c-80a2-417e-afe2-7e3418575042"],
Cell[665620, 11691, 255, 5, 23, "Print",ExpressionUUID->"f87a1a12-22db-443e-9f57-78bfc87f1cb3"]
}, Open  ]],
Cell[665890, 11699, 264, 6, 34, "Text",ExpressionUUID->"37457342-e33b-466e-be68-210ccecf654d"],
Cell[666157, 11707, 150, 2, 29, "Input",ExpressionUUID->"34f74799-cc53-4709-8c21-03d5adebf1be"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666356, 11715, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9c907b66-3312-445e-bc7f-afaaeb999e35",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[666503, 11721, 891, 15, 54, "Subsection",ExpressionUUID->"f2c4ad80-8874-45c2-aad8-51cef9df8946"],
Cell[CellGroupData[{
Cell[667419, 11740, 284, 6, 67, "ExternalLanguage",ExpressionUUID->"f16b49f2-61d2-42e7-828a-a468de0310bf"],
Cell[667706, 11748, 700, 17, 42, "Output",ExpressionUUID->"46b705b6-884f-46e3-ab89-dc91ac67e802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668443, 11770, 202, 3, 29, "Input",ExpressionUUID->"ca630670-f55d-4869-8915-097c1f78430b"],
Cell[668648, 11775, 158, 2, 33, "Output",ExpressionUUID->"6be31a69-0027-4f74-9b01-d818a9d94508"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[668867, 11784, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9e4fce37-ccf2-4b67-8e1e-d09ceba2ea79",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[669014, 11790, 1112, 22, 60, "Subsection",ExpressionUUID->"6c5ca60b-74ef-4b59-83da-067523475cf0"],
Cell[CellGroupData[{
Cell[670151, 11816, 204, 3, 29, "Input",ExpressionUUID->"4d7f4a3e-0a86-47b3-8227-c6a8ae308254"],
Cell[670358, 11821, 151, 2, 33, "Output",ExpressionUUID->"e5bb447a-a568-4ac5-ae69-9fc443f14cbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670546, 11828, 205, 3, 29, "Input",ExpressionUUID->"fc7eb94c-9461-4b90-a035-c0c5aa229ffc"],
Cell[670754, 11833, 150, 2, 33, "Output",ExpressionUUID->"f7545549-9619-4683-8342-5cf27d502bfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670941, 11840, 225, 3, 50, "ExternalLanguage",ExpressionUUID->"068f81cd-b9a0-4e05-bdac-f59210f8e2ac"],
Cell[671169, 11845, 178, 2, 33, "Output",ExpressionUUID->"1fa94867-d1ce-4dc3-b4cd-38cae39ff142"]
}, Open  ]],
Cell[671362, 11850, 165, 4, 50, "ExternalLanguage",ExpressionUUID->"a2bdbf35-eb6a-4fc6-aa55-70c507ded1bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671576, 11860, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d4b68a4c-5be1-4a31-b6d1-40af306abdd0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[671723, 11866, 858, 12, 68, "Section",ExpressionUUID->"42430d79-ba9e-405c-a709-48133686ad6d"],
Cell[672584, 11880, 191, 3, 32, "Item",ExpressionUUID->"6ea63029-107c-4275-8979-2e75f0a4ea92"],
Cell[672778, 11885, 192, 3, 32, "Item",ExpressionUUID->"bb921b99-94d8-4430-914f-9c6145dc1c7d"],
Cell[672973, 11890, 158, 3, 32, "Item",ExpressionUUID->"1b3d973f-a3be-474e-bb11-e002ea6b0c10"],
Cell[673134, 11895, 162, 3, 32, "Item",ExpressionUUID->"674e117e-577b-4096-9a1c-36f561ed9fb9"],
Cell[CellGroupData[{
Cell[673321, 11902, 387, 11, 53, "Item",ExpressionUUID->"05834823-fd07-4858-b7b4-4e5acd4c2791"],
Cell[673711, 11915, 21012, 349, 130, "Input",ExpressionUUID->"f219b3d8-6c47-41f3-ad0a-6ea8fe1dadf3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694784, 12271, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"32648a55-e6e2-46fa-8413-2dc75d3d0b47",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[694931, 12277, 858, 12, 68, "Section",ExpressionUUID->"dc6814ba-6e9f-434b-a7bc-1c6186f87091"],
Cell[CellGroupData[{
Cell[695814, 12293, 212, 4, 54, "Subsection",ExpressionUUID->"e727546e-2335-4432-a6c6-a8a20cc7f9fa"],
Cell[696029, 12299, 214, 4, 32, "Item",ExpressionUUID->"167fdfa6-a6dd-4cb6-94b5-ae1342766cd5"],
Cell[696246, 12305, 225, 4, 32, "Item",ExpressionUUID->"2cb09839-9e6f-4a96-ac95-49bd12950953"],
Cell[696474, 12311, 206, 4, 32, "Item",ExpressionUUID->"2210c56b-6bdc-4cc5-8a12-c8338ca86990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696717, 12320, 136, 3, 54, "Subsection",ExpressionUUID->"55092274-87d6-454d-8406-8b954c2023f7"],
Cell[696856, 12325, 176, 3, 35, "Text",ExpressionUUID->"f642890d-550b-4aa6-bae2-9a26a3c4aa0f"],
Cell[697035, 12330, 257, 4, 49, "Program",ExpressionUUID->"6066fa28-d671-4297-bbc8-c4d60fc38c7d",
 CellID->1966060790],
Cell[697295, 12336, 161, 3, 35, "Text",ExpressionUUID->"5d374f98-a5cf-4bfa-af90-2eec99d473f4"],
Cell[697459, 12341, 362, 5, 66, "Program",ExpressionUUID->"651577de-e316-473b-80f2-03541a8e1b19",
 CellID->510991091]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[697882, 12353, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3e2695b-2ba4-412c-a88a-4329c237f900",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[698029, 12359, 858, 12, 68, "Section",ExpressionUUID->"e227e457-4e96-4a4e-96f0-b6a86722c384"],
Cell[698890, 12373, 312, 6, 32, "Item",ExpressionUUID->"cc47793e-e6df-4a47-a62a-5e13ce1728f9"],
Cell[699205, 12381, 315, 5, 32, "Item",ExpressionUUID->"42961a46-4e53-4376-9745-243f146aa7f2"],
Cell[CellGroupData[{
Cell[699545, 12390, 136, 3, 54, "Subsection",ExpressionUUID->"5f0be19f-804d-4402-8cfd-f1d5f3d8f1da"],
Cell[699684, 12395, 176, 3, 35, "Text",ExpressionUUID->"77b67642-e26a-4389-bd6c-ef79a361fea0"],
Cell[699863, 12400, 256, 4, 49, "Program",ExpressionUUID->"1028506b-ea3c-434a-854f-80193cf93cad",
 CellID->370690678],
Cell[700122, 12406, 161, 3, 35, "Text",ExpressionUUID->"b6d4495e-fb29-4d9f-a04a-fda2179bc4c1"],
Cell[700286, 12411, 362, 5, 66, "Program",ExpressionUUID->"f73f927c-f708-4302-92b6-9b2a29185707",
 CellID->131310944],
Cell[CellGroupData[{
Cell[700673, 12420, 193, 2, 29, "Input",ExpressionUUID->"b78b9e29-bd76-4e53-9fea-c69ad918ca3b"],
Cell[700869, 12424, 193, 2, 33, "Output",ExpressionUUID->"d09ad200-fcca-4c0f-8954-53c7cdb2fbb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701099, 12431, 247, 4, 29, "Input",ExpressionUUID->"f0471d8c-f04e-4dea-b03b-4ff936c3da7e"],
Cell[701349, 12437, 299, 6, 33, "Output",ExpressionUUID->"112f9ce8-dcc8-4e2d-93ef-0a3dd1b1c7f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

